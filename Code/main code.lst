0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Dec 11 2012) (MSVC)
<<<<<<< HEAD
0000              4   ; This file was generated Fri Mar 20 21:02:28 2015
=======
0000              4   ; This file was generated Mon Mar 16 17:49:59 2015
>>>>>>> origin/zachs_branch
0000              5   ;--------------------------------------------------------
                  5   $name main_code
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _display_LCD
0000             29            public _Timer0ISR
0000             30            public _InitTimer0
0000             31            public _InitADC
0000             32            public _InitSerialPort
0000             33            public _Wait1S
0000             34            public _LCDprint
0000             35            public _LCD_8BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Wait50us
0000             42            public _InitPorts
0000             43            public _LCDprint_PARM_3
0000             44            public _line_counter_flag
0000             45            public _time_update_flag
0000             46            public _LCDprint_PARM_2
0000             47            public _line_timer
0000             48            public _pwm_right
0000             49            public _pwm_left
0000             50            public _pwmcount
0000             51            public _mins
0000             52            public _secs
0000             53            public _msCount
0000             54   ;--------------------------------------------------------
0000             55   ; Special Function Registers
0000             56   ;--------------------------------------------------------
0000             57   _ACC            DATA 0xe0
0000             58   _ADCON0         DATA 0x8e
0000             59   _ADCON1         DATA 0x97
0000             60   _ADINS          DATA 0xa3
0000             61   _ADMODA         DATA 0xc0
0000             62   _ADMODB         DATA 0xa1
0000             63   _AD0BH          DATA 0xbb
0000             64   _AD0BL          DATA 0xa6
0000             65   _AD0DAT0        DATA 0xc5
0000             66   _AD0DAT1        DATA 0xc6
0000             67   _AD0DAT2        DATA 0xc7
0000             68   _AD0DAT3        DATA 0xf4
0000             69   _AD1BH          DATA 0xc4
0000             70   _AD1BL          DATA 0xbc
0000             71   _AD1DAT0        DATA 0xd5
0000             72   _AD1DAT1        DATA 0xd6
0000             73   _AD1DAT2        DATA 0xd7
0000             74   _AD1DAT3        DATA 0xf5
0000             75   _AUXR1          DATA 0xa2
0000             76   _B              DATA 0xf0
0000             77   _BRGR0          DATA 0xbe
0000             78   _BRGR1          DATA 0xbf
0000             79   _BRGCON         DATA 0xbd
0000             80   _CCCRA          DATA 0xea
0000             81   _CCCRB          DATA 0xeb
0000             82   _CCCRC          DATA 0xec
0000             83   _CCCRD          DATA 0xed
0000             84   _CMP1           DATA 0xac
0000             85   _CMP2           DATA 0xad
0000             86   _DEECON         DATA 0xf1
0000             87   _DEEDAT         DATA 0xf2
0000             88   _DEEADR         DATA 0xf3
0000             89   _DIVM           DATA 0x95
0000             90   _DPH            DATA 0x83
0000             91   _DPL            DATA 0x82
0000             92   _FMADRH         DATA 0xe7
0000             93   _FMADRL         DATA 0xe6
0000             94   _FMCON          DATA 0xe4
0000             95   _FMDATA         DATA 0xe5
0000             96   _I2ADR          DATA 0xdb
0000             97   _I2CON          DATA 0xd8
0000             98   _I2DAT          DATA 0xda
0000             99   _I2SCLH         DATA 0xdd
0000            100   _I2SCLL         DATA 0xdc
0000            101   _I2STAT         DATA 0xd9
0000            102   _ICRAH          DATA 0xab
0000            103   _ICRAL          DATA 0xaa
0000            104   _ICRBH          DATA 0xaf
0000            105   _ICRBL          DATA 0xae
0000            106   _IEN0           DATA 0xa8
0000            107   _IEN1           DATA 0xe8
0000            108   _IP0            DATA 0xb8
0000            109   _IP0H           DATA 0xb7
0000            110   _IP1            DATA 0xf8
0000            111   _IP1H           DATA 0xf7
0000            112   _KBCON          DATA 0x94
0000            113   _KBMASK         DATA 0x86
0000            114   _KBPATN         DATA 0x93
0000            115   _OCRAH          DATA 0xef
0000            116   _OCRAL          DATA 0xee
0000            117   _OCRBH          DATA 0xfb
0000            118   _OCRBL          DATA 0xfa
0000            119   _OCRCH          DATA 0xfd
0000            120   _OCRCL          DATA 0xfc
0000            121   _OCRDH          DATA 0xff
0000            122   _OCRDL          DATA 0xfe
0000            123   _P0             DATA 0x80
0000            124   _P1             DATA 0x90
0000            125   _P2             DATA 0xa0
0000            126   _P3             DATA 0xb0
0000            127   _P0M1           DATA 0x84
0000            128   _P0M2           DATA 0x85
0000            129   _P1M1           DATA 0x91
0000            130   _P1M2           DATA 0x92
0000            131   _P2M1           DATA 0xa4
0000            132   _P2M2           DATA 0xa5
0000            133   _P3M1           DATA 0xb1
0000            134   _P3M2           DATA 0xb2
0000            135   _PCON           DATA 0x87
0000            136   _PCONA          DATA 0xb5
0000            137   _PSW            DATA 0xd0
0000            138   _PT0AD          DATA 0xf6
0000            139   _RSTSRC         DATA 0xdf
0000            140   _RTCCON         DATA 0xd1
0000            141   _RTCH           DATA 0xd2
0000            142   _RTCL           DATA 0xd3
0000            143   _SADDR          DATA 0xa9
0000            144   _SADEN          DATA 0xb9
0000            145   _SBUF           DATA 0x99
0000            146   _SCON           DATA 0x98
0000            147   _SSTAT          DATA 0xba
0000            148   _SP             DATA 0x81
0000            149   _SPCTL          DATA 0xe2
0000            150   _SPSTAT         DATA 0xe1
0000            151   _SPDAT          DATA 0xe3
0000            152   _TAMOD          DATA 0x8f
0000            153   _TCON           DATA 0x88
0000            154   _TCR20          DATA 0xc8
0000            155   _TCR21          DATA 0xf9
0000            156   _TH0            DATA 0x8c
0000            157   _TH1            DATA 0x8d
0000            158   _TH2            DATA 0xcd
0000            159   _TICR2          DATA 0xc9
0000            160   _TIFR2          DATA 0xe9
0000            161   _TISE2          DATA 0xde
0000            162   _TL0            DATA 0x8a
0000            163   _TL1            DATA 0x8b
0000            164   _TL2            DATA 0xcc
0000            165   _TMOD           DATA 0x89
0000            166   _TOR2H          DATA 0xcf
0000            167   _TOR2L          DATA 0xce
0000            168   _TPCR2H         DATA 0xcb
0000            169   _TPCR2L         DATA 0xca
0000            170   _TRIM           DATA 0x96
0000            171   _WDCON          DATA 0xa7
0000            172   _WDL            DATA 0xc1
0000            173   _WFEED1         DATA 0xc2
0000            174   _WFEED2         DATA 0xc3
0000            175   ;--------------------------------------------------------
0000            176   ; special function bits
0000            177   ;--------------------------------------------------------
0000            178   _ACC_7          BIT 0xe7
0000            179   _ACC_6          BIT 0xe6
0000            180   _ACC_5          BIT 0xe5
0000            181   _ACC_4          BIT 0xe4
0000            182   _ACC_3          BIT 0xe3
0000            183   _ACC_2          BIT 0xe2
0000            184   _ACC_1          BIT 0xe1
0000            185   _ACC_0          BIT 0xe0
0000            186   _ADMODA_7       BIT 0xc7
0000            187   _ADMODA_6       BIT 0xc6
0000            188   _ADMODA_5       BIT 0xc5
0000            189   _ADMODA_4       BIT 0xc4
0000            190   _ADMODA_3       BIT 0xc3
0000            191   _ADMODA_2       BIT 0xc2
0000            192   _ADMODA_1       BIT 0xc1
0000            193   _ADMODA_0       BIT 0xc0
0000            194   _BNDI1          BIT 0xc7
0000            195   _BURST1         BIT 0xc6
0000            196   _SCC1           BIT 0xc5
0000            197   _SCAN1          BIT 0xc4
0000            198   _BNDI0          BIT 0xc3
0000            199   _BURST0         BIT 0xc2
0000            200   _SCC0           BIT 0xc1
0000            201   _SCAN0          BIT 0xc0
0000            202   _B_7            BIT 0xf7
0000            203   _B_6            BIT 0xf6
0000            204   _B_5            BIT 0xf5
0000            205   _B_4            BIT 0xf4
0000            206   _B_3            BIT 0xf3
0000            207   _B_2            BIT 0xf2
0000            208   _B_1            BIT 0xf1
0000            209   _B_0            BIT 0xf0
0000            210   _I2CON_7        BIT 0xdf
0000            211   _I2CON_6        BIT 0xde
0000            212   _I2CON_5        BIT 0xdd
0000            213   _I2CON_4        BIT 0xdc
0000            214   _I2CON_3        BIT 0xdb
0000            215   _I2CON_2        BIT 0xda
0000            216   _I2CON_1        BIT 0xd9
0000            217   _I2CON_0        BIT 0xd8
0000            218   _I2EN           BIT 0xde
0000            219   _STA            BIT 0xdd
0000            220   _STO            BIT 0xdc
0000            221   _SI             BIT 0xdb
0000            222   _AA             BIT 0xda
0000            223   _CRSEL          BIT 0xd8
0000            224   _IEN0_7         BIT 0xaf
0000            225   _IEN0_6         BIT 0xae
0000            226   _IEN0_5         BIT 0xad
0000            227   _IEN0_4         BIT 0xac
0000            228   _IEN0_3         BIT 0xab
0000            229   _IEN0_2         BIT 0xaa
0000            230   _IEN0_1         BIT 0xa9
0000            231   _IEN0_0         BIT 0xa8
0000            232   _EA             BIT 0xaf
0000            233   _EWDRT          BIT 0xae
0000            234   _EBO            BIT 0xad
0000            235   _ES             BIT 0xac
0000            236   _ESR            BIT 0xac
0000            237   _ET1            BIT 0xab
0000            238   _EX1            BIT 0xaa
0000            239   _ET0            BIT 0xa9
0000            240   _EX0            BIT 0xa8
0000            241   _IEN1_7         BIT 0xef
0000            242   _IEN1_6         BIT 0xee
0000            243   _IEN1_5         BIT 0xed
0000            244   _IEN1_4         BIT 0xec
0000            245   _IEN1_3         BIT 0xeb
0000            246   _IEN1_2         BIT 0xea
0000            247   _IEN1_1         BIT 0xe9
0000            248   _IEN1_0         BIT 0xe8
0000            249   _EADEE          BIT 0xef
0000            250   _EST            BIT 0xee
0000            251   _ECCU           BIT 0xec
0000            252   _ESPI           BIT 0xeb
0000            253   _EC             BIT 0xea
0000            254   _EKBI           BIT 0xe9
0000            255   _EI2C           BIT 0xe8
0000            256   _IP0_7          BIT 0xbf
0000            257   _IP0_6          BIT 0xbe
0000            258   _IP0_5          BIT 0xbd
0000            259   _IP0_4          BIT 0xbc
0000            260   _IP0_3          BIT 0xbb
0000            261   _IP0_2          BIT 0xba
0000            262   _IP0_1          BIT 0xb9
0000            263   _IP0_0          BIT 0xb8
0000            264   _PWDRT          BIT 0xbe
0000            265   _PBO            BIT 0xbd
0000            266   _PS             BIT 0xbc
0000            267   _PSR            BIT 0xbc
0000            268   _PT1            BIT 0xbb
0000            269   _PX1            BIT 0xba
0000            270   _PT0            BIT 0xb9
0000            271   _PX0            BIT 0xb8
0000            272   _IP1_7          BIT 0xff
0000            273   _IP1_6          BIT 0xfe
0000            274   _IP1_5          BIT 0xfd
0000            275   _IP1_4          BIT 0xfc
0000            276   _IP1_3          BIT 0xfb
0000            277   _IP1_2          BIT 0xfa
0000            278   _IP1_1          BIT 0xf9
0000            279   _IP1_0          BIT 0xf8
0000            280   _PADEE          BIT 0xff
0000            281   _PST            BIT 0xfe
0000            282   _PCCU           BIT 0xfc
0000            283   _PSPI           BIT 0xfb
0000            284   _PC             BIT 0xfa
0000            285   _PKBI           BIT 0xf9
0000            286   _PI2C           BIT 0xf8
0000            287   _P0_7           BIT 0x87
0000            288   _P0_6           BIT 0x86
0000            289   _P0_5           BIT 0x85
0000            290   _P0_4           BIT 0x84
0000            291   _P0_3           BIT 0x83
0000            292   _P0_2           BIT 0x82
0000            293   _P0_1           BIT 0x81
0000            294   _P0_0           BIT 0x80
0000            295   _T1             BIT 0x87
0000            296   _KB7            BIT 0x87
0000            297   _CMP_1          BIT 0x86
0000            298   _KB6            BIT 0x86
0000            299   _CMPREF         BIT 0x85
0000            300   _KB5            BIT 0x85
0000            301   _CIN1A          BIT 0x84
0000            302   _KB4            BIT 0x84
0000            303   _CIN1B          BIT 0x83
0000            304   _KB3            BIT 0x83
0000            305   _CIN2A          BIT 0x82
0000            306   _KB2            BIT 0x82
0000            307   _CIN2B          BIT 0x81
0000            308   _KB1            BIT 0x81
0000            309   _CMP_2          BIT 0x80
0000            310   _KB0            BIT 0x80
0000            311   _P1_7           BIT 0x97
0000            312   _P1_6           BIT 0x96
0000            313   _P1_5           BIT 0x95
0000            314   _P1_4           BIT 0x94
0000            315   _P1_3           BIT 0x93
0000            316   _P1_2           BIT 0x92
0000            317   _P1_1           BIT 0x91
0000            318   _P1_0           BIT 0x90
0000            319   _OCC            BIT 0x97
0000            320   _OCB            BIT 0x96
0000            321   _RST            BIT 0x95
0000            322   _INT1           BIT 0x94
0000            323   _INT0           BIT 0x93
0000            324   _SDA            BIT 0x93
0000            325   _T0             BIT 0x92
0000            326   _SCL            BIT 0x92
0000            327   _RXD            BIT 0x91
0000            328   _TXD            BIT 0x90
0000            329   _P2_7           BIT 0xa7
0000            330   _P2_6           BIT 0xa6
0000            331   _P2_5           BIT 0xa5
0000            332   _P2_4           BIT 0xa4
0000            333   _P2_3           BIT 0xa3
0000            334   _P2_2           BIT 0xa2
0000            335   _P2_1           BIT 0xa1
0000            336   _P2_0           BIT 0xa0
0000            337   _ICA            BIT 0xa7
0000            338   _OCA            BIT 0xa6
0000            339   _SPICLK         BIT 0xa5
0000            340   _SS             BIT 0xa4
0000            341   _MISO           BIT 0xa3
0000            342   _MOSI           BIT 0xa2
0000            343   _OCD            BIT 0xa1
0000            344   _ICB            BIT 0xa0
0000            345   _P3_7           BIT 0xb7
0000            346   _P3_6           BIT 0xb6
0000            347   _P3_5           BIT 0xb5
0000            348   _P3_4           BIT 0xb4
0000            349   _P3_3           BIT 0xb3
0000            350   _P3_2           BIT 0xb2
0000            351   _P3_1           BIT 0xb1
0000            352   _P3_0           BIT 0xb0
0000            353   _XTAL1          BIT 0xb1
0000            354   _XTAL2          BIT 0xb0
0000            355   _PSW_7          BIT 0xd7
0000            356   _PSW_6          BIT 0xd6
0000            357   _PSW_5          BIT 0xd5
0000            358   _PSW_4          BIT 0xd4
0000            359   _PSW_3          BIT 0xd3
0000            360   _PSW_2          BIT 0xd2
0000            361   _PSW_1          BIT 0xd1
0000            362   _PSW_0          BIT 0xd0
0000            363   _CY             BIT 0xd7
0000            364   _AC             BIT 0xd6
0000            365   _F0             BIT 0xd5
0000            366   _RS1            BIT 0xd4
0000            367   _RS0            BIT 0xd3
0000            368   _OV             BIT 0xd2
0000            369   _F1             BIT 0xd1
0000            370   _P              BIT 0xd0
0000            371   _SCON_7         BIT 0x9f
0000            372   _SCON_6         BIT 0x9e
0000            373   _SCON_5         BIT 0x9d
0000            374   _SCON_4         BIT 0x9c
0000            375   _SCON_3         BIT 0x9b
0000            376   _SCON_2         BIT 0x9a
0000            377   _SCON_1         BIT 0x99
0000            378   _SCON_0         BIT 0x98
0000            379   _SM0            BIT 0x9f
0000            380   _FE             BIT 0x9f
0000            381   _SM1            BIT 0x9e
0000            382   _SM2            BIT 0x9d
0000            383   _REN            BIT 0x9c
0000            384   _TB8            BIT 0x9b
0000            385   _RB8            BIT 0x9a
0000            386   _TI             BIT 0x99
0000            387   _RI             BIT 0x98
0000            388   _TCON_7         BIT 0x8f
0000            389   _TCON_6         BIT 0x8e
0000            390   _TCON_5         BIT 0x8d
0000            391   _TCON_4         BIT 0x8c
0000            392   _TCON_3         BIT 0x8b
0000            393   _TCON_2         BIT 0x8a
0000            394   _TCON_1         BIT 0x89
0000            395   _TCON_0         BIT 0x88
0000            396   _TF1            BIT 0x8f
0000            397   _TR1            BIT 0x8e
0000            398   _TF0            BIT 0x8d
0000            399   _TR0            BIT 0x8c
0000            400   _IE1            BIT 0x8b
0000            401   _IT1            BIT 0x8a
0000            402   _IE0            BIT 0x89
0000            403   _IT0            BIT 0x88
0000            404   _TCR20_7        BIT 0xcf
0000            405   _TCR20_6        BIT 0xce
0000            406   _TCR20_5        BIT 0xcd
0000            407   _TCR20_4        BIT 0xcc
0000            408   _TCR20_3        BIT 0xcb
0000            409   _TCR20_2        BIT 0xca
0000            410   _TCR20_1        BIT 0xc9
0000            411   _TCR20_0        BIT 0xc8
0000            412   _PLEEN          BIT 0xcf
0000            413   _HLTRN          BIT 0xce
0000            414   _HLTEN          BIT 0xcd
0000            415   _ALTCD          BIT 0xcc
0000            416   _ALTAB          BIT 0xcb
0000            417   _TDIR2          BIT 0xca
0000            418   _TMOD21         BIT 0xc9
0000            419   _TMOD20         BIT 0xc8
0000            420   ;--------------------------------------------------------
0000            421   ; overlayable register banks
0000            422   ;--------------------------------------------------------
0000            423            rbank0 segment data overlay
0000            424   ;--------------------------------------------------------
0000            425   ; internal ram data
0000            426   ;--------------------------------------------------------
0000            427            rseg R_DSEG
0000            428   _msCount:
0000            429            ds 2
0002            430   _secs:
0002            431            ds 1
0003            432   _mins:
0003            433            ds 1
0004            434   _pwmcount:
0004            435            ds 1
0005            436   _pwm_left:
0005            437            ds 1
0006            438   _pwm_right:
0006            439            ds 1
0007            440   _line_timer:
0007            441            ds 2
0009            442   _LCDprint_PARM_2:
0009            443            ds 1
000A            444   _display_LCD_buff_1_94:
000A            445            ds 17
001B            446   _main_cor_1_96:
001B            447            ds 4
001F            448   _main_cur_error_1_96:
001F            449            ds 4
0023            450   _main_pre_error_1_96:
0023            451            ds 4
0027            452   _main_new_speed_low_1_96:
0027            453            ds 4
002B            454   _main_new_speed_high_1_96:
002B            455            ds 4
002F            456   _main_exec_1_96:
002F            457            ds 2
0031            458   _main_start_1_96:
0031            459            ds 2
0033            460   _main_line_sensor_2_97:
0033            461            ds 4
0037            462   _main_left_2_97:
0037            463            ds 4
003B            464   _main_right_2_97:
003B            465            ds 4
003F            466   _main_sloc0_1_0:
003F            467            ds 1
0040            468   ;--------------------------------------------------------
0040            469   ; overlayable items in internal ram 
0040            470   ;--------------------------------------------------------
0000            471            rseg R_OSEG
0000            472   ;--------------------------------------------------------
0000            473   ; indirectly addressable internal ram data
0000            474   ;--------------------------------------------------------
0000            475            rseg R_ISEG
0000            476   ;--------------------------------------------------------
0000            477   ; absolute internal ram data
0000            478   ;--------------------------------------------------------
0000            479            DSEG
0000            480   ;--------------------------------------------------------
0000            481   ; bit data
0000            482   ;--------------------------------------------------------
0000            483            rseg R_BSEG
0000            484   _time_update_flag:
0000            485            DBIT    1
0001            486   _line_counter_flag:
0001            487            DBIT    1
0002            488   _LCDprint_PARM_3:
0002            489            DBIT    1
0003            490   ;--------------------------------------------------------
0003            491   ; paged external ram data
0003            492   ;--------------------------------------------------------
0000            493            rseg R_PSEG
0000            494   ;--------------------------------------------------------
0000            495   ; external ram data
0000            496   ;--------------------------------------------------------
0000            497            rseg R_XSEG
FFC8            498            XSEG at 0xffc8
FFC8            499   _BODCFG: ds 1
FFC9            500            public _BODCFG
0000            501            rseg R_XSEG
FFDE            502            XSEG at 0xffde
FFDE            503   _CLKCON: ds 1
FFDF            504            public _CLKCON
0000            505            rseg R_XSEG
FFE1            506            XSEG at 0xffe1
FFE1            507   _PGACON1: ds 1
FFE2            508            public _PGACON1
0000            509            rseg R_XSEG
FFE4            510            XSEG at 0xffe4
FFE4            511   _PGACON1B: ds 1
FFE5            512            public _PGACON1B
0000            513            rseg R_XSEG
FFE3            514            XSEG at 0xffe3
FFE3            515   _PGA1TRIM8X16X: ds 1
FFE4            516            public _PGA1TRIM8X16X
0000            517            rseg R_XSEG
FFE2            518            XSEG at 0xffe2
FFE2            519   _PGA1TRIM2X4X: ds 1
FFE3            520            public _PGA1TRIM2X4X
0000            521            rseg R_XSEG
FFCA            522            XSEG at 0xffca
FFCA            523   _PGACON0: ds 1
FFCB            524            public _PGACON0
0000            525            rseg R_XSEG
FFCE            526            XSEG at 0xffce
FFCE            527   _PGACON0B: ds 1
FFCF            528            public _PGACON0B
0000            529            rseg R_XSEG
FFCD            530            XSEG at 0xffcd
FFCD            531   _PGA0TRIM8X16X: ds 1
FFCE            532            public _PGA0TRIM8X16X
0000            533            rseg R_XSEG
FFCC            534            XSEG at 0xffcc
FFCC            535   _PGA0TRIM2X4X: ds 1
FFCD            536            public _PGA0TRIM2X4X
0000            537            rseg R_XSEG
FFBF            538            XSEG at 0xffbf
FFBF            539   _RTCDATH: ds 1
FFC0            540            public _RTCDATH
0000            541            rseg R_XSEG
FFBE            542            XSEG at 0xffbe
FFBE            543   _RTCDATL: ds 1
FFBF            544            public _RTCDATL
0000            545            rseg R_XSEG
0000            546   ;--------------------------------------------------------
0000            547   ; absolute external ram data
0000            548   ;--------------------------------------------------------
FFBF            549            XSEG
FFBF            550   ;--------------------------------------------------------
FFBF            551   ; external initialized ram data
FFBF            552   ;--------------------------------------------------------
0000            553            rseg R_IXSEG
0000            554            rseg R_HOME
0000            555            rseg R_GSINIT
0000            556            rseg R_CSEG
0000            557   ;--------------------------------------------------------
0000            558   ; Reset entry point and interrupt vectors
0000            559   ;--------------------------------------------------------
0000            560            CSEG at 0x0000
0000 020100     561            ljmp    _crt0
000B            562            CSEG at 0x000b
000B 020100     563            ljmp    _Timer0ISR
000E            564   ;--------------------------------------------------------
000E            565   ; global & static initialisations
000E            566   ;--------------------------------------------------------
0000            567            rseg R_HOME
0000            568            rseg R_GSINIT
0000            569            rseg R_GSINIT
0000            570   ;--------------------------------------------------------
0000            571   ; data variables initialization
0000            572   ;--------------------------------------------------------
0000            573            rseg R_DINIT
0000            574   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:33: volatile int msCount=0; // Volatiles can be changed by stuff outside our program, like memory registers
0000 E4         575            clr     a
0001 F558       576            mov     _msCount,a
0003 F559       577            mov     (_msCount + 1),a
0005            578   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:34: volatile unsigned char secs=0, mins=0; // They are like global variables, kinda 
0005 751800     579            mov     _secs,#0x00
0008            580   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:34: volatile bit time_update_flag=0;
0008 75D800     581            mov     _mins,#0x00
000B            582   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:40: volatile int line_timer = 0;
000B E4         583            clr     a
000C F5D8       584            mov     _line_timer,a
000E F5D9       585            mov     (_line_timer + 1),a
0010            586   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:35: volatile bit time_update_flag=0;
0010 C248       587            clr     _time_update_flag
0012            588   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:36: volatile bit line_counter_flag=0;
0012 C2F8       589            clr     _line_counter_flag
0014            590            ; The linker places a 'ret' at the end of segment R_DINIT.
0014            591   ;--------------------------------------------------------
0014            592   ; code
0014            593   ;--------------------------------------------------------
0000            594            rseg R_CSEG
0000            595   ;------------------------------------------------------------
0000            596   ;Allocation info for local variables in function 'InitPorts'
0000            597   ;------------------------------------------------------------
0000            598   ;------------------------------------------------------------
0000            599   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:42: void InitPorts(void)
0000            600   ;        -----------------------------------------
0000            601   ;         function InitPorts
0000            602   ;        -----------------------------------------
0000            603   _InitPorts:
0000            604            using   0
0000            605   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:44: P0M1=0x1E;
0000 75841E     606            mov     _P0M1,#0x1E
0003            607   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:45: P0M2=0x00;
0003 758500     608            mov     _P0M2,#0x00
0006            609   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:46: P1M1=0;
0006 759100     610            mov     _P1M1,#0x00
0009            611   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:47: P1M2=0;
0009 759200     612            mov     _P1M2,#0x00
000C            613   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:48: P2M1=0;
000C 75A400     614            mov     _P2M1,#0x00
000F            615   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:49: P2M2=0;
000F 75A500     616            mov     _P2M2,#0x00
0012            617   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:50: P3M1=0;
0012 75B100     618            mov     _P3M1,#0x00
0015            619   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:51: P3M2=0;
0015 75B200     620            mov     _P3M2,#0x00
0018 22         621            ret
0019            622   ;------------------------------------------------------------
0019            623   ;Allocation info for local variables in function 'Wait50us'
0019            624   ;------------------------------------------------------------
0019            625   ;------------------------------------------------------------
0019            626   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:54: void Wait50us (void)
0019            627   ;        -----------------------------------------
0019            628   ;         function Wait50us
0019            629   ;        -----------------------------------------
0019            630   _Wait50us:
0019            631   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:59: _endasm;
0019            632            
0019 7852       633             mov R0, #82
001B            634             L0:
001B D898       635            djnz R0, L0 ; 2 machine cycles-> 2*0.27126us*92=50us
001D            636             
001D 22         637            ret
001E            638   ;------------------------------------------------------------
001E            639   ;Allocation info for local variables in function 'waitms'
001E            640   ;------------------------------------------------------------
001E            641   ;ms                        Allocated to registers r2 r3 
001E            642   ;j                         Allocated to registers r4 r5 
001E            643   ;k                         Allocated to registers r6 
001E            644   ;------------------------------------------------------------
001E            645   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:62: void waitms (unsigned int ms)
001E            646   ;        -----------------------------------------
001E            647   ;         function waitms
001E            648   ;        -----------------------------------------
001E            649   _waitms:
001E AA82       650            mov     r2,dpl
0020 AB83       651            mov     r3,dph
0022            652   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:68: for(j=0; j<ms; j++)
0022 7C00       653            mov     r4,#0x00
0024 7D00       654            mov     r5,#0x00
0026            655   L004004?:
0026 C3         656            clr     c
0027 EC         657            mov     a,r4
0028 9A         658            subb    a,r2
0029 ED         659            mov     a,r5
002A 9B         660            subb    a,r3
002B 5001       661            jnc     L004008?
002D            662   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:69: for (k=0; k<20; k++) Wait50us();
002D 7E14       663            mov     r6,#0x14
002F            664   L004003?:
002F C002       665            push    ar2
0031 C003       666            push    ar3
0033 C004       667            push    ar4
0035 C005       668            push    ar5
0037 C006       669            push    ar6
0039 120100     670            lcall   _Wait50us
003C D006       671            pop     ar6
003E D005       672            pop     ar5
0040 D004       673            pop     ar4
0042 D003       674            pop     ar3
0044 D002       675            pop     ar2
0046 DED8       676            djnz    r6,L004003?
0048            677   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:68: for(j=0; j<ms; j++)
0048 0C         678            inc     r4
0049 BC0058     679            cjne    r4,#0x00,L004004?
004C 0D         680            inc     r5
004D 8001       681            sjmp    L004004?
004F            682   L004008?:
004F 22         683            ret
0050            684   ;------------------------------------------------------------
0050            685   ;Allocation info for local variables in function 'LCD_pulse'
0050            686   ;------------------------------------------------------------
0050            687   ;------------------------------------------------------------
0050            688   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:72: void LCD_pulse (void)
0050            689   ;        -----------------------------------------
0050            690   ;         function LCD_pulse
0050            691   ;        -----------------------------------------
0050            692   _LCD_pulse:
0050            693   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:74: LCD_E=1;
0050 D2A5       694            setb    _P2_5
0052            695   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:75: Wait50us();
0052 120100     696            lcall   _Wait50us
0055            697   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:76: LCD_E=0;
0055 C2A5       698            clr     _P2_5
0057 22         699            ret
0058            700   ;------------------------------------------------------------
0058            701   ;Allocation info for local variables in function 'LCD_byte'
0058            702   ;------------------------------------------------------------
0058            703   ;x                         Allocated to registers 
0058            704   ;------------------------------------------------------------
0058            705   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:79: void LCD_byte (unsigned char x)
0058            706   ;        -----------------------------------------
0058            707   ;         function LCD_byte
0058            708   ;        -----------------------------------------
0058            709   _LCD_byte:
0058 8582E0     710            mov     _ACC,dpl
005B            711   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:83: LCD_D7=ACC_7;
005B A2E7       712            mov     c,_ACC_7
005D 9294       713            mov     _P1_4,c
005F            714   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:84: LCD_D6=ACC_6;
005F A2E6       715            mov     c,_ACC_6
0061 9296       716            mov     _P1_6,c
0063            717   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:85: LCD_D5=ACC_5;
0063 A2E5       718            mov     c,_ACC_5
0065 9297       719            mov     _P1_7,c
0067            720   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:86: LCD_D4=ACC_4;
0067 A2E4       721            mov     c,_ACC_4
0069 92A0       722            mov     _P2_0,c
006B            723   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:87: LCD_D3=ACC_3;
006B A2E3       724            mov     c,_ACC_3
006D 92A1       725            mov     _P2_1,c
006F            726   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:88: LCD_D2=ACC_2;
006F A2E2       727            mov     c,_ACC_2
0071 92A2       728            mov     _P2_2,c
0073            729   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:89: LCD_D1=ACC_1;
0073 A2E1       730            mov     c,_ACC_1
0075 92A3       731            mov     _P2_3,c
0077            732   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:90: LCD_D0=ACC_0;
0077 A2E0       733            mov     c,_ACC_0
0079 92A4       734            mov     _P2_4,c
007B            735   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:91: LCD_pulse();
007B 020100     736            ljmp    _LCD_pulse
007E            737   ;------------------------------------------------------------
007E            738   ;Allocation info for local variables in function 'WriteData'
007E            739   ;------------------------------------------------------------
007E            740   ;x                         Allocated to registers r2 
007E            741   ;------------------------------------------------------------
007E            742   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:94: void WriteData (unsigned char x)
007E            743   ;        -----------------------------------------
007E            744   ;         function WriteData
007E            745   ;        -----------------------------------------
007E            746   _WriteData:
007E AA82       747            mov     r2,dpl
0080            748   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:96: LCD_RS=1;
0080 D2A7       749            setb    _P2_7
0082            750   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:97: LCD_byte(x);
0082 8A82       751            mov     dpl,r2
0084 120100     752            lcall   _LCD_byte
0087            753   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:98: waitms(2);
0087 900002     754            mov     dptr,#0x0002
008A 020100     755            ljmp    _waitms
008D            756   ;------------------------------------------------------------
008D            757   ;Allocation info for local variables in function 'WriteCommand'
008D            758   ;------------------------------------------------------------
008D            759   ;x                         Allocated to registers r2 
008D            760   ;------------------------------------------------------------
008D            761   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:101: void WriteCommand (unsigned char x)
008D            762   ;        -----------------------------------------
008D            763   ;         function WriteCommand
008D            764   ;        -----------------------------------------
008D            765   _WriteCommand:
008D AA82       766            mov     r2,dpl
008F            767   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:103: LCD_RS=0;
008F C2A7       768            clr     _P2_7
0091            769   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:104: LCD_byte(x);
0091 8A82       770            mov     dpl,r2
0093 120100     771            lcall   _LCD_byte
0096            772   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:105: waitms(5);
0096 900005     773            mov     dptr,#0x0005
0099 020100     774            ljmp    _waitms
009C            775   ;------------------------------------------------------------
009C            776   ;Allocation info for local variables in function 'LCD_8BIT'
009C            777   ;------------------------------------------------------------
009C            778   ;------------------------------------------------------------
009C            779   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:108: void LCD_8BIT (void)
009C            780   ;        -----------------------------------------
009C            781   ;         function LCD_8BIT
009C            782   ;        -----------------------------------------
009C            783   _LCD_8BIT:
009C            784   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:110: LCD_E=0;  // Resting state of LCD's enable is zero
009C C2A5       785            clr     _P2_5
009E            786   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:111: LCD_RW=0; // We are only writing to the LCD in this program
009E C2A6       787            clr     _P2_6
00A0            788   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:112: waitms(20);
00A0 900014     789            mov     dptr,#0x0014
00A3 120100     790            lcall   _waitms
00A6            791   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:114: WriteCommand(0x33);
00A6 758233     792            mov     dpl,#0x33
00A9 120100     793            lcall   _WriteCommand
00AC            794   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:115: WriteCommand(0x33);
00AC 758233     795            mov     dpl,#0x33
00AF 120100     796            lcall   _WriteCommand
00B2            797   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:116: WriteCommand(0x33); // Stay in 8-bit mode
00B2 758233     798            mov     dpl,#0x33
00B5 120100     799            lcall   _WriteCommand
00B8            800   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:119: WriteCommand(0x38);
00B8 758238     801            mov     dpl,#0x38
00BB 120100     802            lcall   _WriteCommand
00BE            803   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:120: WriteCommand(0x0c);
00BE 75820C     804            mov     dpl,#0x0C
00C1 120100     805            lcall   _WriteCommand
00C4            806   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:121: WriteCommand(0x01); // Clear screen command (takes some time)
00C4 758201     807            mov     dpl,#0x01
00C7 120100     808            lcall   _WriteCommand
00CA            809   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:122: waitms(20); // Wait for clear screen command to finsih.
00CA 900014     810            mov     dptr,#0x0014
00CD 020100     811            ljmp    _waitms
00D0            812   ;------------------------------------------------------------
00D0            813   ;Allocation info for local variables in function 'LCDprint'
00D0            814   ;------------------------------------------------------------
00D0            815   ;line                      Allocated with name '_LCDprint_PARM_2'
00D0            816   ;string                    Allocated to registers r2 r3 r4 
00D0            817   ;j                         Allocated to registers r5 
00D0            818   ;------------------------------------------------------------
00D0            819   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:125: void LCDprint(char * string, unsigned char line, bit clear)
00D0            820   ;        -----------------------------------------
00D0            821   ;         function LCDprint
00D0            822   ;        -----------------------------------------
00D0            823   _LCDprint:
00D0 AA82       824            mov     r2,dpl
00D2 AB83       825            mov     r3,dph
00D4 ACF0       826            mov     r4,b
00D6            827   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:129: WriteCommand(line==2?0xc0:0x80);
00D6 7402       828            mov     a,#0x02
00D8 B59858     829            cjne    a,_LCDprint_PARM_2,L010013?
00DB 7DC0       830            mov     r5,#0xC0
00DD 8001       831            sjmp    L010014?
00DF            832   L010013?:
00DF 7D80       833            mov     r5,#0x80
00E1            834   L010014?:
00E1 8D82       835            mov     dpl,r5
00E3 C002       836            push    ar2
00E5 C003       837            push    ar3
00E7 C004       838            push    ar4
00E9 120100     839            lcall   _WriteCommand
00EC            840   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:130: waitms(5);
00EC 900005     841            mov     dptr,#0x0005
00EF 120100     842            lcall   _waitms
00F2 D004       843            pop     ar4
00F4 D003       844            pop     ar3
00F6 D002       845            pop     ar2
00F8            846   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:131: for(j=0; string[j]!=0; j++)      WriteData(string[j]);// Write the message
00F8 7D00       847            mov     r5,#0x00
00FA            848   L010003?:
00FA ED         849            mov     a,r5
00FB 2A         850            add     a,r2
00FC FE         851            mov     r6,a
00FD E4         852            clr     a
00FE 3B         853            addc    a,r3
00FF FF         854            mov     r7,a
0100 8C00       855            mov     ar0,r4
0102 8E82       856            mov     dpl,r6
0104 8F83       857            mov     dph,r7
0106 88F0       858            mov     b,r0
0108 120100     859            lcall   __gptrget
010B FE         860            mov     r6,a
010C 6001       861            jz      L010006?
010E 8E82       862            mov     dpl,r6
0110 C002       863            push    ar2
0112 C003       864            push    ar3
0114 C004       865            push    ar4
0116 C005       866            push    ar5
0118 120100     867            lcall   _WriteData
011B D005       868            pop     ar5
011D D004       869            pop     ar4
011F D003       870            pop     ar3
0121 D002       871            pop     ar2
0123 0D         872            inc     r5
0124 8001       873            sjmp    L010003?
0126            874   L010006?:
0126            875   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:132: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0126 30A898     876            jnb     _LCDprint_PARM_3,L010011?
0129 8D02       877            mov     ar2,r5
012B            878   L010007?:
012B BA1018     879            cjne    r2,#0x10,L010026?
012E            880   L010026?:
012E 5001       881            jnc     L010011?
0130 758220     882            mov     dpl,#0x20
0133 C002       883            push    ar2
0135 120100     884            lcall   _WriteData
0138 D002       885            pop     ar2
013A 0A         886            inc     r2
013B 8001       887            sjmp    L010007?
013D            888   L010011?:
013D 22         889            ret
013E            890   ;------------------------------------------------------------
013E            891   ;Allocation info for local variables in function 'Wait1S'
013E            892   ;------------------------------------------------------------
013E            893   ;------------------------------------------------------------
013E            894   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:135: void Wait1S (void)
013E            895   ;        -----------------------------------------
013E            896   ;         function Wait1S
013E            897   ;        -----------------------------------------
013E            898   _Wait1S:
013E            899   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:144: _endasm;
013E            900            
013E 7A28       901             mov R2, #40
0140            902             L3:
0140 79FA       903            mov R1, #250
0142            904             L2:
0142 78B8       905            mov R0, #184
0144            906             L1:
0144 D8D8       907            djnz R0, L1 ; 2 machine cycles-> 2*0.27126us*184=100us
0146 D998       908             djnz R1, L2 ; 100us*250=0.025s
0148 DA58       909             djnz R2, L3 ; 0.025s*40=1s
014A            910             
014A 22         911            ret
014B            912   ;------------------------------------------------------------
014B            913   ;Allocation info for local variables in function 'InitSerialPort'
014B            914   ;------------------------------------------------------------
014B            915   ;------------------------------------------------------------
014B            916   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:147: void InitSerialPort(void)
014B            917   ;        -----------------------------------------
014B            918   ;         function InitSerialPort
014B            919   ;        -----------------------------------------
014B            920   _InitSerialPort:
014B            921   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:149: BRGCON=0x00; //Make sure the baud rate generator is off
014B 75BD00     922            mov     _BRGCON,#0x00
014E            923   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:150: BRGR1=((XTAL/BAUD)-16)/0x100;
014E 75BF00     924            mov     _BRGR1,#0x00
0151            925   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:151: BRGR0=((XTAL/BAUD)-16)%0x100;
0151 75BE30     926            mov     _BRGR0,#0x30
0154            927   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:152: BRGCON=0x03; //Turn-on the baud rate generator
0154 75BD03     928            mov     _BRGCON,#0x03
0157            929   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:153: SCON=0x52; //Serial port in mode 1, ren, txrdy, rxempty
0157 759852     930            mov     _SCON,#0x52
015A            931   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:154: P1M1=0x00; //Enable pins RxD and Txd
015A 759100     932            mov     _P1M1,#0x00
015D            933   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:155: P1M2=0x00; //Enable pins RxD and Txd
015D 759200     934            mov     _P1M2,#0x00
0160 22         935            ret
0161            936   ;------------------------------------------------------------
0161            937   ;Allocation info for local variables in function 'InitADC'
0161            938   ;------------------------------------------------------------
0161            939   ;------------------------------------------------------------
0161            940   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:158: void InitADC(void)
0161            941   ;        -----------------------------------------
0161            942   ;         function InitADC
0161            943   ;        -----------------------------------------
0161            944   _InitADC:
0161            945   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:162: P0M1 |= (P0M1_4 | P0M1_3 | P0M1_2 | P0M1_1);
0161 43841E     946            orl     _P0M1,#0x1E
0164            947   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:163: P0M2 &= ~(P0M1_4 | P0M1_3 | P0M1_2 | P0M1_1);
0164 5385E1     948            anl     _P0M2,#0xE1
0167            949   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:166: BURST1=1; //Autoscan continuous conversion mode
0167 D2C6       950            setb    _BURST1
0169            951   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:167: ADMODB = CLK0; //ADC1 clock is 7.3728MHz/2
0169 75A120     952            mov     _ADMODB,#0x20
016C            953   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:168: ADINS  = (ADI13|ADI12|ADI11|ADI10); // Select the four channels for conversion
016C 75A3F0     954            mov     _ADINS,#0xF0
016F            955   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:169: ADCON1 = (ENADC1|ADCS10); //Enable the converter and start immediately
016F 759705     956            mov     _ADCON1,#0x05
0172            957   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:170: while((ADCI1&ADCON1)==0); //Wait for first conversion to complete
0172            958   L013001?:
0172 E597       959            mov     a,_ADCON1
0174 30E318     960            jnb     acc.3,L013001?
0177 22         961            ret
0178            962   ;------------------------------------------------------------
0178            963   ;Allocation info for local variables in function 'InitTimer0'
0178            964   ;------------------------------------------------------------
0178            965   ;------------------------------------------------------------
0178            966   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:173: void InitTimer0 (void)
0178            967   ;        -----------------------------------------
0178            968   ;         function InitTimer0
0178            969   ;        -----------------------------------------
0178            970   _InitTimer0:
0178            971   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:177: TR0=0; // Stop timer 0
0178 C28C       972            clr     _TR0
017A            973   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:178: TMOD=(TMOD&0xf0)|0x01; // 16-bit timer
017A 74F0       974            mov     a,#0xF0
017C 5589       975            anl     a,_TMOD
017E 4401       976            orl     a,#0x01
0180 F589       977            mov     _TMOD,a
0182            978   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:179: TH0=TIMER0_RELOAD_VALUE/0x100; // I think the RHS is 0001 0000 0000, are we dividing?
0182 758CFE     979            mov     _TH0,#0xFE
0185            980   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:180: TL0=TIMER0_RELOAD_VALUE%0x100; // % means modulo, apparently? ...are we modulo-ing?
0185 758A90     981            mov     _TL0,#0x90
0188            982   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:181: TR0=1; // Start timer 0 (bit 4 in TCON)
0188 D28C       983            setb    _TR0
018A            984   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:182: ET0=1; // Enable timer 0 interrupt - the interrupt controller IEN0 is bit-adressable, so we change only the bit we need
018A D2A9       985            setb    _ET0
018C            986   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:183: EA=1;  // Enable global interrupts
018C D2AF       987            setb    _EA
018E 22         988            ret
018F            989   ;------------------------------------------------------------
018F            990   ;Allocation info for local variables in function 'Timer0ISR'
018F            991   ;------------------------------------------------------------
018F            992   ;------------------------------------------------------------
018F            993   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:187: void Timer0ISR (void) interrupt 1{
018F            994   ;        -----------------------------------------
018F            995   ;         function Timer0ISR
018F            996   ;        -----------------------------------------
018F            997   _Timer0ISR:
018F C0E0       998            push    acc
0191 C0D0       999            push    psw
0193 75D000    1000            mov     psw,#0x00
0196           1001   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:189: TR0=0; // Stop timer 0
0196 C28C      1002            clr     _TR0
0198           1003   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:190: TH0=TIMER0_RELOAD_VALUE/0x100;
0198 758CFE    1004            mov     _TH0,#0xFE
019B           1005   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:191: TL0=TIMER0_RELOAD_VALUE%0x100;
019B 758A90    1006            mov     _TL0,#0x90
019E           1007   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:192: TR0=1; // Start timer 0
019E D28C      1008            setb    _TR0
01A0           1009   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:194: if(++pwmcount>99) pwmcount=0;
01A0 0598      1010            inc     _pwmcount
01A2 E598      1011            mov     a,_pwmcount
01A4 249C      1012            add     a,#0xff - 0x63
01A6 5001      1013            jnc     L015002?
01A8 759800    1014            mov     _pwmcount,#0x00
01AB           1015   L015002?:
01AB           1016   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:195: P0_5=(pwm_left>pwmcount)?1:0;
01AB C3        1017            clr     c
01AC E598      1018            mov     a,_pwmcount
01AE 9558      1019            subb    a,_pwm_left
01B0 9285      1020            mov     _P0_5,c
01B2           1021   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:196: P0_6=(pwm_right>pwmcount)?1:0;
01B2 C3        1022            clr     c
01B3 E598      1023            mov     a,_pwmcount
01B5 9518      1024            subb    a,_pwm_right
01B7 9286      1025            mov     _P0_6,c
01B9           1026   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:198: msCount++;
01B9 7401      1027            mov     a,#0x01
01BB 2558      1028            add     a,_msCount
01BD F558      1029            mov     _msCount,a
01BF E4        1030            clr     a
01C0 3559      1031            addc    a,(_msCount + 1)
01C2 F559      1032            mov     (_msCount + 1),a
01C4           1033   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:199: if(msCount==10000)
01C4 7410      1034            mov     a,#0x10
01C6 B55818    1035            cjne    a,_msCount,L015008?
01C9 7427      1036            mov     a,#0x27
01CB B55918    1037            cjne    a,(_msCount + 1),L015008?
01CE           1038   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:201: time_update_flag=1;
01CE D248      1039            setb    _time_update_flag
01D0           1040   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:202: msCount=0;
01D0 E4        1041            clr     a
01D1 F558      1042            mov     _msCount,a
01D3 F559      1043            mov     (_msCount + 1),a
01D5           1044   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:203: secs++;
01D5 0518      1045            inc     _secs
01D7           1046   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:204: if(secs==60)
01D7 743C      1047            mov     a,#0x3C
01D9 B51818    1048            cjne    a,_secs,L015008?
01DC           1049   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:206: secs=0;
01DC 751800    1050            mov     _secs,#0x00
01DF           1051   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:207: mins++;
01DF 05D8      1052            inc     _mins
01E1           1053   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:208: if(mins==60)
01E1 743C      1054            mov     a,#0x3C
01E3 B5D818    1055            cjne    a,_mins,L015008?
01E6           1056   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:210: mins=0;
01E6 75D800    1057            mov     _mins,#0x00
01E9           1058   L015008?:
01E9           1059   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:215: if(line_counter_flag==1){
01E9 30F858    1060            jnb     _line_counter_flag,L015011?
01EC           1061   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:216: line_timer++;
01EC 7401      1062            mov     a,#0x01
01EE 25D8      1063            add     a,_line_timer
01F0 F5D8      1064            mov     _line_timer,a
01F2 E4        1065            clr     a
01F3 35D9      1066            addc    a,(_line_timer + 1)
01F5 F5D9      1067            mov     (_line_timer + 1),a
01F7           1068   L015011?:
01F7 D0D0      1069            pop     psw
01F9 D0E0      1070            pop     acc
01FB 32        1071            reti
01FC           1072   ;        eliminated unneeded push/pop dpl
01FC           1073   ;        eliminated unneeded push/pop dph
01FC           1074   ;        eliminated unneeded push/pop b
01FC           1075   ;------------------------------------------------------------
01FC           1076   ;Allocation info for local variables in function 'display_LCD'
01FC           1077   ;------------------------------------------------------------
01FC           1078   ;buff                      Allocated with name '_display_LCD_buff_1_94'
01FC           1079   ;------------------------------------------------------------
01FC           1080   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:220: void display_LCD(void){
01FC           1081   ;        -----------------------------------------
01FC           1082   ;         function display_LCD
01FC           1083   ;        -----------------------------------------
01FC           1084   _display_LCD:
01FC           1085   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:223: time_update_flag=0;
01FC C248      1086            clr     _time_update_flag
01FE           1087   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:224: sprintf(buff, "V=%5.2f", (AD1DAT0/255.0)*3.3); // Display the voltage at pin P0.1
01FE 85D582    1088            mov     dpl,_AD1DAT0
0201 120100    1089            lcall   ___uchar2fs
0204 AA82      1090            mov     r2,dpl
0206 AB83      1091            mov     r3,dph
0208 ACF0      1092            mov     r4,b
020A FD        1093            mov     r5,a
020B E4        1094            clr     a
020C C0E0      1095            push    acc
020E C0E0      1096            push    acc
0210 747F      1097            mov     a,#0x7F
0212 C0E0      1098            push    acc
0214 7443      1099            mov     a,#0x43
0216 C0E0      1100            push    acc
0218 8A82      1101            mov     dpl,r2
021A 8B83      1102            mov     dph,r3
021C 8CF0      1103            mov     b,r4
021E ED        1104            mov     a,r5
021F 120100    1105            lcall   ___fsdiv
0222 AA82      1106            mov     r2,dpl
0224 AB83      1107            mov     r3,dph
0226 ACF0      1108            mov     r4,b
0228 FD        1109            mov     r5,a
0229 E581      1110            mov     a,sp
022B 24FC      1111            add     a,#0xfc
022D F581      1112            mov     sp,a
022F C002      1113            push    ar2
0231 C003      1114            push    ar3
0233 C004      1115            push    ar4
0235 C005      1116            push    ar5
0237 903333    1117            mov     dptr,#0x3333
023A 75F053    1118            mov     b,#0x53
023D 7440      1119            mov     a,#0x40
023F 120100    1120            lcall   ___fsmul
0242 AA82      1121            mov     r2,dpl
0244 AB83      1122            mov     r3,dph
0246 ACF0      1123            mov     r4,b
0248 FD        1124            mov     r5,a
0249 E581      1125            mov     a,sp
024B 24FC      1126            add     a,#0xfc
024D F581      1127            mov     sp,a
024F C002      1128            push    ar2
0251 C003      1129            push    ar3
0253 C004      1130            push    ar4
0255 C005      1131            push    ar5
0257 7498      1132            mov     a,#__str_0
0259 C0E0      1133            push    acc
025B 74AC      1134            mov     a,#(__str_0 >> 8)
025D C0E0      1135            push    acc
025F 7480      1136            mov     a,#0x80
0261 C0E0      1137            push    acc
0263 74E8      1138            mov     a,#_display_LCD_buff_1_94
0265 C0E0      1139            push    acc
0267 749E      1140            mov     a,#(_display_LCD_buff_1_94 >> 8)
0269 C0E0      1141            push    acc
026B 7440      1142            mov     a,#0x40
026D C0E0      1143            push    acc
026F 120100    1144            lcall   _sprintf
0272 E581      1145            mov     a,sp
0274 24F6      1146            add     a,#0xf6
0276 F581      1147            mov     sp,a
0278           1148   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:225: LCDprint(buff, 1, 1);
0278 759801    1149            mov     _LCDprint_PARM_2,#0x01
027B D2A8      1150            setb    _LCDprint_PARM_3
027D 909EE8    1151            mov     dptr,#_display_LCD_buff_1_94
0280 75F040    1152            mov     b,#0x40
0283 120100    1153            lcall   _LCDprint
0286           1154   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:226: sprintf(buff, "%02d:%02d", mins, secs); // Display the clock
0286 AA18      1155            mov     r2,_secs
0288 7B00      1156            mov     r3,#0x00
028A ACD8      1157            mov     r4,_mins
028C 7D00      1158            mov     r5,#0x00
028E C002      1159            push    ar2
0290 C003      1160            push    ar3
0292 C004      1161            push    ar4
0294 C005      1162            push    ar5
0296 7418      1163            mov     a,#__str_1
0298 C0E0      1164            push    acc
029A 74AD      1165            mov     a,#(__str_1 >> 8)
029C C0E0      1166            push    acc
029E 7480      1167            mov     a,#0x80
02A0 C0E0      1168            push    acc
02A2 74E8      1169            mov     a,#_display_LCD_buff_1_94
02A4 C0E0      1170            push    acc
02A6 749E      1171            mov     a,#(_display_LCD_buff_1_94 >> 8)
02A8 C0E0      1172            push    acc
02AA 7440      1173            mov     a,#0x40
02AC C0E0      1174            push    acc
02AE 120100    1175            lcall   _sprintf
02B1 E581      1176            mov     a,sp
02B3 24F6      1177            add     a,#0xf6
02B5 F581      1178            mov     sp,a
02B7           1179   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:227: LCDprint(buff, 2, 1);
02B7 759802    1180            mov     _LCDprint_PARM_2,#0x02
02BA D2A8      1181            setb    _LCDprint_PARM_3
02BC 909EE8    1182            mov     dptr,#_display_LCD_buff_1_94
02BF 75F040    1183            mov     b,#0x40
02C2 020100    1184            ljmp    _LCDprint
02C5           1185   ;------------------------------------------------------------
02C5           1186   ;Allocation info for local variables in function 'main'
02C5           1187   ;------------------------------------------------------------
02C5           1188   ;k_p                       Allocated to registers 
02C5           1189   ;k_d                       Allocated to registers 
02C5           1190   ;cor                       Allocated with name '_main_cor_1_96'
02C5           1191   ;cur_error                 Allocated with name '_main_cur_error_1_96'
02C5           1192   ;pre_error                 Allocated with name '_main_pre_error_1_96'
02C5           1193   ;new_speed_low             Allocated with name '_main_new_speed_low_1_96'
02C5           1194   ;new_speed_high            Allocated with name '_main_new_speed_high_1_96'
02C5           1195   ;counter                   Allocated to registers 
02C5           1196   ;thresh                    Allocated to registers 
02C5           1197   ;line_counter              Allocated to registers r6 r7 
02C5           1198   ;exec                      Allocated with name '_main_exec_1_96'
02C5           1199   ;start                     Allocated with name '_main_start_1_96'
02C5           1200   ;line_sensor               Allocated with name '_main_line_sensor_2_97'
02C5           1201   ;left                      Allocated with name '_main_left_2_97'
02C5           1202   ;right                     Allocated with name '_main_right_2_97'
02C5           1203   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02C5           1204   ;------------------------------------------------------------
02C5           1205   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:230: void main (void){
02C5           1206   ;        -----------------------------------------
02C5           1207   ;         function main
02C5           1208   ;        -----------------------------------------
02C5           1209   _main:
02C5           1210   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:235: double cur_error =0;
02C5 757800    1211            mov     _main_cur_error_1_96,#0x00
02C8           1212   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:241: int line_counter = 0;
02C8           1213   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:242: int exec = 0;
02C8 E4        1214            clr     a
02C9 F579      1215            mov     (_main_cur_error_1_96 + 1),a
02CB F57A      1216            mov     (_main_cur_error_1_96 + 2),a
02CD F57B      1217            mov     (_main_cur_error_1_96 + 3),a
02CF FE        1218            mov     r6,a
02D0 FF        1219            mov     r7,a
02D1 F5A8      1220            mov     _main_exec_1_96,a
02D3 F5A9      1221            mov     (_main_exec_1_96 + 1),a
02D5           1222   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:246: InitPorts();
02D5 C006      1223            push    ar6
02D7 C007      1224            push    ar7
02D9 120100    1225            lcall   _InitPorts
02DC           1226   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:247: LCD_8BIT();
02DC 120100    1227            lcall   _LCD_8BIT
02DF           1228   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:248: InitSerialPort();
02DF 120100    1229            lcall   _InitSerialPort
02E2           1230   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:249: InitADC();
02E2 120100    1231            lcall   _InitADC
02E5           1232   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:250: InitTimer0();
02E5 120100    1233            lcall   _InitTimer0
02E8 D007      1234            pop     ar7
02EA D006      1235            pop     ar6
02EC           1236   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:252: pre_error = 0;
02EC 75C800    1237            mov     _main_pre_error_1_96,#0x00
02EF 75C900    1238            mov     (_main_pre_error_1_96 + 1),#0x00
02F2 75CA00    1239            mov     (_main_pre_error_1_96 + 2),#0x00
02F5 75CB00    1240            mov     (_main_pre_error_1_96 + 3),#0x00
02F8           1241   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:253: while(1)
02F8 7C00      1242            mov     r4,#0x00
02FA 7D00      1243            mov     r5,#0x00
02FC           1244   L017053?:
02FC           1245   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:256: double line_sensor = (AD1DAT3/255.0)*3.3;
02FC 85F582    1246            mov     dpl,_AD1DAT3
02FF C004      1247            push    ar4
0301 C005      1248            push    ar5
0303 C006      1249            push    ar6
0305 C007      1250            push    ar7
0307 120100    1251            lcall   ___uchar2fs
030A AA82      1252            mov     r2,dpl
030C AB83      1253            mov     r3,dph
030E A8F0      1254            mov     r0,b
0310 F9        1255            mov     r1,a
0311 E4        1256            clr     a
0312 C0E0      1257            push    acc
0314 C0E0      1258            push    acc
0316 747F      1259            mov     a,#0x7F
0318 C0E0      1260            push    acc
031A 7443      1261            mov     a,#0x43
031C C0E0      1262            push    acc
031E 8A82      1263            mov     dpl,r2
0320 8B83      1264            mov     dph,r3
0322 88F0      1265            mov     b,r0
0324 E9        1266            mov     a,r1
0325 120100    1267            lcall   ___fsdiv
0328 AA82      1268            mov     r2,dpl
032A AB83      1269            mov     r3,dph
032C A8F0      1270            mov     r0,b
032E F9        1271            mov     r1,a
032F E581      1272            mov     a,sp
0331 24FC      1273            add     a,#0xfc
0333 F581      1274            mov     sp,a
0335 C002      1275            push    ar2
0337 C003      1276            push    ar3
0339 C000      1277            push    ar0
033B C001      1278            push    ar1
033D 903333    1279            mov     dptr,#0x3333
0340 75F053    1280            mov     b,#0x53
0343 7440      1281            mov     a,#0x40
0345 120100    1282            lcall   ___fsmul
0348 858248    1283            mov     _main_line_sensor_2_97,dpl
034B 858349    1284            mov     (_main_line_sensor_2_97 + 1),dph
034E 85F04A    1285            mov     (_main_line_sensor_2_97 + 2),b
0351 F54B      1286            mov     (_main_line_sensor_2_97 + 3),a
0353 E581      1287            mov     a,sp
0355 24FC      1288            add     a,#0xfc
0357 F581      1289            mov     sp,a
0359           1290   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:257: double left = (AD1DAT1/255.0)*3.3;
0359 85D682    1291            mov     dpl,_AD1DAT1
035C 120100    1292            lcall   ___uchar2fs
035F AA82      1293            mov     r2,dpl
0361 AB83      1294            mov     r3,dph
0363 A8F0      1295            mov     r0,b
0365 F9        1296            mov     r1,a
0366 E4        1297            clr     a
0367 C0E0      1298            push    acc
0369 C0E0      1299            push    acc
036B 747F      1300            mov     a,#0x7F
036D C0E0      1301            push    acc
036F 7443      1302            mov     a,#0x43
0371 C0E0      1303            push    acc
0373 8A82      1304            mov     dpl,r2
0375 8B83      1305            mov     dph,r3
0377 88F0      1306            mov     b,r0
0379 E9        1307            mov     a,r1
037A 120100    1308            lcall   ___fsdiv
037D AA82      1309            mov     r2,dpl
037F AB83      1310            mov     r3,dph
0381 A8F0      1311            mov     r0,b
0383 F9        1312            mov     r1,a
0384 E581      1313            mov     a,sp
0386 24FC      1314            add     a,#0xfc
0388 F581      1315            mov     sp,a
038A C002      1316            push    ar2
038C C003      1317            push    ar3
038E C000      1318            push    ar0
0390 C001      1319            push    ar1
0392 903333    1320            mov     dptr,#0x3333
0395 75F053    1321            mov     b,#0x53
0398 7440      1322            mov     a,#0x40
039A 120100    1323            lcall   ___fsmul
039D 858288    1324            mov     _main_left_2_97,dpl
03A0 858389    1325            mov     (_main_left_2_97 + 1),dph
03A3 85F08A    1326            mov     (_main_left_2_97 + 2),b
03A6 F58B      1327            mov     (_main_left_2_97 + 3),a
03A8 E581      1328            mov     a,sp
03AA 24FC      1329            add     a,#0xfc
03AC F581      1330            mov     sp,a
03AE           1331   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:258: double right = (AD1DAT2/255.0)*3.3;
03AE 85D782    1332            mov     dpl,_AD1DAT2
03B1 120100    1333            lcall   ___uchar2fs
03B4 AA82      1334            mov     r2,dpl
03B6 AB83      1335            mov     r3,dph
03B8 A8F0      1336            mov     r0,b
03BA F9        1337            mov     r1,a
03BB E4        1338            clr     a
03BC C0E0      1339            push    acc
03BE C0E0      1340            push    acc
03C0 747F      1341            mov     a,#0x7F
03C2 C0E0      1342            push    acc
03C4 7443      1343            mov     a,#0x43
03C6 C0E0      1344            push    acc
03C8 8A82      1345            mov     dpl,r2
03CA 8B83      1346            mov     dph,r3
03CC 88F0      1347            mov     b,r0
03CE E9        1348            mov     a,r1
03CF 120100    1349            lcall   ___fsdiv
03D2 AA82      1350            mov     r2,dpl
03D4 AB83      1351            mov     r3,dph
03D6 A8F0      1352            mov     r0,b
03D8 F9        1353            mov     r1,a
03D9 E581      1354            mov     a,sp
03DB 24FC      1355            add     a,#0xfc
03DD F581      1356            mov     sp,a
03DF C002      1357            push    ar2
03E1 C003      1358            push    ar3
03E3 C000      1359            push    ar0
03E5 C001      1360            push    ar1
03E7 903333    1361            mov     dptr,#0x3333
03EA 75F053    1362            mov     b,#0x53
03ED 7440      1363            mov     a,#0x40
03EF 120100    1364            lcall   ___fsmul
03F2 8582D8    1365            mov     _main_right_2_97,dpl
03F5 8583D9    1366            mov     (_main_right_2_97 + 1),dph
03F8 85F0DA    1367            mov     (_main_right_2_97 + 2),b
03FB F5DB      1368            mov     (_main_right_2_97 + 3),a
03FD E581      1369            mov     a,sp
03FF 24FC      1370            add     a,#0xfc
0401 F581      1371            mov     sp,a
0403 D007      1372            pop     ar7
0405 D006      1373            pop     ar6
0407 D005      1374            pop     ar5
0409 D004      1375            pop     ar4
040B           1376   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:263: if(time_update_flag==1) // If the clock has been updated, refresh the display
040B 304898    1377            jnb     _time_update_flag,L017002?
040E           1378   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:265: display_LCD();
040E C004      1379            push    ar4
0410 C005      1380            push    ar5
0412 C006      1381            push    ar6
0414 C007      1382            push    ar7
0416 120100    1383            lcall   _display_LCD
0419 D007      1384            pop     ar7
041B D006      1385            pop     ar6
041D D005      1386            pop     ar5
041F D004      1387            pop     ar4
0421           1388   L017002?:
0421           1389   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:269: if((left<thresh)&&(right<thresh))cur_error = 0;
0421 C004      1390            push    ar4
0423 C005      1391            push    ar5
0425 C006      1392            push    ar6
0427 C007      1393            push    ar7
0429 E4        1394            clr     a
042A C0E0      1395            push    acc
042C C0E0      1396            push    acc
042E C0E0      1397            push    acc
0430 C0E0      1398            push    acc
0432 858882    1399            mov     dpl,_main_left_2_97
0435 858983    1400            mov     dph,(_main_left_2_97 + 1)
0438 858AF0    1401            mov     b,(_main_left_2_97 + 2)
043B E58B      1402            mov     a,(_main_left_2_97 + 3)
043D 120100    1403            lcall   ___fslt
0440 858218    1404            mov     _main_sloc0_1_0,dpl
0443 E581      1405            mov     a,sp
0445 24FC      1406            add     a,#0xfc
0447 F581      1407            mov     sp,a
0449 D007      1408            pop     ar7
044B D006      1409            pop     ar6
044D D005      1410            pop     ar5
044F D004      1411            pop     ar4
0451 E518      1412            mov     a,_main_sloc0_1_0
0453 6001      1413            jz      L017004?
0455 C004      1414            push    ar4
0457 C005      1415            push    ar5
0459 C006      1416            push    ar6
045B C007      1417            push    ar7
045D E4        1418            clr     a
045E C0E0      1419            push    acc
0460 C0E0      1420            push    acc
0462 C0E0      1421            push    acc
0464 C0E0      1422            push    acc
0466 85D882    1423            mov     dpl,_main_right_2_97
0469 85D983    1424            mov     dph,(_main_right_2_97 + 1)
046C 85DAF0    1425            mov     b,(_main_right_2_97 + 2)
046F E5DB      1426            mov     a,(_main_right_2_97 + 3)
0471 120100    1427            lcall   ___fslt
0474 AA82      1428            mov     r2,dpl
0476 E581      1429            mov     a,sp
0478 24FC      1430            add     a,#0xfc
047A F581      1431            mov     sp,a
047C D007      1432            pop     ar7
047E D006      1433            pop     ar6
0480 D005      1434            pop     ar5
0482 D004      1435            pop     ar4
0484 EA        1436            mov     a,r2
0485 6001      1437            jz      L017004?
0487 757800    1438            mov     _main_cur_error_1_96,#0x00
048A 757900    1439            mov     (_main_cur_error_1_96 + 1),#0x00
048D 757A00    1440            mov     (_main_cur_error_1_96 + 2),#0x00
0490 757B00    1441            mov     (_main_cur_error_1_96 + 3),#0x00
0493           1442   L017004?:
0493           1443   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:270: if((left<thresh)&&(right>thresh))cur_error = -1;
0493 E518      1444            mov     a,_main_sloc0_1_0
0495 6001      1445            jz      L017007?
0497 C004      1446            push    ar4
0499 C005      1447            push    ar5
049B C006      1448            push    ar6
049D C007      1449            push    ar7
049F E4        1450            clr     a
04A0 C0E0      1451            push    acc
04A2 C0E0      1452            push    acc
04A4 C0E0      1453            push    acc
04A6 C0E0      1454            push    acc
04A8 85D882    1455            mov     dpl,_main_right_2_97
04AB 85D983    1456            mov     dph,(_main_right_2_97 + 1)
04AE 85DAF0    1457            mov     b,(_main_right_2_97 + 2)
04B1 E5DB      1458            mov     a,(_main_right_2_97 + 3)
04B3 120100    1459            lcall   ___fsgt
04B6 AA82      1460            mov     r2,dpl
04B8 E581      1461            mov     a,sp
04BA 24FC      1462            add     a,#0xfc
04BC F581      1463            mov     sp,a
04BE D007      1464            pop     ar7
04C0 D006      1465            pop     ar6
04C2 D005      1466            pop     ar5
04C4 D004      1467            pop     ar4
04C6 EA        1468            mov     a,r2
04C7 6001      1469            jz      L017007?
04C9 757800    1470            mov     _main_cur_error_1_96,#0x00
04CC 757900    1471            mov     (_main_cur_error_1_96 + 1),#0x00
04CF 757A80    1472            mov     (_main_cur_error_1_96 + 2),#0x80
04D2 757BBF    1473            mov     (_main_cur_error_1_96 + 3),#0xBF
04D5           1474   L017007?:
04D5           1475   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:271: if((left>thresh)&&(right<thresh))cur_error = 1;
04D5 C004      1476            push    ar4
04D7 C005      1477            push    ar5
04D9 C006      1478            push    ar6
04DB C007      1479            push    ar7
04DD E4        1480            clr     a
04DE C0E0      1481            push    acc
04E0 C0E0      1482            push    acc
04E2 C0E0      1483            push    acc
04E4 C0E0      1484            push    acc
04E6 858882    1485            mov     dpl,_main_left_2_97
04E9 858983    1486            mov     dph,(_main_left_2_97 + 1)
04EC 858AF0    1487            mov     b,(_main_left_2_97 + 2)
04EF E58B      1488            mov     a,(_main_left_2_97 + 3)
04F1 120100    1489            lcall   ___fsgt
04F4 AA82      1490            mov     r2,dpl
04F6 E581      1491            mov     a,sp
04F8 24FC      1492            add     a,#0xfc
04FA F581      1493            mov     sp,a
04FC D007      1494            pop     ar7
04FE D006      1495            pop     ar6
0500 D005      1496            pop     ar5
0502 D004      1497            pop     ar4
0504 EA        1498            mov     a,r2
0505 6001      1499            jz      L017010?
0507 C002      1500            push    ar2
0509 C004      1501            push    ar4
050B C005      1502            push    ar5
050D C006      1503            push    ar6
050F C007      1504            push    ar7
0511 E4        1505            clr     a
0512 C0E0      1506            push    acc
0514 C0E0      1507            push    acc
0516 C0E0      1508            push    acc
0518 C0E0      1509            push    acc
051A 85D882    1510            mov     dpl,_main_right_2_97
051D 85D983    1511            mov     dph,(_main_right_2_97 + 1)
0520 85DAF0    1512            mov     b,(_main_right_2_97 + 2)
0523 E5DB      1513            mov     a,(_main_right_2_97 + 3)
0525 120100    1514            lcall   ___fslt
0528 AB82      1515            mov     r3,dpl
052A E581      1516            mov     a,sp
052C 24FC      1517            add     a,#0xfc
052E F581      1518            mov     sp,a
0530 D007      1519            pop     ar7
0532 D006      1520            pop     ar6
0534 D005      1521            pop     ar5
0536 D004      1522            pop     ar4
0538 D002      1523            pop     ar2
053A EB        1524            mov     a,r3
053B 6001      1525            jz      L017010?
053D 757800    1526            mov     _main_cur_error_1_96,#0x00
0540 757900    1527            mov     (_main_cur_error_1_96 + 1),#0x00
0543 757A80    1528            mov     (_main_cur_error_1_96 + 2),#0x80
0546 757B3F    1529            mov     (_main_cur_error_1_96 + 3),#0x3F
0549           1530   L017010?:
0549           1531   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:272: if((left>thresh)&&(right>thresh)){
0549 EA        1532            mov     a,r2
054A 7001      1533            jnz     L017091?
054C 020100    1534            ljmp    L017017?
054F           1535   L017091?:
054F C004      1536            push    ar4
0551 C005      1537            push    ar5
0553 C006      1538            push    ar6
0555 C007      1539            push    ar7
0557 E4        1540            clr     a
0558 C0E0      1541            push    acc
055A C0E0      1542            push    acc
055C C0E0      1543            push    acc
055E C0E0      1544            push    acc
0560 85D882    1545            mov     dpl,_main_right_2_97
0563 85D983    1546            mov     dph,(_main_right_2_97 + 1)
0566 85DAF0    1547            mov     b,(_main_right_2_97 + 2)
0569 E5DB      1548            mov     a,(_main_right_2_97 + 3)
056B 120100    1549            lcall   ___fsgt
056E AA82      1550            mov     r2,dpl
0570 E581      1551            mov     a,sp
0572 24FC      1552            add     a,#0xfc
0574 F581      1553            mov     sp,a
0576 D007      1554            pop     ar7
0578 D006      1555            pop     ar6
057A D005      1556            pop     ar5
057C D004      1557            pop     ar4
057E EA        1558            mov     a,r2
057F 6001      1559            jz      L017017?
0581           1560   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:273: if(pre_error>0) cur_error = 5;
0581 C004      1561            push    ar4
0583 C005      1562            push    ar5
0585 C006      1563            push    ar6
0587 C007      1564            push    ar7
0589 E4        1565            clr     a
058A C0E0      1566            push    acc
058C C0E0      1567            push    acc
058E C0E0      1568            push    acc
0590 C0E0      1569            push    acc
0592 85C882    1570            mov     dpl,_main_pre_error_1_96
0595 85C983    1571            mov     dph,(_main_pre_error_1_96 + 1)
0598 85CAF0    1572            mov     b,(_main_pre_error_1_96 + 2)
059B E5CB      1573            mov     a,(_main_pre_error_1_96 + 3)
059D 120100    1574            lcall   ___fsgt
05A0 AA82      1575            mov     r2,dpl
05A2 E581      1576            mov     a,sp
05A4 24FC      1577            add     a,#0xfc
05A6 F581      1578            mov     sp,a
05A8 D007      1579            pop     ar7
05AA D006      1580            pop     ar6
05AC D005      1581            pop     ar5
05AE D004      1582            pop     ar4
05B0 EA        1583            mov     a,r2
05B1 6001      1584            jz      L017013?
05B3 757800    1585            mov     _main_cur_error_1_96,#0x00
05B6 757900    1586            mov     (_main_cur_error_1_96 + 1),#0x00
05B9 757AA0    1587            mov     (_main_cur_error_1_96 + 2),#0xA0
05BC 757B40    1588            mov     (_main_cur_error_1_96 + 3),#0x40
05BF           1589   L017013?:
05BF           1590   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:274: if(pre_error<=0) cur_error = -5;
05BF EA        1591            mov     a,r2
05C0 7001      1592            jnz     L017017?
05C2 F578      1593            mov     _main_cur_error_1_96,a
05C4 F579      1594            mov     (_main_cur_error_1_96 + 1),a
05C6 757AA0    1595            mov     (_main_cur_error_1_96 + 2),#0xA0
05C9 757BC0    1596            mov     (_main_cur_error_1_96 + 3),#0xC0
05CC           1597   L017017?:
05CC           1598   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:278: cor = k_p * cur_error + k_d*(cur_error - pre_error)/0.001;
05CC C004      1599            push    ar4
05CE C005      1600            push    ar5
05D0 C006      1601            push    ar6
05D2 C007      1602            push    ar7
05D4 C0C8      1603            push    _main_pre_error_1_96
05D6 C0C9      1604            push    (_main_pre_error_1_96 + 1)
05D8 C0CA      1605            push    (_main_pre_error_1_96 + 2)
05DA C0CB      1606            push    (_main_pre_error_1_96 + 3)
05DC 857882    1607            mov     dpl,_main_cur_error_1_96
05DF 857983    1608            mov     dph,(_main_cur_error_1_96 + 1)
05E2 857AF0    1609            mov     b,(_main_cur_error_1_96 + 2)
05E5 E57B      1610            mov     a,(_main_cur_error_1_96 + 3)
05E7 120100    1611            lcall   ___fssub
05EA AA82      1612            mov     r2,dpl
05EC AB83      1613            mov     r3,dph
05EE A8F0      1614            mov     r0,b
05F0 F9        1615            mov     r1,a
05F1 E581      1616            mov     a,sp
05F3 24FC      1617            add     a,#0xfc
05F5 F581      1618            mov     sp,a
05F7 746F      1619            mov     a,#0x6F
05F9 C0E0      1620            push    acc
05FB 7412      1621            mov     a,#0x12
05FD C0E0      1622            push    acc
05FF 7483      1623            mov     a,#0x83
0601 C0E0      1624            push    acc
0603 743A      1625            mov     a,#0x3A
0605 C0E0      1626            push    acc
0607 8A82      1627            mov     dpl,r2
0609 8B83      1628            mov     dph,r3
060B 88F0      1629            mov     b,r0
060D E9        1630            mov     a,r1
060E 120100    1631            lcall   ___fsdiv
0611 AA82      1632            mov     r2,dpl
0613 AB83      1633            mov     r3,dph
0615 A8F0      1634            mov     r0,b
0617 F9        1635            mov     r1,a
0618 E581      1636            mov     a,sp
061A 24FC      1637            add     a,#0xfc
061C F581      1638            mov     sp,a
061E C002      1639            push    ar2
0620 C003      1640            push    ar3
0622 C000      1641            push    ar0
0624 C001      1642            push    ar1
0626 857882    1643            mov     dpl,_main_cur_error_1_96
0629 857983    1644            mov     dph,(_main_cur_error_1_96 + 1)
062C 857AF0    1645            mov     b,(_main_cur_error_1_96 + 2)
062F E57B      1646            mov     a,(_main_cur_error_1_96 + 3)
0631 120100    1647            lcall   ___fsadd
0634 858228    1648            mov     _main_cor_1_96,dpl
0637 858329    1649            mov     (_main_cor_1_96 + 1),dph
063A 85F02A    1650            mov     (_main_cor_1_96 + 2),b
063D F52B      1651            mov     (_main_cor_1_96 + 3),a
063F E581      1652            mov     a,sp
0641 24FC      1653            add     a,#0xfc
0643 F581      1654            mov     sp,a
0645           1655   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:281: new_speed_low    =100 - cor;
0645 C028      1656            push    _main_cor_1_96
0647 C029      1657            push    (_main_cor_1_96 + 1)
0649 C02A      1658            push    (_main_cor_1_96 + 2)
064B C02B      1659            push    (_main_cor_1_96 + 3)
064D 900000    1660            mov     dptr,#0x0000
0650 75F0C8    1661            mov     b,#0xC8
0653 7442      1662            mov     a,#0x42
0655 120100    1663            lcall   ___fssub
0658 858218    1664            mov     _main_new_speed_low_1_96,dpl
065B 858319    1665            mov     (_main_new_speed_low_1_96 + 1),dph
065E 85F01A    1666            mov     (_main_new_speed_low_1_96 + 2),b
0661 F51B      1667            mov     (_main_new_speed_low_1_96 + 3),a
0663 E581      1668            mov     a,sp
0665 24FC      1669            add     a,#0xfc
0667 F581      1670            mov     sp,a
0669           1671   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:282: new_speed_high   =100 + cor;
0669 E4        1672            clr     a
066A C0E0      1673            push    acc
066C C0E0      1674            push    acc
066E 74C8      1675            mov     a,#0xC8
0670 C0E0      1676            push    acc
0672 7442      1677            mov     a,#0x42
0674 C0E0      1678            push    acc
0676 852882    1679            mov     dpl,_main_cor_1_96
0679 852983    1680            mov     dph,(_main_cor_1_96 + 1)
067C 852AF0    1681            mov     b,(_main_cor_1_96 + 2)
067F E52B      1682            mov     a,(_main_cor_1_96 + 3)
0681 120100    1683            lcall   ___fsadd
0684 858268    1684            mov     _main_new_speed_high_1_96,dpl
0687 858369    1685            mov     (_main_new_speed_high_1_96 + 1),dph
068A 85F06A    1686            mov     (_main_new_speed_high_1_96 + 2),b
068D F56B      1687            mov     (_main_new_speed_high_1_96 + 3),a
068F E581      1688            mov     a,sp
0691 24FC      1689            add     a,#0xfc
0693 F581      1690            mov     sp,a
0695           1691   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:285: if(new_speed_low<0){
0695 E4        1692            clr     a
0696 C0E0      1693            push    acc
0698 C0E0      1694            push    acc
069A C0E0      1695            push    acc
069C C0E0      1696            push    acc
069E 851882    1697            mov     dpl,_main_new_speed_low_1_96
06A1 851983    1698            mov     dph,(_main_new_speed_low_1_96 + 1)
06A4 851AF0    1699            mov     b,(_main_new_speed_low_1_96 + 2)
06A7 E51B      1700            mov     a,(_main_new_speed_low_1_96 + 3)
06A9 120100    1701            lcall   ___fslt
06AC AA82      1702            mov     r2,dpl
06AE E581      1703            mov     a,sp
06B0 24FC      1704            add     a,#0xfc
06B2 F581      1705            mov     sp,a
06B4 D007      1706            pop     ar7
06B6 D006      1707            pop     ar6
06B8 D005      1708            pop     ar5
06BA D004      1709            pop     ar4
06BC EA        1710            mov     a,r2
06BD 6001      1711            jz      L017020?
06BF           1712   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:286: new_speed_low = 0;
06BF 751800    1713            mov     _main_new_speed_low_1_96,#0x00
06C2 751900    1714            mov     (_main_new_speed_low_1_96 + 1),#0x00
06C5 751A00    1715            mov     (_main_new_speed_low_1_96 + 2),#0x00
06C8 751B00    1716            mov     (_main_new_speed_low_1_96 + 3),#0x00
06CB           1717   L017020?:
06CB           1718   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:289: if(new_speed_high>100){
06CB C004      1719            push    ar4
06CD C005      1720            push    ar5
06CF C006      1721            push    ar6
06D1 C007      1722            push    ar7
06D3 E4        1723            clr     a
06D4 C0E0      1724            push    acc
06D6 C0E0      1725            push    acc
06D8 74C8      1726            mov     a,#0xC8
06DA C0E0      1727            push    acc
06DC 7442      1728            mov     a,#0x42
06DE C0E0      1729            push    acc
06E0 856882    1730            mov     dpl,_main_new_speed_high_1_96
06E3 856983    1731            mov     dph,(_main_new_speed_high_1_96 + 1)
06E6 856AF0    1732            mov     b,(_main_new_speed_high_1_96 + 2)
06E9 E56B      1733            mov     a,(_main_new_speed_high_1_96 + 3)
06EB 120100    1734            lcall   ___fsgt
06EE AA82      1735            mov     r2,dpl
06F0 E581      1736            mov     a,sp
06F2 24FC      1737            add     a,#0xfc
06F4 F581      1738            mov     sp,a
06F6 D007      1739            pop     ar7
06F8 D006      1740            pop     ar6
06FA D005      1741            pop     ar5
06FC D004      1742            pop     ar4
06FE EA        1743            mov     a,r2
06FF 6001      1744            jz      L017022?
0701           1745   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:290: new_speed_high = 100;
0701 756800    1746            mov     _main_new_speed_high_1_96,#0x00
0704 756900    1747            mov     (_main_new_speed_high_1_96 + 1),#0x00
0707 756AC8    1748            mov     (_main_new_speed_high_1_96 + 2),#0xC8
070A 756B42    1749            mov     (_main_new_speed_high_1_96 + 3),#0x42
070D           1750   L017022?:
070D           1751   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:294: if(cur_error > 0){               
070D C004      1752            push    ar4
070F C005      1753            push    ar5
0711 C006      1754            push    ar6
0713 C007      1755            push    ar7
0715 E4        1756            clr     a
0716 C0E0      1757            push    acc
0718 C0E0      1758            push    acc
071A C0E0      1759            push    acc
071C C0E0      1760            push    acc
071E 857882    1761            mov     dpl,_main_cur_error_1_96
0721 857983    1762            mov     dph,(_main_cur_error_1_96 + 1)
0724 857AF0    1763            mov     b,(_main_cur_error_1_96 + 2)
0727 E57B      1764            mov     a,(_main_cur_error_1_96 + 3)
0729 120100    1765            lcall   ___fsgt
072C AA82      1766            mov     r2,dpl
072E E581      1767            mov     a,sp
0730 24FC      1768            add     a,#0xfc
0732 F581      1769            mov     sp,a
0734 D007      1770            pop     ar7
0736 D006      1771            pop     ar6
0738 D005      1772            pop     ar5
073A D004      1773            pop     ar4
073C EA        1774            mov     a,r2
073D 6001      1775            jz      L017032?
073F           1776   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:295: pwm_left = new_speed_low;
073F 851882    1777            mov     dpl,_main_new_speed_low_1_96
0742 851983    1778            mov     dph,(_main_new_speed_low_1_96 + 1)
0745 851AF0    1779            mov     b,(_main_new_speed_low_1_96 + 2)
0748 E51B      1780            mov     a,(_main_new_speed_low_1_96 + 3)
074A C004      1781            push    ar4
074C C005      1782            push    ar5
074E C006      1783            push    ar6
0750 C007      1784            push    ar7
0752 120100    1785            lcall   ___fs2uchar
0755 858258    1786            mov     _pwm_left,dpl
0758           1787   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:296: pwm_right = new_speed_high;              
0758 856882    1788            mov     dpl,_main_new_speed_high_1_96
075B 856983    1789            mov     dph,(_main_new_speed_high_1_96 + 1)
075E 856AF0    1790            mov     b,(_main_new_speed_high_1_96 + 2)
0761 E56B      1791            mov     a,(_main_new_speed_high_1_96 + 3)
0763 120100    1792            lcall   ___fs2uchar
0766 858218    1793            mov     _pwm_right,dpl
0769 D007      1794            pop     ar7
076B D006      1795            pop     ar6
076D D005      1796            pop     ar5
076F D004      1797            pop     ar4
0771 020100    1798            ljmp    L017033?
0774           1799   L017032?:
0774           1800   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:298: else if (cur_error < 0){
0774 C004      1801            push    ar4
0776 C005      1802            push    ar5
0778 C006      1803            push    ar6
077A C007      1804            push    ar7
077C E4        1805            clr     a
077D C0E0      1806            push    acc
077F C0E0      1807            push    acc
0781 C0E0      1808            push    acc
0783 C0E0      1809            push    acc
0785 857882    1810            mov     dpl,_main_cur_error_1_96
0788 857983    1811            mov     dph,(_main_cur_error_1_96 + 1)
078B 857AF0    1812            mov     b,(_main_cur_error_1_96 + 2)
078E E57B      1813            mov     a,(_main_cur_error_1_96 + 3)
0790 120100    1814            lcall   ___fslt
0793 AA82      1815            mov     r2,dpl
0795 E581      1816            mov     a,sp
0797 24FC      1817            add     a,#0xfc
0799 F581      1818            mov     sp,a
079B D007      1819            pop     ar7
079D D006      1820            pop     ar6
079F D005      1821            pop     ar5
07A1 D004      1822            pop     ar4
07A3 EA        1823            mov     a,r2
07A4 6001      1824            jz      L017029?
07A6           1825   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:299: pwm_left = new_speed_high;
07A6 856882    1826            mov     dpl,_main_new_speed_high_1_96
07A9 856983    1827            mov     dph,(_main_new_speed_high_1_96 + 1)
07AC 856AF0    1828            mov     b,(_main_new_speed_high_1_96 + 2)
07AF E56B      1829            mov     a,(_main_new_speed_high_1_96 + 3)
07B1 C004      1830            push    ar4
07B3 C005      1831            push    ar5
07B5 C006      1832            push    ar6
07B7 C007      1833            push    ar7
07B9 120100    1834            lcall   ___fs2uchar
07BC 858258    1835            mov     _pwm_left,dpl
07BF           1836   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:300: pwm_right = new_speed_low;
07BF 851882    1837            mov     dpl,_main_new_speed_low_1_96
07C2 851983    1838            mov     dph,(_main_new_speed_low_1_96 + 1)
07C5 851AF0    1839            mov     b,(_main_new_speed_low_1_96 + 2)
07C8 E51B      1840            mov     a,(_main_new_speed_low_1_96 + 3)
07CA 120100    1841            lcall   ___fs2uchar
07CD 858218    1842            mov     _pwm_right,dpl
07D0 D007      1843            pop     ar7
07D2 D006      1844            pop     ar6
07D4 D005      1845            pop     ar5
07D6 D004      1846            pop     ar4
07D8 8001      1847            sjmp    L017033?
07DA           1848   L017029?:
07DA           1849   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:303: if(pre_error > 0){
07DA C004      1850            push    ar4
07DC C005      1851            push    ar5
07DE C006      1852            push    ar6
07E0 C007      1853            push    ar7
07E2 E4        1854            clr     a
07E3 C0E0      1855            push    acc
07E5 C0E0      1856            push    acc
07E7 C0E0      1857            push    acc
07E9 C0E0      1858            push    acc
07EB 85C882    1859            mov     dpl,_main_pre_error_1_96
07EE 85C983    1860            mov     dph,(_main_pre_error_1_96 + 1)
07F1 85CAF0    1861            mov     b,(_main_pre_error_1_96 + 2)
07F4 E5CB      1862            mov     a,(_main_pre_error_1_96 + 3)
07F6 120100    1863            lcall   ___fsgt
07F9 AA82      1864            mov     r2,dpl
07FB E581      1865            mov     a,sp
07FD 24FC      1866            add     a,#0xfc
07FF F581      1867            mov     sp,a
0801 D007      1868            pop     ar7
0803 D006      1869            pop     ar6
0805 D005      1870            pop     ar5
0807 D004      1871            pop     ar4
0809 EA        1872            mov     a,r2
080A 6001      1873            jz      L017026?
080C           1874   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:304: pwm_left = 100;
080C 755864    1875            mov     _pwm_left,#0x64
080F           1876   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:305: pwm_right = 20;
080F 751814    1877            mov     _pwm_right,#0x14
0812 8001      1878            sjmp    L017033?
0814           1879   L017026?:
0814           1880   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:307: else if (pre_error < 0){
0814 C004      1881            push    ar4
0816 C005      1882            push    ar5
0818 C006      1883            push    ar6
081A C007      1884            push    ar7
081C E4        1885            clr     a
081D C0E0      1886            push    acc
081F C0E0      1887            push    acc
0821 C0E0      1888            push    acc
0823 C0E0      1889            push    acc
0825 85C882    1890            mov     dpl,_main_pre_error_1_96
0828 85C983    1891            mov     dph,(_main_pre_error_1_96 + 1)
082B 85CAF0    1892            mov     b,(_main_pre_error_1_96 + 2)
082E E5CB      1893            mov     a,(_main_pre_error_1_96 + 3)
0830 120100    1894            lcall   ___fslt
0833 AA82      1895            mov     r2,dpl
0835 E581      1896            mov     a,sp
0837 24FC      1897            add     a,#0xfc
0839 F581      1898            mov     sp,a
083B D007      1899            pop     ar7
083D D006      1900            pop     ar6
083F D005      1901            pop     ar5
0841 D004      1902            pop     ar4
0843 EA        1903            mov     a,r2
0844 6001      1904            jz      L017033?
0846           1905   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:308: pwm_right = 100;
0846 751864    1906            mov     _pwm_right,#0x64
0849           1907   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:309: pwm_left = 20;
0849 755814    1908            mov     _pwm_left,#0x14
084C           1909   L017033?:
084C           1910   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:312: counter++;
084C 0C        1911            inc     r4
084D BC0018    1912            cjne    r4,#0x00,L017101?
0850 0D        1913            inc     r5
0851           1914   L017101?:
0851           1915   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:313: pre_error = cur_error;
0851 8578C8    1916            mov     _main_pre_error_1_96,_main_cur_error_1_96
0854 8579C9    1917            mov     (_main_pre_error_1_96 + 1),(_main_cur_error_1_96 + 1)
0857 857ACA    1918            mov     (_main_pre_error_1_96 + 2),(_main_cur_error_1_96 + 2)
085A 857BCB    1919            mov     (_main_pre_error_1_96 + 3),(_main_cur_error_1_96 + 3)
085D           1920   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:314: if(counter==30){
085D BC1E58    1921            cjne    r4,#0x1E,L017035?
0860 BD0058    1922            cjne    r5,#0x00,L017035?
0863           1923   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:315: printf("Error:%5.2f Left:%5.2f Right:%5.2f                 \r", cur_error, left, right, pwm_left, pwm_right);
0863 AA18      1924            mov     r2,_pwm_right
0865 7B00      1925            mov     r3,#0x00
0867 A858      1926            mov     r0,_pwm_left
0869 7900      1927            mov     r1,#0x00
086B C004      1928            push    ar4
086D C005      1929            push    ar5
086F C006      1930            push    ar6
0871 C007      1931            push    ar7
0873 C002      1932            push    ar2
0875 C003      1933            push    ar3
0877 C000      1934            push    ar0
0879 C001      1935            push    ar1
087B C0D8      1936            push    _main_right_2_97
087D C0D9      1937            push    (_main_right_2_97 + 1)
087F C0DA      1938            push    (_main_right_2_97 + 2)
0881 C0DB      1939            push    (_main_right_2_97 + 3)
0883 C088      1940            push    _main_left_2_97
0885 C089      1941            push    (_main_left_2_97 + 1)
0887 C08A      1942            push    (_main_left_2_97 + 2)
0889 C08B      1943            push    (_main_left_2_97 + 3)
088B C078      1944            push    _main_cur_error_1_96
088D C079      1945            push    (_main_cur_error_1_96 + 1)
088F C07A      1946            push    (_main_cur_error_1_96 + 2)
0891 C07B      1947            push    (_main_cur_error_1_96 + 3)
0893 7498      1948            mov     a,#__str_2
0895 C0E0      1949            push    acc
0897 74B2      1950            mov     a,#(__str_2 >> 8)
0899 C0E0      1951            push    acc
089B 7480      1952            mov     a,#0x80
089D C0E0      1953            push    acc
089F 120100    1954            lcall   _printf
08A2 E581      1955            mov     a,sp
08A4 24ED      1956            add     a,#0xed
08A6 F581      1957            mov     sp,a
08A8 D007      1958            pop     ar7
08AA D006      1959            pop     ar6
08AC D005      1960            pop     ar5
08AE D004      1961            pop     ar4
08B0           1962   L017035?:
08B0           1963   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:321: if(line_sensor>thresh){
08B0 C004      1964            push    ar4
08B2 C005      1965            push    ar5
08B4 C006      1966            push    ar6
08B6 C007      1967            push    ar7
08B8 E4        1968            clr     a
08B9 C0E0      1969            push    acc
08BB C0E0      1970            push    acc
08BD C0E0      1971            push    acc
08BF C0E0      1972            push    acc
08C1 854882    1973            mov     dpl,_main_line_sensor_2_97
08C4 854983    1974            mov     dph,(_main_line_sensor_2_97 + 1)
08C7 854AF0    1975            mov     b,(_main_line_sensor_2_97 + 2)
08CA E54B      1976            mov     a,(_main_line_sensor_2_97 + 3)
08CC 120100    1977            lcall   ___fsgt
08CF AA82      1978            mov     r2,dpl
08D1 E581      1979            mov     a,sp
08D3 24FC      1980            add     a,#0xfc
08D5 F581      1981            mov     sp,a
08D7 D007      1982            pop     ar7
08D9 D006      1983            pop     ar6
08DB D005      1984            pop     ar5
08DD D004      1985            pop     ar4
08DF EA        1986            mov     a,r2
08E0 7001      1987            jnz     L017104?
08E2 020100    1988            ljmp    L017053?
08E5           1989   L017104?:
08E5           1990   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:323: if(line_counter == 0){
08E5 EE        1991            mov     a,r6
08E6 4F        1992            orl     a,r7
08E7 7001      1993            jnz     L017037?
08E9           1994   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:325: line_counter++;
08E9 0E        1995            inc     r6
08EA BE0098    1996            cjne    r6,#0x00,L017106?
08ED 0F        1997            inc     r7
08EE           1998   L017106?:
08EE           1999   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:326: line_counter_flag = 1;
08EE D2F8      2000            setb    _line_counter_flag
08F0 8001      2001            sjmp    L017038?
08F2           2002   L017037?:
08F2           2003   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:330: line_counter++;                                  
08F2 0E        2004            inc     r6
08F3 BE0018    2005            cjne    r6,#0x00,L017107?
08F6 0F        2006            inc     r7
08F7           2007   L017107?:
08F7           2008   L017038?:
08F7           2009   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:333: if(line_timer == 2000){
08F7 74D0      2010            mov     a,#0xD0
08F9 B5D858    2011            cjne    a,_line_timer,L017040?
08FC 7407      2012            mov     a,#0x07
08FE B5D958    2013            cjne    a,(_line_timer + 1),L017040?
0901           2014   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:334: line_counter_flag = 0;
0901 C2F8      2015            clr     _line_counter_flag
0903           2016   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:335: line_timer = 0;
0903 E4        2017            clr     a
0904 F5D8      2018            mov     _line_timer,a
0906 F5D9      2019            mov     (_line_timer + 1),a
0908           2020   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:336: exec = 1;                                        
0908 75A801    2021            mov     _main_exec_1_96,#0x01
090B E4        2022            clr     a
090C F5A9      2023            mov     (_main_exec_1_96 + 1),a
090E           2024   L017040?:
090E           2025   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:340: if(exec == 1){
090E 7401      2026            mov     a,#0x01
0910 B5A898    2027            cjne    a,_main_exec_1_96,L017110?
0913 E4        2028            clr     a
0914 B5A998    2029            cjne    a,(_main_exec_1_96 + 1),L017110?
0917 8001      2030            sjmp    L017111?
0919           2031   L017110?:
0919 020100    2032            ljmp    L017049?
091C           2033   L017111?:
091C           2034   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:341: switch(line_counter){
091C BE0258    2035            cjne    r6,#0x02,L017112?
091F BF0058    2036            cjne    r7,#0x00,L017112?
0922 8001      2037            sjmp    L017041?
0924           2038   L017112?:
0924 BE03D8    2039            cjne    r6,#0x03,L017113?
0927 BF00D8    2040            cjne    r7,#0x00,L017113?
092A 8001      2041            sjmp    L017042?
092C           2042   L017113?:
092C BE0458    2043            cjne    r6,#0x04,L017114?
092F BF0058    2044            cjne    r7,#0x00,L017114?
0932 8001      2045            sjmp    L017043?
0934           2046   L017114?:
0934           2047   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:342: case 2:
0934 8001      2048            sjmp    L017047?
0936           2049   L017041?:
0936           2050   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:343: printf("TURNING LEFT \r;");
0936 C004      2051            push    ar4
0938 C005      2052            push    ar5
093A 7418      2053            mov     a,#__str_3
093C C0E0      2054            push    acc
093E 74B7      2055            mov     a,#(__str_3 >> 8)
0940 C0E0      2056            push    acc
0942 7480      2057            mov     a,#0x80
0944 C0E0      2058            push    acc
0946 120100    2059            lcall   _printf
0949 1581      2060            dec     sp
094B 1581      2061            dec     sp
094D 1581      2062            dec     sp
094F D005      2063            pop     ar5
0951 D004      2064            pop     ar4
0953           2065   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:344: pwm_left         = 100;
0953 755864    2066            mov     _pwm_left,#0x64
0956           2067   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:345: pwm_right        =  20; 
0956 751814    2068            mov     _pwm_right,#0x14
0959           2069   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:346: case 3:
0959           2070   L017042?:
0959           2071   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:347: printf("TURNING Right \r;");
0959 C004      2072            push    ar4
095B C005      2073            push    ar5
095D 7458      2074            mov     a,#__str_4
095F C0E0      2075            push    acc
0961 74B7      2076            mov     a,#(__str_4 >> 8)
0963 C0E0      2077            push    acc
0965 7480      2078            mov     a,#0x80
0967 C0E0      2079            push    acc
0969 120100    2080            lcall   _printf
096C 1581      2081            dec     sp
096E 1581      2082            dec     sp
0970 1581      2083            dec     sp
0972 D005      2084            pop     ar5
0974 D004      2085            pop     ar4
0976           2086   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:348: pwm_left         = 20;
0976 755814    2087            mov     _pwm_left,#0x14
0979           2088   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:349: pwm_right        =  100;
0979 751864    2089            mov     _pwm_right,#0x64
097C           2090   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:350: case 4:
097C           2091   L017043?:
097C           2092   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:351: printf("Starting \r;");
097C C004      2093            push    ar4
097E C005      2094            push    ar5
0980 7498      2095            mov     a,#__str_5
0982 C0E0      2096            push    acc
0984 74B7      2097            mov     a,#(__str_5 >> 8)
0986 C0E0      2098            push    acc
0988 7480      2099            mov     a,#0x80
098A C0E0      2100            push    acc
098C 120100    2101            lcall   _printf
098F 1581      2102            dec     sp
0991 1581      2103            dec     sp
0993 1581      2104            dec     sp
0995 D005      2105            pop     ar5
0997 D004      2106            pop     ar4
0999           2107   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:352: if(start){
0999 E5F8      2108            mov     a,_main_start_1_96
099B 45F9      2109            orl     a,(_main_start_1_96 + 1)
099D 6001      2110            jz      L017045?
099F           2111   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:353: pwm_left = 100;
099F 755864    2112            mov     _pwm_left,#0x64
09A2           2113   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:354: pwm_right = 100;
09A2 751864    2114            mov     _pwm_right,#0x64
09A5 8001      2115            sjmp    L017047?
09A7           2116   L017045?:
09A7           2117   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:357: pwm_right = 0;
09A7 751800    2118            mov     _pwm_right,#0x00
09AA           2119   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:358: pwm_left = 0;
09AA 755800    2120            mov     _pwm_left,#0x00
09AD           2121   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:360: }
09AD           2122   L017047?:
09AD           2123   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:361: exec=0;
09AD           2124   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:362: line_counter = 0;
09AD E4        2125            clr     a
09AE F5A8      2126            mov     _main_exec_1_96,a
09B0 F5A9      2127            mov     (_main_exec_1_96 + 1),a
09B2 FE        2128            mov     r6,a
09B3 FF        2129            mov     r7,a
09B4           2130   L017049?:
09B4           2131   ;        C:\Users\Saman\Documents\GitHub\eece_284\Code\main code.c:364: printf("line counter: %d", line_counter);
09B4 C004      2132            push    ar4
09B6 C005      2133            push    ar5
09B8 C006      2134            push    ar6
09BA C007      2135            push    ar7
09BC C006      2136            push    ar6
09BE C007      2137            push    ar7
09C0 7418      2138            mov     a,#__str_6
09C2 C0E0      2139            push    acc
09C4 74B8      2140            mov     a,#(__str_6 >> 8)
09C6 C0E0      2141            push    acc
09C8 7480      2142            mov     a,#0x80
09CA C0E0      2143            push    acc
09CC 120100    2144            lcall   _printf
09CF E581      2145            mov     a,sp
09D1 24FB      2146            add     a,#0xfb
09D3 F581      2147            mov     sp,a
09D5 D007      2148            pop     ar7
09D7 D006      2149            pop     ar6
09D9 D005      2150            pop     ar5
09DB D004      2151            pop     ar4
09DD 020100    2152            ljmp    L017053?
09E0           2153            rseg R_CSEG
09E0           2154   
0000           2155            rseg R_XINIT
0000           2156   
0000           2157            rseg R_CONST
0000           2158   __str_0:
0000 563D2535  2159            db 'V=%5.2f'
     2E3266
0007 00        2160            db 0x00
0008           2161   __str_1:
0008 25303264  2162            db '%02d:%02d'
     3A253032
     64
0011 00        2163            db 0x00
0012           2164   __str_2:
0012 4572726F  2165            db 'Error:%5.2f Left:%5.2f Right:%5.2f                 '
     723A2535
     2E326620
     4C656674
     3A25352E
     32662052
     69676874
     3A25352E
     32662020
     20202020
     20202020
     20202020
     202020
0045 0D        2166            db 0x0D
0046 00        2167            db 0x00
0047           2168   __str_3:
0047 5455524E  2169            db 'TURNING LEFT '
     494E4720
     4C454654
     20
0054 0D        2170            db 0x0D
0055 3B        2171            db ';'
0056 00        2172            db 0x00
0057           2173   __str_4:
0057 5455524E  2174            db 'TURNING Right '
     494E4720
     52696768
     7420
0065 0D        2175            db 0x0D
0066 3B        2176            db ';'
0067 00        2177            db 0x00
0068           2178   __str_5:
0068 53746172  2179            db 'Starting '
     74696E67
     20
0071 0D        2180            db 0x0D
0072 3B        2181            db ';'
0073 00        2182            db 0x00
0074           2183   __str_6:
0074 6C696E65  2184            db 'line counter: %d'
     20636F75
     6E746572
     3A202564
0084 00        2185            db 0x00
0085           2186   
000E           2187            CSEG
000E           2188   
000E           2189   end
