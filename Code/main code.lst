0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Dec 11 2012) (MSVC)
0000              4   ; This file was generated Thu Mar 12 12:04:32 2015
0000              5   ;--------------------------------------------------------
                  5   $name main_code
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _display_LCD
0000             29            public _Timer0ISR
0000             30            public _InitTimer0
0000             31            public _InitADC
0000             32            public _InitSerialPort
0000             33            public _Wait1S
0000             34            public _LCDprint
0000             35            public _LCD_8BIT
0000             36            public _WriteCommand
0000             37            public _WriteData
0000             38            public _LCD_byte
0000             39            public _LCD_pulse
0000             40            public _waitms
0000             41            public _Wait50us
0000             42            public _InitPorts
0000             43            public _LCDprint_PARM_3
0000             44            public _line_counter_flag
0000             45            public _time_update_flag
0000             46            public _LCDprint_PARM_2
0000             47            public _line_timer
0000             48            public _exec
0000             49            public _line_counter
0000             50            public _pwm_right
0000             51            public _pwm_left
0000             52            public _pwmcount
0000             53            public _mins
0000             54            public _secs
0000             55            public _msCount
0000             56   ;--------------------------------------------------------
0000             57   ; Special Function Registers
0000             58   ;--------------------------------------------------------
0000             59   _ACC            DATA 0xe0
0000             60   _ADCON0         DATA 0x8e
0000             61   _ADCON1         DATA 0x97
0000             62   _ADINS          DATA 0xa3
0000             63   _ADMODA         DATA 0xc0
0000             64   _ADMODB         DATA 0xa1
0000             65   _AD0BH          DATA 0xbb
0000             66   _AD0BL          DATA 0xa6
0000             67   _AD0DAT0        DATA 0xc5
0000             68   _AD0DAT1        DATA 0xc6
0000             69   _AD0DAT2        DATA 0xc7
0000             70   _AD0DAT3        DATA 0xf4
0000             71   _AD1BH          DATA 0xc4
0000             72   _AD1BL          DATA 0xbc
0000             73   _AD1DAT0        DATA 0xd5
0000             74   _AD1DAT1        DATA 0xd6
0000             75   _AD1DAT2        DATA 0xd7
0000             76   _AD1DAT3        DATA 0xf5
0000             77   _AUXR1          DATA 0xa2
0000             78   _B              DATA 0xf0
0000             79   _BRGR0          DATA 0xbe
0000             80   _BRGR1          DATA 0xbf
0000             81   _BRGCON         DATA 0xbd
0000             82   _CCCRA          DATA 0xea
0000             83   _CCCRB          DATA 0xeb
0000             84   _CCCRC          DATA 0xec
0000             85   _CCCRD          DATA 0xed
0000             86   _CMP1           DATA 0xac
0000             87   _CMP2           DATA 0xad
0000             88   _DEECON         DATA 0xf1
0000             89   _DEEDAT         DATA 0xf2
0000             90   _DEEADR         DATA 0xf3
0000             91   _DIVM           DATA 0x95
0000             92   _DPH            DATA 0x83
0000             93   _DPL            DATA 0x82
0000             94   _FMADRH         DATA 0xe7
0000             95   _FMADRL         DATA 0xe6
0000             96   _FMCON          DATA 0xe4
0000             97   _FMDATA         DATA 0xe5
0000             98   _I2ADR          DATA 0xdb
0000             99   _I2CON          DATA 0xd8
0000            100   _I2DAT          DATA 0xda
0000            101   _I2SCLH         DATA 0xdd
0000            102   _I2SCLL         DATA 0xdc
0000            103   _I2STAT         DATA 0xd9
0000            104   _ICRAH          DATA 0xab
0000            105   _ICRAL          DATA 0xaa
0000            106   _ICRBH          DATA 0xaf
0000            107   _ICRBL          DATA 0xae
0000            108   _IEN0           DATA 0xa8
0000            109   _IEN1           DATA 0xe8
0000            110   _IP0            DATA 0xb8
0000            111   _IP0H           DATA 0xb7
0000            112   _IP1            DATA 0xf8
0000            113   _IP1H           DATA 0xf7
0000            114   _KBCON          DATA 0x94
0000            115   _KBMASK         DATA 0x86
0000            116   _KBPATN         DATA 0x93
0000            117   _OCRAH          DATA 0xef
0000            118   _OCRAL          DATA 0xee
0000            119   _OCRBH          DATA 0xfb
0000            120   _OCRBL          DATA 0xfa
0000            121   _OCRCH          DATA 0xfd
0000            122   _OCRCL          DATA 0xfc
0000            123   _OCRDH          DATA 0xff
0000            124   _OCRDL          DATA 0xfe
0000            125   _P0             DATA 0x80
0000            126   _P1             DATA 0x90
0000            127   _P2             DATA 0xa0
0000            128   _P3             DATA 0xb0
0000            129   _P0M1           DATA 0x84
0000            130   _P0M2           DATA 0x85
0000            131   _P1M1           DATA 0x91
0000            132   _P1M2           DATA 0x92
0000            133   _P2M1           DATA 0xa4
0000            134   _P2M2           DATA 0xa5
0000            135   _P3M1           DATA 0xb1
0000            136   _P3M2           DATA 0xb2
0000            137   _PCON           DATA 0x87
0000            138   _PCONA          DATA 0xb5
0000            139   _PSW            DATA 0xd0
0000            140   _PT0AD          DATA 0xf6
0000            141   _RSTSRC         DATA 0xdf
0000            142   _RTCCON         DATA 0xd1
0000            143   _RTCH           DATA 0xd2
0000            144   _RTCL           DATA 0xd3
0000            145   _SADDR          DATA 0xa9
0000            146   _SADEN          DATA 0xb9
0000            147   _SBUF           DATA 0x99
0000            148   _SCON           DATA 0x98
0000            149   _SSTAT          DATA 0xba
0000            150   _SP             DATA 0x81
0000            151   _SPCTL          DATA 0xe2
0000            152   _SPSTAT         DATA 0xe1
0000            153   _SPDAT          DATA 0xe3
0000            154   _TAMOD          DATA 0x8f
0000            155   _TCON           DATA 0x88
0000            156   _TCR20          DATA 0xc8
0000            157   _TCR21          DATA 0xf9
0000            158   _TH0            DATA 0x8c
0000            159   _TH1            DATA 0x8d
0000            160   _TH2            DATA 0xcd
0000            161   _TICR2          DATA 0xc9
0000            162   _TIFR2          DATA 0xe9
0000            163   _TISE2          DATA 0xde
0000            164   _TL0            DATA 0x8a
0000            165   _TL1            DATA 0x8b
0000            166   _TL2            DATA 0xcc
0000            167   _TMOD           DATA 0x89
0000            168   _TOR2H          DATA 0xcf
0000            169   _TOR2L          DATA 0xce
0000            170   _TPCR2H         DATA 0xcb
0000            171   _TPCR2L         DATA 0xca
0000            172   _TRIM           DATA 0x96
0000            173   _WDCON          DATA 0xa7
0000            174   _WDL            DATA 0xc1
0000            175   _WFEED1         DATA 0xc2
0000            176   _WFEED2         DATA 0xc3
0000            177   ;--------------------------------------------------------
0000            178   ; special function bits
0000            179   ;--------------------------------------------------------
0000            180   _ACC_7          BIT 0xe7
0000            181   _ACC_6          BIT 0xe6
0000            182   _ACC_5          BIT 0xe5
0000            183   _ACC_4          BIT 0xe4
0000            184   _ACC_3          BIT 0xe3
0000            185   _ACC_2          BIT 0xe2
0000            186   _ACC_1          BIT 0xe1
0000            187   _ACC_0          BIT 0xe0
0000            188   _ADMODA_7       BIT 0xc7
0000            189   _ADMODA_6       BIT 0xc6
0000            190   _ADMODA_5       BIT 0xc5
0000            191   _ADMODA_4       BIT 0xc4
0000            192   _ADMODA_3       BIT 0xc3
0000            193   _ADMODA_2       BIT 0xc2
0000            194   _ADMODA_1       BIT 0xc1
0000            195   _ADMODA_0       BIT 0xc0
0000            196   _BNDI1          BIT 0xc7
0000            197   _BURST1         BIT 0xc6
0000            198   _SCC1           BIT 0xc5
0000            199   _SCAN1          BIT 0xc4
0000            200   _BNDI0          BIT 0xc3
0000            201   _BURST0         BIT 0xc2
0000            202   _SCC0           BIT 0xc1
0000            203   _SCAN0          BIT 0xc0
0000            204   _B_7            BIT 0xf7
0000            205   _B_6            BIT 0xf6
0000            206   _B_5            BIT 0xf5
0000            207   _B_4            BIT 0xf4
0000            208   _B_3            BIT 0xf3
0000            209   _B_2            BIT 0xf2
0000            210   _B_1            BIT 0xf1
0000            211   _B_0            BIT 0xf0
0000            212   _I2CON_7        BIT 0xdf
0000            213   _I2CON_6        BIT 0xde
0000            214   _I2CON_5        BIT 0xdd
0000            215   _I2CON_4        BIT 0xdc
0000            216   _I2CON_3        BIT 0xdb
0000            217   _I2CON_2        BIT 0xda
0000            218   _I2CON_1        BIT 0xd9
0000            219   _I2CON_0        BIT 0xd8
0000            220   _I2EN           BIT 0xde
0000            221   _STA            BIT 0xdd
0000            222   _STO            BIT 0xdc
0000            223   _SI             BIT 0xdb
0000            224   _AA             BIT 0xda
0000            225   _CRSEL          BIT 0xd8
0000            226   _IEN0_7         BIT 0xaf
0000            227   _IEN0_6         BIT 0xae
0000            228   _IEN0_5         BIT 0xad
0000            229   _IEN0_4         BIT 0xac
0000            230   _IEN0_3         BIT 0xab
0000            231   _IEN0_2         BIT 0xaa
0000            232   _IEN0_1         BIT 0xa9
0000            233   _IEN0_0         BIT 0xa8
0000            234   _EA             BIT 0xaf
0000            235   _EWDRT          BIT 0xae
0000            236   _EBO            BIT 0xad
0000            237   _ES             BIT 0xac
0000            238   _ESR            BIT 0xac
0000            239   _ET1            BIT 0xab
0000            240   _EX1            BIT 0xaa
0000            241   _ET0            BIT 0xa9
0000            242   _EX0            BIT 0xa8
0000            243   _IEN1_7         BIT 0xef
0000            244   _IEN1_6         BIT 0xee
0000            245   _IEN1_5         BIT 0xed
0000            246   _IEN1_4         BIT 0xec
0000            247   _IEN1_3         BIT 0xeb
0000            248   _IEN1_2         BIT 0xea
0000            249   _IEN1_1         BIT 0xe9
0000            250   _IEN1_0         BIT 0xe8
0000            251   _EADEE          BIT 0xef
0000            252   _EST            BIT 0xee
0000            253   _ECCU           BIT 0xec
0000            254   _ESPI           BIT 0xeb
0000            255   _EC             BIT 0xea
0000            256   _EKBI           BIT 0xe9
0000            257   _EI2C           BIT 0xe8
0000            258   _IP0_7          BIT 0xbf
0000            259   _IP0_6          BIT 0xbe
0000            260   _IP0_5          BIT 0xbd
0000            261   _IP0_4          BIT 0xbc
0000            262   _IP0_3          BIT 0xbb
0000            263   _IP0_2          BIT 0xba
0000            264   _IP0_1          BIT 0xb9
0000            265   _IP0_0          BIT 0xb8
0000            266   _PWDRT          BIT 0xbe
0000            267   _PBO            BIT 0xbd
0000            268   _PS             BIT 0xbc
0000            269   _PSR            BIT 0xbc
0000            270   _PT1            BIT 0xbb
0000            271   _PX1            BIT 0xba
0000            272   _PT0            BIT 0xb9
0000            273   _PX0            BIT 0xb8
0000            274   _IP1_7          BIT 0xff
0000            275   _IP1_6          BIT 0xfe
0000            276   _IP1_5          BIT 0xfd
0000            277   _IP1_4          BIT 0xfc
0000            278   _IP1_3          BIT 0xfb
0000            279   _IP1_2          BIT 0xfa
0000            280   _IP1_1          BIT 0xf9
0000            281   _IP1_0          BIT 0xf8
0000            282   _PADEE          BIT 0xff
0000            283   _PST            BIT 0xfe
0000            284   _PCCU           BIT 0xfc
0000            285   _PSPI           BIT 0xfb
0000            286   _PC             BIT 0xfa
0000            287   _PKBI           BIT 0xf9
0000            288   _PI2C           BIT 0xf8
0000            289   _P0_7           BIT 0x87
0000            290   _P0_6           BIT 0x86
0000            291   _P0_5           BIT 0x85
0000            292   _P0_4           BIT 0x84
0000            293   _P0_3           BIT 0x83
0000            294   _P0_2           BIT 0x82
0000            295   _P0_1           BIT 0x81
0000            296   _P0_0           BIT 0x80
0000            297   _T1             BIT 0x87
0000            298   _KB7            BIT 0x87
0000            299   _CMP_1          BIT 0x86
0000            300   _KB6            BIT 0x86
0000            301   _CMPREF         BIT 0x85
0000            302   _KB5            BIT 0x85
0000            303   _CIN1A          BIT 0x84
0000            304   _KB4            BIT 0x84
0000            305   _CIN1B          BIT 0x83
0000            306   _KB3            BIT 0x83
0000            307   _CIN2A          BIT 0x82
0000            308   _KB2            BIT 0x82
0000            309   _CIN2B          BIT 0x81
0000            310   _KB1            BIT 0x81
0000            311   _CMP_2          BIT 0x80
0000            312   _KB0            BIT 0x80
0000            313   _P1_7           BIT 0x97
0000            314   _P1_6           BIT 0x96
0000            315   _P1_5           BIT 0x95
0000            316   _P1_4           BIT 0x94
0000            317   _P1_3           BIT 0x93
0000            318   _P1_2           BIT 0x92
0000            319   _P1_1           BIT 0x91
0000            320   _P1_0           BIT 0x90
0000            321   _OCC            BIT 0x97
0000            322   _OCB            BIT 0x96
0000            323   _RST            BIT 0x95
0000            324   _INT1           BIT 0x94
0000            325   _INT0           BIT 0x93
0000            326   _SDA            BIT 0x93
0000            327   _T0             BIT 0x92
0000            328   _SCL            BIT 0x92
0000            329   _RXD            BIT 0x91
0000            330   _TXD            BIT 0x90
0000            331   _P2_7           BIT 0xa7
0000            332   _P2_6           BIT 0xa6
0000            333   _P2_5           BIT 0xa5
0000            334   _P2_4           BIT 0xa4
0000            335   _P2_3           BIT 0xa3
0000            336   _P2_2           BIT 0xa2
0000            337   _P2_1           BIT 0xa1
0000            338   _P2_0           BIT 0xa0
0000            339   _ICA            BIT 0xa7
0000            340   _OCA            BIT 0xa6
0000            341   _SPICLK         BIT 0xa5
0000            342   _SS             BIT 0xa4
0000            343   _MISO           BIT 0xa3
0000            344   _MOSI           BIT 0xa2
0000            345   _OCD            BIT 0xa1
0000            346   _ICB            BIT 0xa0
0000            347   _P3_7           BIT 0xb7
0000            348   _P3_6           BIT 0xb6
0000            349   _P3_5           BIT 0xb5
0000            350   _P3_4           BIT 0xb4
0000            351   _P3_3           BIT 0xb3
0000            352   _P3_2           BIT 0xb2
0000            353   _P3_1           BIT 0xb1
0000            354   _P3_0           BIT 0xb0
0000            355   _XTAL1          BIT 0xb1
0000            356   _XTAL2          BIT 0xb0
0000            357   _PSW_7          BIT 0xd7
0000            358   _PSW_6          BIT 0xd6
0000            359   _PSW_5          BIT 0xd5
0000            360   _PSW_4          BIT 0xd4
0000            361   _PSW_3          BIT 0xd3
0000            362   _PSW_2          BIT 0xd2
0000            363   _PSW_1          BIT 0xd1
0000            364   _PSW_0          BIT 0xd0
0000            365   _CY             BIT 0xd7
0000            366   _AC             BIT 0xd6
0000            367   _F0             BIT 0xd5
0000            368   _RS1            BIT 0xd4
0000            369   _RS0            BIT 0xd3
0000            370   _OV             BIT 0xd2
0000            371   _F1             BIT 0xd1
0000            372   _P              BIT 0xd0
0000            373   _SCON_7         BIT 0x9f
0000            374   _SCON_6         BIT 0x9e
0000            375   _SCON_5         BIT 0x9d
0000            376   _SCON_4         BIT 0x9c
0000            377   _SCON_3         BIT 0x9b
0000            378   _SCON_2         BIT 0x9a
0000            379   _SCON_1         BIT 0x99
0000            380   _SCON_0         BIT 0x98
0000            381   _SM0            BIT 0x9f
0000            382   _FE             BIT 0x9f
0000            383   _SM1            BIT 0x9e
0000            384   _SM2            BIT 0x9d
0000            385   _REN            BIT 0x9c
0000            386   _TB8            BIT 0x9b
0000            387   _RB8            BIT 0x9a
0000            388   _TI             BIT 0x99
0000            389   _RI             BIT 0x98
0000            390   _TCON_7         BIT 0x8f
0000            391   _TCON_6         BIT 0x8e
0000            392   _TCON_5         BIT 0x8d
0000            393   _TCON_4         BIT 0x8c
0000            394   _TCON_3         BIT 0x8b
0000            395   _TCON_2         BIT 0x8a
0000            396   _TCON_1         BIT 0x89
0000            397   _TCON_0         BIT 0x88
0000            398   _TF1            BIT 0x8f
0000            399   _TR1            BIT 0x8e
0000            400   _TF0            BIT 0x8d
0000            401   _TR0            BIT 0x8c
0000            402   _IE1            BIT 0x8b
0000            403   _IT1            BIT 0x8a
0000            404   _IE0            BIT 0x89
0000            405   _IT0            BIT 0x88
0000            406   _TCR20_7        BIT 0xcf
0000            407   _TCR20_6        BIT 0xce
0000            408   _TCR20_5        BIT 0xcd
0000            409   _TCR20_4        BIT 0xcc
0000            410   _TCR20_3        BIT 0xcb
0000            411   _TCR20_2        BIT 0xca
0000            412   _TCR20_1        BIT 0xc9
0000            413   _TCR20_0        BIT 0xc8
0000            414   _PLEEN          BIT 0xcf
0000            415   _HLTRN          BIT 0xce
0000            416   _HLTEN          BIT 0xcd
0000            417   _ALTCD          BIT 0xcc
0000            418   _ALTAB          BIT 0xcb
0000            419   _TDIR2          BIT 0xca
0000            420   _TMOD21         BIT 0xc9
0000            421   _TMOD20         BIT 0xc8
0000            422   ;--------------------------------------------------------
0000            423   ; overlayable register banks
0000            424   ;--------------------------------------------------------
0000            425            rbank0 segment data overlay
0000            426   ;--------------------------------------------------------
0000            427   ; internal ram data
0000            428   ;--------------------------------------------------------
0000            429            rseg R_DSEG
0000            430   _msCount:
0000            431            ds 2
0002            432   _secs:
0002            433            ds 1
0003            434   _mins:
0003            435            ds 1
0004            436   _pwmcount:
0004            437            ds 1
0005            438   _pwm_left:
0005            439            ds 1
0006            440   _pwm_right:
0006            441            ds 1
0007            442   _line_counter:
0007            443            ds 2
0009            444   _exec:
0009            445            ds 2
000B            446   _line_timer:
000B            447            ds 2
000D            448   _LCDprint_PARM_2:
000D            449            ds 1
000E            450   _display_LCD_buff_1_94:
000E            451            ds 17
001F            452   _main_str_1_96:
001F            453            ds 17
0030            454   _main_cor_1_96:
0030            455            ds 4
0034            456   _main_pre_error_1_96:
0034            457            ds 4
0038            458   _main_new_speed_low_1_96:
0038            459            ds 4
003C            460   _main_new_speed_high_1_96:
003C            461            ds 4
0040            462   _main_counter_1_96:
0040            463            ds 4
0044            464   _main_line_sensor_2_97:
0044            465            ds 4
0048            466   _main_left_2_97:
0048            467            ds 4
004C            468   _main_right_2_97:
004C            469            ds 4
0050            470   ;--------------------------------------------------------
0050            471   ; overlayable items in internal ram 
0050            472   ;--------------------------------------------------------
0000            473            rseg R_OSEG
0000            474   ;--------------------------------------------------------
0000            475   ; indirectly addressable internal ram data
0000            476   ;--------------------------------------------------------
0000            477            rseg R_ISEG
0000            478   ;--------------------------------------------------------
0000            479   ; absolute internal ram data
0000            480   ;--------------------------------------------------------
0000            481            DSEG
0000            482   ;--------------------------------------------------------
0000            483   ; bit data
0000            484   ;--------------------------------------------------------
0000            485            rseg R_BSEG
0000            486   _time_update_flag:
0000            487            DBIT    1
0001            488   _line_counter_flag:
0001            489            DBIT    1
0002            490   _LCDprint_PARM_3:
0002            491            DBIT    1
0003            492   ;--------------------------------------------------------
0003            493   ; paged external ram data
0003            494   ;--------------------------------------------------------
0000            495            rseg R_PSEG
0000            496   ;--------------------------------------------------------
0000            497   ; external ram data
0000            498   ;--------------------------------------------------------
0000            499            rseg R_XSEG
FFC8            500            XSEG at 0xffc8
FFC8            501   _BODCFG: ds 1
FFC9            502            public _BODCFG
0000            503            rseg R_XSEG
FFDE            504            XSEG at 0xffde
FFDE            505   _CLKCON: ds 1
FFDF            506            public _CLKCON
0000            507            rseg R_XSEG
FFE1            508            XSEG at 0xffe1
FFE1            509   _PGACON1: ds 1
FFE2            510            public _PGACON1
0000            511            rseg R_XSEG
FFE4            512            XSEG at 0xffe4
FFE4            513   _PGACON1B: ds 1
FFE5            514            public _PGACON1B
0000            515            rseg R_XSEG
FFE3            516            XSEG at 0xffe3
FFE3            517   _PGA1TRIM8X16X: ds 1
FFE4            518            public _PGA1TRIM8X16X
0000            519            rseg R_XSEG
FFE2            520            XSEG at 0xffe2
FFE2            521   _PGA1TRIM2X4X: ds 1
FFE3            522            public _PGA1TRIM2X4X
0000            523            rseg R_XSEG
FFCA            524            XSEG at 0xffca
FFCA            525   _PGACON0: ds 1
FFCB            526            public _PGACON0
0000            527            rseg R_XSEG
FFCE            528            XSEG at 0xffce
FFCE            529   _PGACON0B: ds 1
FFCF            530            public _PGACON0B
0000            531            rseg R_XSEG
FFCD            532            XSEG at 0xffcd
FFCD            533   _PGA0TRIM8X16X: ds 1
FFCE            534            public _PGA0TRIM8X16X
0000            535            rseg R_XSEG
FFCC            536            XSEG at 0xffcc
FFCC            537   _PGA0TRIM2X4X: ds 1
FFCD            538            public _PGA0TRIM2X4X
0000            539            rseg R_XSEG
FFBF            540            XSEG at 0xffbf
FFBF            541   _RTCDATH: ds 1
FFC0            542            public _RTCDATH
0000            543            rseg R_XSEG
FFBE            544            XSEG at 0xffbe
FFBE            545   _RTCDATL: ds 1
FFBF            546            public _RTCDATL
0000            547            rseg R_XSEG
0000            548   ;--------------------------------------------------------
0000            549   ; absolute external ram data
0000            550   ;--------------------------------------------------------
FFBF            551            XSEG
FFBF            552   ;--------------------------------------------------------
FFBF            553   ; external initialized ram data
FFBF            554   ;--------------------------------------------------------
0000            555            rseg R_IXSEG
0000            556            rseg R_HOME
0000            557            rseg R_GSINIT
0000            558            rseg R_CSEG
0000            559   ;--------------------------------------------------------
0000            560   ; Reset entry point and interrupt vectors
0000            561   ;--------------------------------------------------------
0000            562            CSEG at 0x0000
0000 020100     563            ljmp    _crt0
000B            564            CSEG at 0x000b
000B 020100     565            ljmp    _Timer0ISR
000E            566   ;--------------------------------------------------------
000E            567   ; global & static initialisations
000E            568   ;--------------------------------------------------------
0000            569            rseg R_HOME
0000            570            rseg R_GSINIT
0000            571            rseg R_GSINIT
0000            572   ;--------------------------------------------------------
0000            573   ; data variables initialization
0000            574   ;--------------------------------------------------------
0000            575            rseg R_DINIT
0000            576   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:34: volatile int msCount=0; // Volatiles can be changed by stuff outside our program, like memory registers
0000 E4         577            clr     a
0001 F5E0       578            mov     _msCount,a
0003 F5E1       579            mov     (_msCount + 1),a
0005            580   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:35: volatile unsigned char secs=0, mins=0; // They are like global variables, kinda 
0005 75B800     581            mov     _secs,#0x00
0008            582   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:35: volatile bit time_update_flag=0;
0008 75F000     583            mov     _mins,#0x00
000B            584   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:41: volatile int line_counter = 0;
000B E4         585            clr     a
000C F5F0       586            mov     _line_counter,a
000E F5F1       587            mov     (_line_counter + 1),a
0010            588   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:42: volatile int exec = 0;
0010 E4         589            clr     a
0011 F5B0       590            mov     _exec,a
0013 F5B1       591            mov     (_exec + 1),a
0015            592   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:43: volatile int line_timer = 0;
0015 E4         593            clr     a
0016 F570       594            mov     _line_timer,a
0018 F571       595            mov     (_line_timer + 1),a
001A            596   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:36: volatile bit time_update_flag=0;
001A C2E0       597            clr     _time_update_flag
001C            598   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:37: volatile bit line_counter_flag=0;
001C C290       599            clr     _line_counter_flag
001E            600            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            601   ;--------------------------------------------------------
001E            602   ; code
001E            603   ;--------------------------------------------------------
0000            604            rseg R_CSEG
0000            605   ;------------------------------------------------------------
0000            606   ;Allocation info for local variables in function 'InitPorts'
0000            607   ;------------------------------------------------------------
0000            608   ;------------------------------------------------------------
0000            609   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:45: void InitPorts(void)
0000            610   ;        -----------------------------------------
0000            611   ;         function InitPorts
0000            612   ;        -----------------------------------------
0000            613   _InitPorts:
0000            614            using   0
0000            615   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:47: P0M1=0x1E;
0000 75841E     616            mov     _P0M1,#0x1E
0003            617   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:48: P0M2=0x00;
0003 758500     618            mov     _P0M2,#0x00
0006            619   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:49: P1M1=0;
0006 759100     620            mov     _P1M1,#0x00
0009            621   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:50: P1M2=0;
0009 759200     622            mov     _P1M2,#0x00
000C            623   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:51: P2M1=0;
000C 75A400     624            mov     _P2M1,#0x00
000F            625   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:52: P2M2=0;
000F 75A500     626            mov     _P2M2,#0x00
0012            627   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:53: P3M1=0;
0012 75B100     628            mov     _P3M1,#0x00
0015            629   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:54: P3M2=0;
0015 75B200     630            mov     _P3M2,#0x00
0018 22         631            ret
0019            632   ;------------------------------------------------------------
0019            633   ;Allocation info for local variables in function 'Wait50us'
0019            634   ;------------------------------------------------------------
0019            635   ;------------------------------------------------------------
0019            636   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:57: void Wait50us (void)
0019            637   ;        -----------------------------------------
0019            638   ;         function Wait50us
0019            639   ;        -----------------------------------------
0019            640   _Wait50us:
0019            641   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:62: _endasm;
0019            642            
0019 7852       643                mov R0, #82
001B            644            L0:
001B D898       645            djnz R0, L0 ; 2 machine cycles-> 2*0.27126us*92=50us
001D            646                
001D 22         647            ret
001E            648   ;------------------------------------------------------------
001E            649   ;Allocation info for local variables in function 'waitms'
001E            650   ;------------------------------------------------------------
001E            651   ;ms                        Allocated to registers r2 r3 
001E            652   ;j                         Allocated to registers r4 r5 
001E            653   ;k                         Allocated to registers r6 
001E            654   ;------------------------------------------------------------
001E            655   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:65: void waitms (unsigned int ms)
001E            656   ;        -----------------------------------------
001E            657   ;         function waitms
001E            658   ;        -----------------------------------------
001E            659   _waitms:
001E AA82       660            mov     r2,dpl
0020 AB83       661            mov     r3,dph
0022            662   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:71: for(j=0; j<ms; j++)
0022 7C00       663            mov     r4,#0x00
0024 7D00       664            mov     r5,#0x00
0026            665   L004004?:
0026 C3         666            clr     c
0027 EC         667            mov     a,r4
0028 9A         668            subb    a,r2
0029 ED         669            mov     a,r5
002A 9B         670            subb    a,r3
002B 5001       671            jnc     L004008?
002D            672   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:72: for (k=0; k<20; k++) Wait50us();
002D 7E14       673            mov     r6,#0x14
002F            674   L004003?:
002F C002       675            push    ar2
0031 C003       676            push    ar3
0033 C004       677            push    ar4
0035 C005       678            push    ar5
0037 C006       679            push    ar6
0039 120100     680            lcall   _Wait50us
003C D006       681            pop     ar6
003E D005       682            pop     ar5
0040 D004       683            pop     ar4
0042 D003       684            pop     ar3
0044 D002       685            pop     ar2
0046 DED8       686            djnz    r6,L004003?
0048            687   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:71: for(j=0; j<ms; j++)
0048 0C         688            inc     r4
0049 BC0058     689            cjne    r4,#0x00,L004004?
004C 0D         690            inc     r5
004D 8001       691            sjmp    L004004?
004F            692   L004008?:
004F 22         693            ret
0050            694   ;------------------------------------------------------------
0050            695   ;Allocation info for local variables in function 'LCD_pulse'
0050            696   ;------------------------------------------------------------
0050            697   ;------------------------------------------------------------
0050            698   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:75: void LCD_pulse (void)
0050            699   ;        -----------------------------------------
0050            700   ;         function LCD_pulse
0050            701   ;        -----------------------------------------
0050            702   _LCD_pulse:
0050            703   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:77: LCD_E=1;
0050 D2A5       704            setb    _P2_5
0052            705   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:78: Wait50us();
0052 120100     706            lcall   _Wait50us
0055            707   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:79: LCD_E=0;
0055 C2A5       708            clr     _P2_5
0057 22         709            ret
0058            710   ;------------------------------------------------------------
0058            711   ;Allocation info for local variables in function 'LCD_byte'
0058            712   ;------------------------------------------------------------
0058            713   ;x                         Allocated to registers 
0058            714   ;------------------------------------------------------------
0058            715   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:82: void LCD_byte (unsigned char x)
0058            716   ;        -----------------------------------------
0058            717   ;         function LCD_byte
0058            718   ;        -----------------------------------------
0058            719   _LCD_byte:
0058 8582E0     720            mov     _ACC,dpl
005B            721   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:86: LCD_D7=ACC_7;
005B A2E7       722            mov     c,_ACC_7
005D 9294       723            mov     _P1_4,c
005F            724   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:87: LCD_D6=ACC_6;
005F A2E6       725            mov     c,_ACC_6
0061 9296       726            mov     _P1_6,c
0063            727   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:88: LCD_D5=ACC_5;
0063 A2E5       728            mov     c,_ACC_5
0065 9297       729            mov     _P1_7,c
0067            730   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:89: LCD_D4=ACC_4;
0067 A2E4       731            mov     c,_ACC_4
0069 92A0       732            mov     _P2_0,c
006B            733   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:90: LCD_D3=ACC_3;
006B A2E3       734            mov     c,_ACC_3
006D 92A1       735            mov     _P2_1,c
006F            736   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:91: LCD_D2=ACC_2;
006F A2E2       737            mov     c,_ACC_2
0071 92A2       738            mov     _P2_2,c
0073            739   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:92: LCD_D1=ACC_1;
0073 A2E1       740            mov     c,_ACC_1
0075 92A3       741            mov     _P2_3,c
0077            742   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:93: LCD_D0=ACC_0;
0077 A2E0       743            mov     c,_ACC_0
0079 92A4       744            mov     _P2_4,c
007B            745   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:94: LCD_pulse();
007B 020100     746            ljmp    _LCD_pulse
007E            747   ;------------------------------------------------------------
007E            748   ;Allocation info for local variables in function 'WriteData'
007E            749   ;------------------------------------------------------------
007E            750   ;x                         Allocated to registers r2 
007E            751   ;------------------------------------------------------------
007E            752   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:97: void WriteData (unsigned char x)
007E            753   ;        -----------------------------------------
007E            754   ;         function WriteData
007E            755   ;        -----------------------------------------
007E            756   _WriteData:
007E AA82       757            mov     r2,dpl
0080            758   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:99: LCD_RS=1;
0080 D2A7       759            setb    _P2_7
0082            760   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:100: LCD_byte(x);
0082 8A82       761            mov     dpl,r2
0084 120100     762            lcall   _LCD_byte
0087            763   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:101: waitms(2);
0087 900002     764            mov     dptr,#0x0002
008A 020100     765            ljmp    _waitms
008D            766   ;------------------------------------------------------------
008D            767   ;Allocation info for local variables in function 'WriteCommand'
008D            768   ;------------------------------------------------------------
008D            769   ;x                         Allocated to registers r2 
008D            770   ;------------------------------------------------------------
008D            771   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:104: void WriteCommand (unsigned char x)
008D            772   ;        -----------------------------------------
008D            773   ;         function WriteCommand
008D            774   ;        -----------------------------------------
008D            775   _WriteCommand:
008D AA82       776            mov     r2,dpl
008F            777   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:106: LCD_RS=0;
008F C2A7       778            clr     _P2_7
0091            779   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:107: LCD_byte(x);
0091 8A82       780            mov     dpl,r2
0093 120100     781            lcall   _LCD_byte
0096            782   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:108: waitms(5);
0096 900005     783            mov     dptr,#0x0005
0099 020100     784            ljmp    _waitms
009C            785   ;------------------------------------------------------------
009C            786   ;Allocation info for local variables in function 'LCD_8BIT'
009C            787   ;------------------------------------------------------------
009C            788   ;------------------------------------------------------------
009C            789   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:111: void LCD_8BIT (void)
009C            790   ;        -----------------------------------------
009C            791   ;         function LCD_8BIT
009C            792   ;        -----------------------------------------
009C            793   _LCD_8BIT:
009C            794   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:113: LCD_E=0;  // Resting state of LCD's enable is zero
009C C2A5       795            clr     _P2_5
009E            796   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:114: LCD_RW=0; // We are only writing to the LCD in this program
009E C2A6       797            clr     _P2_6
00A0            798   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:115: waitms(20);
00A0 900014     799            mov     dptr,#0x0014
00A3 120100     800            lcall   _waitms
00A6            801   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:117: WriteCommand(0x33);
00A6 758233     802            mov     dpl,#0x33
00A9 120100     803            lcall   _WriteCommand
00AC            804   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:118: WriteCommand(0x33);
00AC 758233     805            mov     dpl,#0x33
00AF 120100     806            lcall   _WriteCommand
00B2            807   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:119: WriteCommand(0x33); // Stay in 8-bit mode
00B2 758233     808            mov     dpl,#0x33
00B5 120100     809            lcall   _WriteCommand
00B8            810   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:122: WriteCommand(0x38);
00B8 758238     811            mov     dpl,#0x38
00BB 120100     812            lcall   _WriteCommand
00BE            813   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:123: WriteCommand(0x0c);
00BE 75820C     814            mov     dpl,#0x0C
00C1 120100     815            lcall   _WriteCommand
00C4            816   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:124: WriteCommand(0x01); // Clear screen command (takes some time)
00C4 758201     817            mov     dpl,#0x01
00C7 120100     818            lcall   _WriteCommand
00CA            819   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:125: waitms(20); // Wait for clear screen command to finsih.
00CA 900014     820            mov     dptr,#0x0014
00CD 020100     821            ljmp    _waitms
00D0            822   ;------------------------------------------------------------
00D0            823   ;Allocation info for local variables in function 'LCDprint'
00D0            824   ;------------------------------------------------------------
00D0            825   ;line                      Allocated with name '_LCDprint_PARM_2'
00D0            826   ;string                    Allocated to registers r2 r3 r4 
00D0            827   ;j                         Allocated to registers r5 
00D0            828   ;------------------------------------------------------------
00D0            829   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:128: void LCDprint(char * string, unsigned char line, bit clear)
00D0            830   ;        -----------------------------------------
00D0            831   ;         function LCDprint
00D0            832   ;        -----------------------------------------
00D0            833   _LCDprint:
00D0 AA82       834            mov     r2,dpl
00D2 AB83       835            mov     r3,dph
00D4 ACF0       836            mov     r4,b
00D6            837   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:132: WriteCommand(line==2?0xc0:0x80);
00D6 7402       838            mov     a,#0x02
00D8 B53058     839            cjne    a,_LCDprint_PARM_2,L010013?
00DB 7DC0       840            mov     r5,#0xC0
00DD 8001       841            sjmp    L010014?
00DF            842   L010013?:
00DF 7D80       843            mov     r5,#0x80
00E1            844   L010014?:
00E1 8D82       845            mov     dpl,r5
00E3 C002       846            push    ar2
00E5 C003       847            push    ar3
00E7 C004       848            push    ar4
00E9 120100     849            lcall   _WriteCommand
00EC            850   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:133: waitms(5);
00EC 900005     851            mov     dptr,#0x0005
00EF 120100     852            lcall   _waitms
00F2 D004       853            pop     ar4
00F4 D003       854            pop     ar3
00F6 D002       855            pop     ar2
00F8            856   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:134: for(j=0; string[j]!=0; j++)       WriteData(string[j]);// Write the message
00F8 7D00       857            mov     r5,#0x00
00FA            858   L010003?:
00FA ED         859            mov     a,r5
00FB 2A         860            add     a,r2
00FC FE         861            mov     r6,a
00FD E4         862            clr     a
00FE 3B         863            addc    a,r3
00FF FF         864            mov     r7,a
0100 8C00       865            mov     ar0,r4
0102 8E82       866            mov     dpl,r6
0104 8F83       867            mov     dph,r7
0106 88F0       868            mov     b,r0
0108 120100     869            lcall   __gptrget
010B FE         870            mov     r6,a
010C 6001       871            jz      L010006?
010E 8E82       872            mov     dpl,r6
0110 C002       873            push    ar2
0112 C003       874            push    ar3
0114 C004       875            push    ar4
0116 C005       876            push    ar5
0118 120100     877            lcall   _WriteData
011B D005       878            pop     ar5
011D D004       879            pop     ar4
011F D003       880            pop     ar3
0121 D002       881            pop     ar2
0123 0D         882            inc     r5
0124 8001       883            sjmp    L010003?
0126            884   L010006?:
0126            885   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:135: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0126 304098     886            jnb     _LCDprint_PARM_3,L010011?
0129 8D02       887            mov     ar2,r5
012B            888   L010007?:
012B BA1018     889            cjne    r2,#0x10,L010026?
012E            890   L010026?:
012E 5001       891            jnc     L010011?
0130 758220     892            mov     dpl,#0x20
0133 C002       893            push    ar2
0135 120100     894            lcall   _WriteData
0138 D002       895            pop     ar2
013A 0A         896            inc     r2
013B 8001       897            sjmp    L010007?
013D            898   L010011?:
013D 22         899            ret
013E            900   ;------------------------------------------------------------
013E            901   ;Allocation info for local variables in function 'Wait1S'
013E            902   ;------------------------------------------------------------
013E            903   ;------------------------------------------------------------
013E            904   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:138: void Wait1S (void)
013E            905   ;        -----------------------------------------
013E            906   ;         function Wait1S
013E            907   ;        -----------------------------------------
013E            908   _Wait1S:
013E            909   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:147: _endasm;
013E            910            
013E 7A28       911             mov R2, #40
0140            912            L3:
0140 79FA       913            mov R1, #250
0142            914            L2:
0142 78B8       915            mov R0, #184
0144            916            L1:
0144 D8D8       917            djnz R0, L1 ; 2 machine cycles-> 2*0.27126us*184=100us
0146 D998       918                djnz R1, L2 ; 100us*250=0.025s
0148 DA58       919                djnz R2, L3 ; 0.025s*40=1s
014A            920                
014A 22         921            ret
014B            922   ;------------------------------------------------------------
014B            923   ;Allocation info for local variables in function 'InitSerialPort'
014B            924   ;------------------------------------------------------------
014B            925   ;------------------------------------------------------------
014B            926   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:150: void InitSerialPort(void)
014B            927   ;        -----------------------------------------
014B            928   ;         function InitSerialPort
014B            929   ;        -----------------------------------------
014B            930   _InitSerialPort:
014B            931   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:152: BRGCON=0x00; //Make sure the baud rate generator is off
014B 75BD00     932            mov     _BRGCON,#0x00
014E            933   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:153: BRGR1=((XTAL/BAUD)-16)/0x100;
014E 75BF00     934            mov     _BRGR1,#0x00
0151            935   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:154: BRGR0=((XTAL/BAUD)-16)%0x100;
0151 75BE30     936            mov     _BRGR0,#0x30
0154            937   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:155: BRGCON=0x03; //Turn-on the baud rate generator
0154 75BD03     938            mov     _BRGCON,#0x03
0157            939   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:156: SCON=0x52; //Serial port in mode 1, ren, txrdy, rxempty
0157 759852     940            mov     _SCON,#0x52
015A            941   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:157: P1M1=0x00; //Enable pins RxD and Txd
015A 759100     942            mov     _P1M1,#0x00
015D            943   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:158: P1M2=0x00; //Enable pins RxD and Txd
015D 759200     944            mov     _P1M2,#0x00
0160 22         945            ret
0161            946   ;------------------------------------------------------------
0161            947   ;Allocation info for local variables in function 'InitADC'
0161            948   ;------------------------------------------------------------
0161            949   ;------------------------------------------------------------
0161            950   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:161: void InitADC(void)
0161            951   ;        -----------------------------------------
0161            952   ;         function InitADC
0161            953   ;        -----------------------------------------
0161            954   _InitADC:
0161            955   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:165: P0M1 |= (P0M1_4 | P0M1_3 | P0M1_2 | P0M1_1);
0161 43841E     956            orl     _P0M1,#0x1E
0164            957   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:166: P0M2 &= ~(P0M1_4 | P0M1_3 | P0M1_2 | P0M1_1);
0164 5385E1     958            anl     _P0M2,#0xE1
0167            959   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:169: BURST1=1; //Autoscan continuous conversion mode
0167 D2C6       960            setb    _BURST1
0169            961   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:170: ADMODB = CLK0; //ADC1 clock is 7.3728MHz/2
0169 75A120     962            mov     _ADMODB,#0x20
016C            963   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:171: ADINS  = (ADI13|ADI12|ADI11|ADI10); // Select the four channels for conversion
016C 75A3F0     964            mov     _ADINS,#0xF0
016F            965   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:172: ADCON1 = (ENADC1|ADCS10); //Enable the converter and start immediately
016F 759705     966            mov     _ADCON1,#0x05
0172            967   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:173: while((ADCI1&ADCON1)==0); //Wait for first conversion to complete
0172            968   L013001?:
0172 E597       969            mov     a,_ADCON1
0174 30E318     970            jnb     acc.3,L013001?
0177 22         971            ret
0178            972   ;------------------------------------------------------------
0178            973   ;Allocation info for local variables in function 'InitTimer0'
0178            974   ;------------------------------------------------------------
0178            975   ;------------------------------------------------------------
0178            976   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:176: void InitTimer0 (void)
0178            977   ;        -----------------------------------------
0178            978   ;         function InitTimer0
0178            979   ;        -----------------------------------------
0178            980   _InitTimer0:
0178            981   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:180: TR0=0; // Stop timer 0
0178 C28C       982            clr     _TR0
017A            983   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:181: TMOD=(TMOD&0xf0)|0x01; // 16-bit timer
017A 74F0       984            mov     a,#0xF0
017C 5589       985            anl     a,_TMOD
017E 4401       986            orl     a,#0x01
0180 F589       987            mov     _TMOD,a
0182            988   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:182: TH0=TIMER0_RELOAD_VALUE/0x100; // I think the RHS is 0001 0000 0000, are we dividing?
0182 758CFE     989            mov     _TH0,#0xFE
0185            990   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:183: TL0=TIMER0_RELOAD_VALUE%0x100; // % means modulo, apparently? ...are we modulo-ing?
0185 758A90     991            mov     _TL0,#0x90
0188            992   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:184: TR0=1; // Start timer 0 (bit 4 in TCON)
0188 D28C       993            setb    _TR0
018A            994   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:185: ET0=1; // Enable timer 0 interrupt - the interrupt controller IEN0 is bit-adressable, so we change only the bit we need
018A D2A9       995            setb    _ET0
018C            996   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:186: EA=1;  // Enable global interrupts
018C D2AF       997            setb    _EA
018E 22         998            ret
018F            999   ;------------------------------------------------------------
018F           1000   ;Allocation info for local variables in function 'Timer0ISR'
018F           1001   ;------------------------------------------------------------
018F           1002   ;------------------------------------------------------------
018F           1003   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:190: void Timer0ISR (void) interrupt 1
018F           1004   ;        -----------------------------------------
018F           1005   ;         function Timer0ISR
018F           1006   ;        -----------------------------------------
018F           1007   _Timer0ISR:
018F C0E0      1008            push    acc
0191 C0D0      1009            push    psw
0193 75D000    1010            mov     psw,#0x00
0196           1011   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:193: TR0=0; // Stop timer 0
0196 C28C      1012            clr     _TR0
0198           1013   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:194: TH0=TIMER0_RELOAD_VALUE/0x100;
0198 758CFE    1014            mov     _TH0,#0xFE
019B           1015   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:195: TL0=TIMER0_RELOAD_VALUE%0x100;
019B 758A90    1016            mov     _TL0,#0x90
019E           1017   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:196: TR0=1; // Start timer 0
019E D28C      1018            setb    _TR0
01A0           1019   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:198: if(++pwmcount>99) pwmcount=0;
01A0 05B0      1020            inc     _pwmcount
01A2 E5B0      1021            mov     a,_pwmcount
01A4 249C      1022            add     a,#0xff - 0x63
01A6 5001      1023            jnc     L015002?
01A8 75B000    1024            mov     _pwmcount,#0x00
01AB           1025   L015002?:
01AB           1026   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:199: P0_5=(pwm_left>pwmcount)?1:0;
01AB C3        1027            clr     c
01AC E5B0      1028            mov     a,_pwmcount
01AE 9570      1029            subb    a,_pwm_left
01B0 9285      1030            mov     _P0_5,c
01B2           1031   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:200: P0_6=(pwm_right>pwmcount)?1:0;
01B2 C3        1032            clr     c
01B3 E5B0      1033            mov     a,_pwmcount
01B5 9530      1034            subb    a,_pwm_right
01B7 9286      1035            mov     _P0_6,c
01B9           1036   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:202: msCount++;
01B9 7401      1037            mov     a,#0x01
01BB 25E0      1038            add     a,_msCount
01BD F5E0      1039            mov     _msCount,a
01BF E4        1040            clr     a
01C0 35E1      1041            addc    a,(_msCount + 1)
01C2 F5E1      1042            mov     (_msCount + 1),a
01C4           1043   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:203: if(msCount==10000)
01C4 7410      1044            mov     a,#0x10
01C6 B5E018    1045            cjne    a,_msCount,L015008?
01C9 7427      1046            mov     a,#0x27
01CB B5E118    1047            cjne    a,(_msCount + 1),L015008?
01CE           1048   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:205: time_update_flag=1;
01CE D2E0      1049            setb    _time_update_flag
01D0           1050   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:206: msCount=0;
01D0 E4        1051            clr     a
01D1 F5E0      1052            mov     _msCount,a
01D3 F5E1      1053            mov     (_msCount + 1),a
01D5           1054   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:207: secs++;
01D5 05B8      1055            inc     _secs
01D7           1056   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:208: if(secs==60)
01D7 743C      1057            mov     a,#0x3C
01D9 B5B818    1058            cjne    a,_secs,L015008?
01DC           1059   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:210: secs=0;
01DC 75B800    1060            mov     _secs,#0x00
01DF           1061   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:211: mins++;
01DF 05F0      1062            inc     _mins
01E1           1063   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:212: if(mins==60)
01E1 743C      1064            mov     a,#0x3C
01E3 B5F018    1065            cjne    a,_mins,L015008?
01E6           1066   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:214: mins=0;
01E6 75F000    1067            mov     _mins,#0x00
01E9           1068   L015008?:
01E9           1069   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:219: if(line_counter_flag==1){
01E9 309058    1070            jnb     _line_counter_flag,L015011?
01EC           1071   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:220: line_timer++;
01EC 7401      1072            mov     a,#0x01
01EE 2570      1073            add     a,_line_timer
01F0 F570      1074            mov     _line_timer,a
01F2 E4        1075            clr     a
01F3 3571      1076            addc    a,(_line_timer + 1)
01F5 F571      1077            mov     (_line_timer + 1),a
01F7           1078   L015011?:
01F7 D0D0      1079            pop     psw
01F9 D0E0      1080            pop     acc
01FB 32        1081            reti
01FC           1082   ;        eliminated unneeded push/pop dpl
01FC           1083   ;        eliminated unneeded push/pop dph
01FC           1084   ;        eliminated unneeded push/pop b
01FC           1085   ;------------------------------------------------------------
01FC           1086   ;Allocation info for local variables in function 'display_LCD'
01FC           1087   ;------------------------------------------------------------
01FC           1088   ;buff                      Allocated with name '_display_LCD_buff_1_94'
01FC           1089   ;------------------------------------------------------------
01FC           1090   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:224: void display_LCD(void){
01FC           1091   ;        -----------------------------------------
01FC           1092   ;         function display_LCD
01FC           1093   ;        -----------------------------------------
01FC           1094   _display_LCD:
01FC           1095   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:227: sprintf (buff, "V0: %4.2fV", (AD1DAT0*3.3)/255.0); // Prints 4 digits with 2 decimals, appended by V
01FC 85D582    1096            mov     dpl,_AD1DAT0
01FF 120100    1097            lcall   ___uchar2fs
0202 AA82      1098            mov     r2,dpl
0204 AB83      1099            mov     r3,dph
0206 ACF0      1100            mov     r4,b
0208 FD        1101            mov     r5,a
0209 C002      1102            push    ar2
020B C003      1103            push    ar3
020D C004      1104            push    ar4
020F C005      1105            push    ar5
0211 903333    1106            mov     dptr,#0x3333
0214 75F053    1107            mov     b,#0x53
0217 7440      1108            mov     a,#0x40
0219 120100    1109            lcall   ___fsmul
021C AA82      1110            mov     r2,dpl
021E AB83      1111            mov     r3,dph
0220 ACF0      1112            mov     r4,b
0222 FD        1113            mov     r5,a
0223 E581      1114            mov     a,sp
0225 24FC      1115            add     a,#0xfc
0227 F581      1116            mov     sp,a
0229 E4        1117            clr     a
022A C0E0      1118            push    acc
022C C0E0      1119            push    acc
022E 747F      1120            mov     a,#0x7F
0230 C0E0      1121            push    acc
0232 7443      1122            mov     a,#0x43
0234 C0E0      1123            push    acc
0236 8A82      1124            mov     dpl,r2
0238 8B83      1125            mov     dph,r3
023A 8CF0      1126            mov     b,r4
023C ED        1127            mov     a,r5
023D 120100    1128            lcall   ___fsdiv
0240 AA82      1129            mov     r2,dpl
0242 AB83      1130            mov     r3,dph
0244 ACF0      1131            mov     r4,b
0246 FD        1132            mov     r5,a
0247 E581      1133            mov     a,sp
0249 24FC      1134            add     a,#0xfc
024B F581      1135            mov     sp,a
024D C002      1136            push    ar2
024F C003      1137            push    ar3
0251 C004      1138            push    ar4
0253 C005      1139            push    ar5
0255 7498      1140            mov     a,#__str_0
0257 C0E0      1141            push    acc
0259 74B1      1142            mov     a,#(__str_0 >> 8)
025B C0E0      1143            push    acc
025D 7480      1144            mov     a,#0x80
025F C0E0      1145            push    acc
0261 7478      1146            mov     a,#_display_LCD_buff_1_94
0263 C0E0      1147            push    acc
0265 74A4      1148            mov     a,#(_display_LCD_buff_1_94 >> 8)
0267 C0E0      1149            push    acc
0269 7440      1150            mov     a,#0x40
026B C0E0      1151            push    acc
026D 120100    1152            lcall   _sprintf
0270 E581      1153            mov     a,sp
0272 24F6      1154            add     a,#0xf6
0274 F581      1155            mov     sp,a
0276           1156   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:228: LCDprint(buff, 1, 1);
0276 753001    1157            mov     _LCDprint_PARM_2,#0x01
0279 D240      1158            setb    _LCDprint_PARM_3
027B 90A478    1159            mov     dptr,#_display_LCD_buff_1_94
027E 75F040    1160            mov     b,#0x40
0281 120100    1161            lcall   _LCDprint
0284           1162   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:230: sprintf (buff, "V1: %4.2fV", (AD1DAT1*3.3)/255.0);
0284 85D682    1163            mov     dpl,_AD1DAT1
0287 120100    1164            lcall   ___uchar2fs
028A AA82      1165            mov     r2,dpl
028C AB83      1166            mov     r3,dph
028E ACF0      1167            mov     r4,b
0290 FD        1168            mov     r5,a
0291 C002      1169            push    ar2
0293 C003      1170            push    ar3
0295 C004      1171            push    ar4
0297 C005      1172            push    ar5
0299 903333    1173            mov     dptr,#0x3333
029C 75F053    1174            mov     b,#0x53
029F 7440      1175            mov     a,#0x40
02A1 120100    1176            lcall   ___fsmul
02A4 AA82      1177            mov     r2,dpl
02A6 AB83      1178            mov     r3,dph
02A8 ACF0      1179            mov     r4,b
02AA FD        1180            mov     r5,a
02AB E581      1181            mov     a,sp
02AD 24FC      1182            add     a,#0xfc
02AF F581      1183            mov     sp,a
02B1 E4        1184            clr     a
02B2 C0E0      1185            push    acc
02B4 C0E0      1186            push    acc
02B6 747F      1187            mov     a,#0x7F
02B8 C0E0      1188            push    acc
02BA 7443      1189            mov     a,#0x43
02BC C0E0      1190            push    acc
02BE 8A82      1191            mov     dpl,r2
02C0 8B83      1192            mov     dph,r3
02C2 8CF0      1193            mov     b,r4
02C4 ED        1194            mov     a,r5
02C5 120100    1195            lcall   ___fsdiv
02C8 AA82      1196            mov     r2,dpl
02CA AB83      1197            mov     r3,dph
02CC ACF0      1198            mov     r4,b
02CE FD        1199            mov     r5,a
02CF E581      1200            mov     a,sp
02D1 24FC      1201            add     a,#0xfc
02D3 F581      1202            mov     sp,a
02D5 C002      1203            push    ar2
02D7 C003      1204            push    ar3
02D9 C004      1205            push    ar4
02DB C005      1206            push    ar5
02DD 7418      1207            mov     a,#__str_1
02DF C0E0      1208            push    acc
02E1 74B2      1209            mov     a,#(__str_1 >> 8)
02E3 C0E0      1210            push    acc
02E5 7480      1211            mov     a,#0x80
02E7 C0E0      1212            push    acc
02E9 7478      1213            mov     a,#_display_LCD_buff_1_94
02EB C0E0      1214            push    acc
02ED 74A4      1215            mov     a,#(_display_LCD_buff_1_94 >> 8)
02EF C0E0      1216            push    acc
02F1 7440      1217            mov     a,#0x40
02F3 C0E0      1218            push    acc
02F5 120100    1219            lcall   _sprintf
02F8 E581      1220            mov     a,sp
02FA 24F6      1221            add     a,#0xf6
02FC F581      1222            mov     sp,a
02FE           1223   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:231: LCDprint(buff, 2, 1);
02FE 753002    1224            mov     _LCDprint_PARM_2,#0x02
0301 D240      1225            setb    _LCDprint_PARM_3
0303 90A478    1226            mov     dptr,#_display_LCD_buff_1_94
0306 75F040    1227            mov     b,#0x40
0309 020100    1228            ljmp    _LCDprint
030C           1229   ;------------------------------------------------------------
030C           1230   ;Allocation info for local variables in function 'main'
030C           1231   ;------------------------------------------------------------
030C           1232   ;str                       Allocated with name '_main_str_1_96'
030C           1233   ;threshold                 Allocated to registers 
030C           1234   ;p                         Allocated to registers 
030C           1235   ;d                         Allocated to registers r6 r7 r0 r1 
030C           1236   ;k_p                       Allocated to registers 
030C           1237   ;k_d                       Allocated to registers 
030C           1238   ;cor                       Allocated with name '_main_cor_1_96'
030C           1239   ;cur_error                 Allocated to registers r2 r3 r4 r5 
030C           1240   ;pre_error                 Allocated with name '_main_pre_error_1_96'
030C           1241   ;dt                        Allocated to registers 
030C           1242   ;def_speed                 Allocated to registers 
030C           1243   ;new_speed_low             Allocated with name '_main_new_speed_low_1_96'
030C           1244   ;new_speed_high            Allocated with name '_main_new_speed_high_1_96'
030C           1245   ;counter                   Allocated with name '_main_counter_1_96'
030C           1246   ;thresh                    Allocated to registers 
030C           1247   ;line_sensor               Allocated with name '_main_line_sensor_2_97'
030C           1248   ;left                      Allocated with name '_main_left_2_97'
030C           1249   ;right                     Allocated with name '_main_right_2_97'
030C           1250   ;voltage                   Allocated to registers r6 r7 r0 r1 
030C           1251   ;------------------------------------------------------------
030C           1252   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:236: void main (void)
030C           1253   ;        -----------------------------------------
030C           1254   ;         function main
030C           1255   ;        -----------------------------------------
030C           1256   _main:
030C           1257   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:247: double cur_error =0;
030C 7A00      1258            mov     r2,#0x00
030E 7B00      1259            mov     r3,#0x00
0310 7C00      1260            mov     r4,#0x00
0312 7D00      1261            mov     r5,#0x00
0314           1262   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:253: double counter = 0;
0314 753800    1263            mov     _main_counter_1_96,#0x00
0317 753900    1264            mov     (_main_counter_1_96 + 1),#0x00
031A 753A00    1265            mov     (_main_counter_1_96 + 2),#0x00
031D 753B00    1266            mov     (_main_counter_1_96 + 3),#0x00
0320           1267   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:256: InitPorts();
0320 C002      1268            push    ar2
0322 C003      1269            push    ar3
0324 C004      1270            push    ar4
0326 C005      1271            push    ar5
0328 120100    1272            lcall   _InitPorts
032B           1273   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:257: LCD_8BIT();
032B 120100    1274            lcall   _LCD_8BIT
032E           1275   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:258: InitSerialPort();
032E 120100    1276            lcall   _InitSerialPort
0331           1277   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:259: InitADC();
0331 120100    1278            lcall   _InitADC
0334           1279   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:260: InitTimer0();
0334 120100    1280            lcall   _InitTimer0
0337 D005      1281            pop     ar5
0339 D004      1282            pop     ar4
033B D003      1283            pop     ar3
033D D002      1284            pop     ar2
033F           1285   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:262: pre_error = 0;
033F 754800    1286            mov     _main_pre_error_1_96,#0x00
0342 754900    1287            mov     (_main_pre_error_1_96 + 1),#0x00
0345 754A00    1288            mov     (_main_pre_error_1_96 + 2),#0x00
0348 754B00    1289            mov     (_main_pre_error_1_96 + 3),#0x00
034B           1290   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:263: while(1)
034B           1291   L017050?:
034B           1292   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:266: double line_sensor = (AD1DAT3/255.0)*3.3;
034B 85F582    1293            mov     dpl,_AD1DAT3
034E C002      1294            push    ar2
0350 C003      1295            push    ar3
0352 C004      1296            push    ar4
0354 C005      1297            push    ar5
0356 120100    1298            lcall   ___uchar2fs
0359 AE82      1299            mov     r6,dpl
035B AF83      1300            mov     r7,dph
035D A8F0      1301            mov     r0,b
035F F9        1302            mov     r1,a
0360 E4        1303            clr     a
0361 C0E0      1304            push    acc
0363 C0E0      1305            push    acc
0365 747F      1306            mov     a,#0x7F
0367 C0E0      1307            push    acc
0369 7443      1308            mov     a,#0x43
036B C0E0      1309            push    acc
036D 8E82      1310            mov     dpl,r6
036F 8F83      1311            mov     dph,r7
0371 88F0      1312            mov     b,r0
0373 E9        1313            mov     a,r1
0374 120100    1314            lcall   ___fsdiv
0377 AE82      1315            mov     r6,dpl
0379 AF83      1316            mov     r7,dph
037B A8F0      1317            mov     r0,b
037D F9        1318            mov     r1,a
037E E581      1319            mov     a,sp
0380 24FC      1320            add     a,#0xfc
0382 F581      1321            mov     sp,a
0384 C006      1322            push    ar6
0386 C007      1323            push    ar7
0388 C000      1324            push    ar0
038A C001      1325            push    ar1
038C 903333    1326            mov     dptr,#0x3333
038F 75F053    1327            mov     b,#0x53
0392 7440      1328            mov     a,#0x40
0394 120100    1329            lcall   ___fsmul
0397 858288    1330            mov     _main_line_sensor_2_97,dpl
039A 858389    1331            mov     (_main_line_sensor_2_97 + 1),dph
039D 85F08A    1332            mov     (_main_line_sensor_2_97 + 2),b
03A0 F58B      1333            mov     (_main_line_sensor_2_97 + 3),a
03A2 E581      1334            mov     a,sp
03A4 24FC      1335            add     a,#0xfc
03A6 F581      1336            mov     sp,a
03A8           1337   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:267: double left = (AD1DAT1/255.0)*3.3;
03A8 85D682    1338            mov     dpl,_AD1DAT1
03AB 120100    1339            lcall   ___uchar2fs
03AE AE82      1340            mov     r6,dpl
03B0 AF83      1341            mov     r7,dph
03B2 A8F0      1342            mov     r0,b
03B4 F9        1343            mov     r1,a
03B5 E4        1344            clr     a
03B6 C0E0      1345            push    acc
03B8 C0E0      1346            push    acc
03BA 747F      1347            mov     a,#0x7F
03BC C0E0      1348            push    acc
03BE 7443      1349            mov     a,#0x43
03C0 C0E0      1350            push    acc
03C2 8E82      1351            mov     dpl,r6
03C4 8F83      1352            mov     dph,r7
03C6 88F0      1353            mov     b,r0
03C8 E9        1354            mov     a,r1
03C9 120100    1355            lcall   ___fsdiv
03CC AE82      1356            mov     r6,dpl
03CE AF83      1357            mov     r7,dph
03D0 A8F0      1358            mov     r0,b
03D2 F9        1359            mov     r1,a
03D3 E581      1360            mov     a,sp
03D5 24FC      1361            add     a,#0xfc
03D7 F581      1362            mov     sp,a
03D9 C006      1363            push    ar6
03DB C007      1364            push    ar7
03DD C000      1365            push    ar0
03DF C001      1366            push    ar1
03E1 903333    1367            mov     dptr,#0x3333
03E4 75F053    1368            mov     b,#0x53
03E7 7440      1369            mov     a,#0x40
03E9 120100    1370            lcall   ___fsmul
03EC 8582C8    1371            mov     _main_left_2_97,dpl
03EF 8583C9    1372            mov     (_main_left_2_97 + 1),dph
03F2 85F0CA    1373            mov     (_main_left_2_97 + 2),b
03F5 F5CB      1374            mov     (_main_left_2_97 + 3),a
03F7 E581      1375            mov     a,sp
03F9 24FC      1376            add     a,#0xfc
03FB F581      1377            mov     sp,a
03FD           1378   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:268: double right = (AD1DAT2/255.0)*3.3;
03FD 85D782    1379            mov     dpl,_AD1DAT2
0400 120100    1380            lcall   ___uchar2fs
0403 AE82      1381            mov     r6,dpl
0405 AF83      1382            mov     r7,dph
0407 A8F0      1383            mov     r0,b
0409 F9        1384            mov     r1,a
040A E4        1385            clr     a
040B C0E0      1386            push    acc
040D C0E0      1387            push    acc
040F 747F      1388            mov     a,#0x7F
0411 C0E0      1389            push    acc
0413 7443      1390            mov     a,#0x43
0415 C0E0      1391            push    acc
0417 8E82      1392            mov     dpl,r6
0419 8F83      1393            mov     dph,r7
041B 88F0      1394            mov     b,r0
041D E9        1395            mov     a,r1
041E 120100    1396            lcall   ___fsdiv
0421 AE82      1397            mov     r6,dpl
0423 AF83      1398            mov     r7,dph
0425 A8F0      1399            mov     r0,b
0427 F9        1400            mov     r1,a
0428 E581      1401            mov     a,sp
042A 24FC      1402            add     a,#0xfc
042C F581      1403            mov     sp,a
042E C006      1404            push    ar6
0430 C007      1405            push    ar7
0432 C000      1406            push    ar0
0434 C001      1407            push    ar1
0436 903333    1408            mov     dptr,#0x3333
0439 75F053    1409            mov     b,#0x53
043C 7440      1410            mov     a,#0x40
043E 120100    1411            lcall   ___fsmul
0441 858218    1412            mov     _main_right_2_97,dpl
0444 858319    1413            mov     (_main_right_2_97 + 1),dph
0447 85F01A    1414            mov     (_main_right_2_97 + 2),b
044A F51B      1415            mov     (_main_right_2_97 + 3),a
044C E581      1416            mov     a,sp
044E 24FC      1417            add     a,#0xfc
0450 F581      1418            mov     sp,a
0452           1419   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:269: double voltage = (AD1DAT0/255.0)*3.3;
0452 85D582    1420            mov     dpl,_AD1DAT0
0455 120100    1421            lcall   ___uchar2fs
0458 AE82      1422            mov     r6,dpl
045A AF83      1423            mov     r7,dph
045C A8F0      1424            mov     r0,b
045E F9        1425            mov     r1,a
045F E4        1426            clr     a
0460 C0E0      1427            push    acc
0462 C0E0      1428            push    acc
0464 747F      1429            mov     a,#0x7F
0466 C0E0      1430            push    acc
0468 7443      1431            mov     a,#0x43
046A C0E0      1432            push    acc
046C 8E82      1433            mov     dpl,r6
046E 8F83      1434            mov     dph,r7
0470 88F0      1435            mov     b,r0
0472 E9        1436            mov     a,r1
0473 120100    1437            lcall   ___fsdiv
0476 AE82      1438            mov     r6,dpl
0478 AF83      1439            mov     r7,dph
047A A8F0      1440            mov     r0,b
047C F9        1441            mov     r1,a
047D E581      1442            mov     a,sp
047F 24FC      1443            add     a,#0xfc
0481 F581      1444            mov     sp,a
0483 C006      1445            push    ar6
0485 C007      1446            push    ar7
0487 C000      1447            push    ar0
0489 C001      1448            push    ar1
048B 903333    1449            mov     dptr,#0x3333
048E 75F053    1450            mov     b,#0x53
0491 7440      1451            mov     a,#0x40
0493 120100    1452            lcall   ___fsmul
0496 AE82      1453            mov     r6,dpl
0498 AF83      1454            mov     r7,dph
049A A8F0      1455            mov     r0,b
049C F9        1456            mov     r1,a
049D E581      1457            mov     a,sp
049F 24FC      1458            add     a,#0xfc
04A1 F581      1459            mov     sp,a
04A3 D005      1460            pop     ar5
04A5 D004      1461            pop     ar4
04A7 D003      1462            pop     ar3
04A9 D002      1463            pop     ar2
04AB           1464   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:273: if(time_update_flag==1) // If the clock has been updated, refresh the display
04AB           1465   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:275: time_update_flag=0;
04AB 10E098    1466            jbc     _time_update_flag,L017080?
04AE 020100    1467            ljmp    L017002?
04B1           1468   L017080?:
04B1           1469   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:276: sprintf(str, "V=%5.2f", voltage); // Display the voltage at pin P0.1
04B1 C002      1470            push    ar2
04B3 C003      1471            push    ar3
04B5 C004      1472            push    ar4
04B7 C005      1473            push    ar5
04B9 C006      1474            push    ar6
04BB C007      1475            push    ar7
04BD C000      1476            push    ar0
04BF C001      1477            push    ar1
04C1 7418      1478            mov     a,#__str_2
04C3 C0E0      1479            push    acc
04C5 74B3      1480            mov     a,#(__str_2 >> 8)
04C7 C0E0      1481            push    acc
04C9 7480      1482            mov     a,#0x80
04CB C0E0      1483            push    acc
04CD 74B8      1484            mov     a,#_main_str_1_96
04CF C0E0      1485            push    acc
04D1 74A4      1486            mov     a,#(_main_str_1_96 >> 8)
04D3 C0E0      1487            push    acc
04D5 7440      1488            mov     a,#0x40
04D7 C0E0      1489            push    acc
04D9 120100    1490            lcall   _sprintf
04DC E581      1491            mov     a,sp
04DE 24F6      1492            add     a,#0xf6
04E0 F581      1493            mov     sp,a
04E2           1494   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:277: LCDprint(str, 1, 1);
04E2 753001    1495            mov     _LCDprint_PARM_2,#0x01
04E5 D240      1496            setb    _LCDprint_PARM_3
04E7 90A4B8    1497            mov     dptr,#_main_str_1_96
04EA 75F040    1498            mov     b,#0x40
04ED 120100    1499            lcall   _LCDprint
04F0           1500   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:278: sprintf(str, "%02d:%02d", mins, secs); // Display the clock
04F0 AEB8      1501            mov     r6,_secs
04F2 7F00      1502            mov     r7,#0x00
04F4 A8F0      1503            mov     r0,_mins
04F6 7900      1504            mov     r1,#0x00
04F8 C006      1505            push    ar6
04FA C007      1506            push    ar7
04FC C000      1507            push    ar0
04FE C001      1508            push    ar1
0500 7458      1509            mov     a,#__str_3
0502 C0E0      1510            push    acc
0504 74B3      1511            mov     a,#(__str_3 >> 8)
0506 C0E0      1512            push    acc
0508 7480      1513            mov     a,#0x80
050A C0E0      1514            push    acc
050C 74B8      1515            mov     a,#_main_str_1_96
050E C0E0      1516            push    acc
0510 74A4      1517            mov     a,#(_main_str_1_96 >> 8)
0512 C0E0      1518            push    acc
0514 7440      1519            mov     a,#0x40
0516 C0E0      1520            push    acc
0518 120100    1521            lcall   _sprintf
051B E581      1522            mov     a,sp
051D 24F6      1523            add     a,#0xf6
051F F581      1524            mov     sp,a
0521           1525   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:279: LCDprint(str, 2, 1);
0521 753002    1526            mov     _LCDprint_PARM_2,#0x02
0524 D240      1527            setb    _LCDprint_PARM_3
0526 90A4B8    1528            mov     dptr,#_main_str_1_96
0529 75F040    1529            mov     b,#0x40
052C 120100    1530            lcall   _LCDprint
052F D005      1531            pop     ar5
0531 D004      1532            pop     ar4
0533 D003      1533            pop     ar3
0535 D002      1534            pop     ar2
0537           1535   L017002?:
0537           1536   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:283: if((left<thresh)&&(right<thresh))cur_error = 0;
0537 C002      1537            push    ar2
0539 C003      1538            push    ar3
053B C004      1539            push    ar4
053D C005      1540            push    ar5
053F E4        1541            clr     a
0540 C0E0      1542            push    acc
0542 C0E0      1543            push    acc
0544 C0E0      1544            push    acc
0546 C0E0      1545            push    acc
0548 85C882    1546            mov     dpl,_main_left_2_97
054B 85C983    1547            mov     dph,(_main_left_2_97 + 1)
054E 85CAF0    1548            mov     b,(_main_left_2_97 + 2)
0551 E5CB      1549            mov     a,(_main_left_2_97 + 3)
0553 120100    1550            lcall   ___fslt
0556 AE82      1551            mov     r6,dpl
0558 E581      1552            mov     a,sp
055A 24FC      1553            add     a,#0xfc
055C F581      1554            mov     sp,a
055E D005      1555            pop     ar5
0560 D004      1556            pop     ar4
0562 D003      1557            pop     ar3
0564 D002      1558            pop     ar2
0566 EE        1559            mov     a,r6
0567 6001      1560            jz      L017004?
0569 C002      1561            push    ar2
056B C003      1562            push    ar3
056D C004      1563            push    ar4
056F C005      1564            push    ar5
0571 C006      1565            push    ar6
0573 E4        1566            clr     a
0574 C0E0      1567            push    acc
0576 C0E0      1568            push    acc
0578 C0E0      1569            push    acc
057A C0E0      1570            push    acc
057C 851882    1571            mov     dpl,_main_right_2_97
057F 851983    1572            mov     dph,(_main_right_2_97 + 1)
0582 851AF0    1573            mov     b,(_main_right_2_97 + 2)
0585 E51B      1574            mov     a,(_main_right_2_97 + 3)
0587 120100    1575            lcall   ___fslt
058A AF82      1576            mov     r7,dpl
058C E581      1577            mov     a,sp
058E 24FC      1578            add     a,#0xfc
0590 F581      1579            mov     sp,a
0592 D006      1580            pop     ar6
0594 D005      1581            pop     ar5
0596 D004      1582            pop     ar4
0598 D003      1583            pop     ar3
059A D002      1584            pop     ar2
059C EF        1585            mov     a,r7
059D 6001      1586            jz      L017004?
059F 7A00      1587            mov     r2,#0x00
05A1 7B00      1588            mov     r3,#0x00
05A3 7C00      1589            mov     r4,#0x00
05A5 7D00      1590            mov     r5,#0x00
05A7           1591   L017004?:
05A7           1592   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:284: if((left<thresh)&&(right>thresh))cur_error = -1;
05A7 EE        1593            mov     a,r6
05A8 6001      1594            jz      L017007?
05AA C002      1595            push    ar2
05AC C003      1596            push    ar3
05AE C004      1597            push    ar4
05B0 C005      1598            push    ar5
05B2 E4        1599            clr     a
05B3 C0E0      1600            push    acc
05B5 C0E0      1601            push    acc
05B7 C0E0      1602            push    acc
05B9 C0E0      1603            push    acc
05BB 851882    1604            mov     dpl,_main_right_2_97
05BE 851983    1605            mov     dph,(_main_right_2_97 + 1)
05C1 851AF0    1606            mov     b,(_main_right_2_97 + 2)
05C4 E51B      1607            mov     a,(_main_right_2_97 + 3)
05C6 120100    1608            lcall   ___fsgt
05C9 AE82      1609            mov     r6,dpl
05CB E581      1610            mov     a,sp
05CD 24FC      1611            add     a,#0xfc
05CF F581      1612            mov     sp,a
05D1 D005      1613            pop     ar5
05D3 D004      1614            pop     ar4
05D5 D003      1615            pop     ar3
05D7 D002      1616            pop     ar2
05D9 EE        1617            mov     a,r6
05DA 6001      1618            jz      L017007?
05DC 7A00      1619            mov     r2,#0x00
05DE 7B00      1620            mov     r3,#0x00
05E0 7C80      1621            mov     r4,#0x80
05E2 7DBF      1622            mov     r5,#0xBF
05E4           1623   L017007?:
05E4           1624   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:285: if((left>thresh)&&(right<thresh))cur_error = 1;
05E4 C002      1625            push    ar2
05E6 C003      1626            push    ar3
05E8 C004      1627            push    ar4
05EA C005      1628            push    ar5
05EC E4        1629            clr     a
05ED C0E0      1630            push    acc
05EF C0E0      1631            push    acc
05F1 C0E0      1632            push    acc
05F3 C0E0      1633            push    acc
05F5 85C882    1634            mov     dpl,_main_left_2_97
05F8 85C983    1635            mov     dph,(_main_left_2_97 + 1)
05FB 85CAF0    1636            mov     b,(_main_left_2_97 + 2)
05FE E5CB      1637            mov     a,(_main_left_2_97 + 3)
0600 120100    1638            lcall   ___fsgt
0603 AE82      1639            mov     r6,dpl
0605 E581      1640            mov     a,sp
0607 24FC      1641            add     a,#0xfc
0609 F581      1642            mov     sp,a
060B D005      1643            pop     ar5
060D D004      1644            pop     ar4
060F D003      1645            pop     ar3
0611 D002      1646            pop     ar2
0613 EE        1647            mov     a,r6
0614 6001      1648            jz      L017010?
0616 C002      1649            push    ar2
0618 C003      1650            push    ar3
061A C004      1651            push    ar4
061C C005      1652            push    ar5
061E C006      1653            push    ar6
0620 E4        1654            clr     a
0621 C0E0      1655            push    acc
0623 C0E0      1656            push    acc
0625 C0E0      1657            push    acc
0627 C0E0      1658            push    acc
0629 851882    1659            mov     dpl,_main_right_2_97
062C 851983    1660            mov     dph,(_main_right_2_97 + 1)
062F 851AF0    1661            mov     b,(_main_right_2_97 + 2)
0632 E51B      1662            mov     a,(_main_right_2_97 + 3)
0634 120100    1663            lcall   ___fslt
0637 AF82      1664            mov     r7,dpl
0639 E581      1665            mov     a,sp
063B 24FC      1666            add     a,#0xfc
063D F581      1667            mov     sp,a
063F D006      1668            pop     ar6
0641 D005      1669            pop     ar5
0643 D004      1670            pop     ar4
0645 D003      1671            pop     ar3
0647 D002      1672            pop     ar2
0649 EF        1673            mov     a,r7
064A 6001      1674            jz      L017010?
064C 7A00      1675            mov     r2,#0x00
064E 7B00      1676            mov     r3,#0x00
0650 7C80      1677            mov     r4,#0x80
0652 7D3F      1678            mov     r5,#0x3F
0654           1679   L017010?:
0654           1680   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:286: if((left>thresh)&&(right>thresh)){
0654 EE        1681            mov     a,r6
0655 6001      1682            jz      L017017?
0657 C002      1683            push    ar2
0659 C003      1684            push    ar3
065B C004      1685            push    ar4
065D C005      1686            push    ar5
065F E4        1687            clr     a
0660 C0E0      1688            push    acc
0662 C0E0      1689            push    acc
0664 C0E0      1690            push    acc
0666 C0E0      1691            push    acc
0668 851882    1692            mov     dpl,_main_right_2_97
066B 851983    1693            mov     dph,(_main_right_2_97 + 1)
066E 851AF0    1694            mov     b,(_main_right_2_97 + 2)
0671 E51B      1695            mov     a,(_main_right_2_97 + 3)
0673 120100    1696            lcall   ___fsgt
0676 AE82      1697            mov     r6,dpl
0678 E581      1698            mov     a,sp
067A 24FC      1699            add     a,#0xfc
067C F581      1700            mov     sp,a
067E D005      1701            pop     ar5
0680 D004      1702            pop     ar4
0682 D003      1703            pop     ar3
0684 D002      1704            pop     ar2
0686 EE        1705            mov     a,r6
0687 6001      1706            jz      L017017?
0689           1707   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:287: if(pre_error>0) cur_error = 5;
0689 C002      1708            push    ar2
068B C003      1709            push    ar3
068D C004      1710            push    ar4
068F C005      1711            push    ar5
0691 E4        1712            clr     a
0692 C0E0      1713            push    acc
0694 C0E0      1714            push    acc
0696 C0E0      1715            push    acc
0698 C0E0      1716            push    acc
069A 854882    1717            mov     dpl,_main_pre_error_1_96
069D 854983    1718            mov     dph,(_main_pre_error_1_96 + 1)
06A0 854AF0    1719            mov     b,(_main_pre_error_1_96 + 2)
06A3 E54B      1720            mov     a,(_main_pre_error_1_96 + 3)
06A5 120100    1721            lcall   ___fsgt
06A8 AE82      1722            mov     r6,dpl
06AA E581      1723            mov     a,sp
06AC 24FC      1724            add     a,#0xfc
06AE F581      1725            mov     sp,a
06B0 D005      1726            pop     ar5
06B2 D004      1727            pop     ar4
06B4 D003      1728            pop     ar3
06B6 D002      1729            pop     ar2
06B8 EE        1730            mov     a,r6
06B9 6001      1731            jz      L017013?
06BB 7A00      1732            mov     r2,#0x00
06BD 7B00      1733            mov     r3,#0x00
06BF 7CA0      1734            mov     r4,#0xA0
06C1 7D40      1735            mov     r5,#0x40
06C3           1736   L017013?:
06C3           1737   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:288: if(pre_error<=0) cur_error = -5;
06C3 EE        1738            mov     a,r6
06C4 7001      1739            jnz     L017017?
06C6 FA        1740            mov     r2,a
06C7 FB        1741            mov     r3,a
06C8 7CA0      1742            mov     r4,#0xA0
06CA 7DC0      1743            mov     r5,#0xC0
06CC           1744   L017017?:
06CC           1745   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:293: d = k_d*(cur_error - pre_error)/dt;
06CC C002      1746            push    ar2
06CE C003      1747            push    ar3
06D0 C004      1748            push    ar4
06D2 C005      1749            push    ar5
06D4 C048      1750            push    _main_pre_error_1_96
06D6 C049      1751            push    (_main_pre_error_1_96 + 1)
06D8 C04A      1752            push    (_main_pre_error_1_96 + 2)
06DA C04B      1753            push    (_main_pre_error_1_96 + 3)
06DC 8A82      1754            mov     dpl,r2
06DE 8B83      1755            mov     dph,r3
06E0 8CF0      1756            mov     b,r4
06E2 ED        1757            mov     a,r5
06E3 120100    1758            lcall   ___fssub
06E6 AE82      1759            mov     r6,dpl
06E8 AF83      1760            mov     r7,dph
06EA A8F0      1761            mov     r0,b
06EC F9        1762            mov     r1,a
06ED E581      1763            mov     a,sp
06EF 24FC      1764            add     a,#0xfc
06F1 F581      1765            mov     sp,a
06F3 746F      1766            mov     a,#0x6F
06F5 C0E0      1767            push    acc
06F7 7412      1768            mov     a,#0x12
06F9 C0E0      1769            push    acc
06FB 7483      1770            mov     a,#0x83
06FD C0E0      1771            push    acc
06FF 743A      1772            mov     a,#0x3A
0701 C0E0      1773            push    acc
0703 8E82      1774            mov     dpl,r6
0705 8F83      1775            mov     dph,r7
0707 88F0      1776            mov     b,r0
0709 E9        1777            mov     a,r1
070A 120100    1778            lcall   ___fsdiv
070D AE82      1779            mov     r6,dpl
070F AF83      1780            mov     r7,dph
0711 A8F0      1781            mov     r0,b
0713 F9        1782            mov     r1,a
0714 E581      1783            mov     a,sp
0716 24FC      1784            add     a,#0xfc
0718 F581      1785            mov     sp,a
071A D005      1786            pop     ar5
071C D004      1787            pop     ar4
071E D003      1788            pop     ar3
0720 D002      1789            pop     ar2
0722           1790   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:295: cor = p + d;
0722 C002      1791            push    ar2
0724 C003      1792            push    ar3
0726 C004      1793            push    ar4
0728 C005      1794            push    ar5
072A C006      1795            push    ar6
072C C007      1796            push    ar7
072E C000      1797            push    ar0
0730 C001      1798            push    ar1
0732 8A82      1799            mov     dpl,r2
0734 8B83      1800            mov     dph,r3
0736 8CF0      1801            mov     b,r4
0738 ED        1802            mov     a,r5
0739 120100    1803            lcall   ___fsadd
073C 8582F8    1804            mov     _main_cor_1_96,dpl
073F 8583F9    1805            mov     (_main_cor_1_96 + 1),dph
0742 85F0FA    1806            mov     (_main_cor_1_96 + 2),b
0745 F5FB      1807            mov     (_main_cor_1_96 + 3),a
0747 E581      1808            mov     a,sp
0749 24FC      1809            add     a,#0xfc
074B F581      1810            mov     sp,a
074D           1811   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:298: new_speed_low = def_speed - cor;
074D C0F8      1812            push    _main_cor_1_96
074F C0F9      1813            push    (_main_cor_1_96 + 1)
0751 C0FA      1814            push    (_main_cor_1_96 + 2)
0753 C0FB      1815            push    (_main_cor_1_96 + 3)
0755 900000    1816            mov     dptr,#0x0000
0758 75F0C8    1817            mov     b,#0xC8
075B 7442      1818            mov     a,#0x42
075D 120100    1819            lcall   ___fssub
0760 858298    1820            mov     _main_new_speed_low_1_96,dpl
0763 858399    1821            mov     (_main_new_speed_low_1_96 + 1),dph
0766 85F09A    1822            mov     (_main_new_speed_low_1_96 + 2),b
0769 F59B      1823            mov     (_main_new_speed_low_1_96 + 3),a
076B E581      1824            mov     a,sp
076D 24FC      1825            add     a,#0xfc
076F F581      1826            mov     sp,a
0771           1827   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:299: new_speed_high = def_speed + cor;
0771 C0F8      1828            push    _main_cor_1_96
0773 C0F9      1829            push    (_main_cor_1_96 + 1)
0775 C0FA      1830            push    (_main_cor_1_96 + 2)
0777 C0FB      1831            push    (_main_cor_1_96 + 3)
0779 900000    1832            mov     dptr,#0x0000
077C 75F0C8    1833            mov     b,#0xC8
077F 7442      1834            mov     a,#0x42
0781 120100    1835            lcall   ___fsadd
0784 8582E8    1836            mov     _main_new_speed_high_1_96,dpl
0787 8583E9    1837            mov     (_main_new_speed_high_1_96 + 1),dph
078A 85F0EA    1838            mov     (_main_new_speed_high_1_96 + 2),b
078D F5EB      1839            mov     (_main_new_speed_high_1_96 + 3),a
078F E581      1840            mov     a,sp
0791 24FC      1841            add     a,#0xfc
0793 F581      1842            mov     sp,a
0795           1843   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:302: if(new_speed_low<0){
0795 E4        1844            clr     a
0796 C0E0      1845            push    acc
0798 C0E0      1846            push    acc
079A C0E0      1847            push    acc
079C C0E0      1848            push    acc
079E 859882    1849            mov     dpl,_main_new_speed_low_1_96
07A1 859983    1850            mov     dph,(_main_new_speed_low_1_96 + 1)
07A4 859AF0    1851            mov     b,(_main_new_speed_low_1_96 + 2)
07A7 E59B      1852            mov     a,(_main_new_speed_low_1_96 + 3)
07A9 120100    1853            lcall   ___fslt
07AC AE82      1854            mov     r6,dpl
07AE E581      1855            mov     a,sp
07B0 24FC      1856            add     a,#0xfc
07B2 F581      1857            mov     sp,a
07B4 D005      1858            pop     ar5
07B6 D004      1859            pop     ar4
07B8 D003      1860            pop     ar3
07BA D002      1861            pop     ar2
07BC EE        1862            mov     a,r6
07BD 6001      1863            jz      L017020?
07BF           1864   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:303: new_speed_low = 0;
07BF 759800    1865            mov     _main_new_speed_low_1_96,#0x00
07C2 759900    1866            mov     (_main_new_speed_low_1_96 + 1),#0x00
07C5 759A00    1867            mov     (_main_new_speed_low_1_96 + 2),#0x00
07C8 759B00    1868            mov     (_main_new_speed_low_1_96 + 3),#0x00
07CB           1869   L017020?:
07CB           1870   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:306: if(new_speed_high>100){
07CB C002      1871            push    ar2
07CD C003      1872            push    ar3
07CF C004      1873            push    ar4
07D1 C005      1874            push    ar5
07D3 E4        1875            clr     a
07D4 C0E0      1876            push    acc
07D6 C0E0      1877            push    acc
07D8 74C8      1878            mov     a,#0xC8
07DA C0E0      1879            push    acc
07DC 7442      1880            mov     a,#0x42
07DE C0E0      1881            push    acc
07E0 85E882    1882            mov     dpl,_main_new_speed_high_1_96
07E3 85E983    1883            mov     dph,(_main_new_speed_high_1_96 + 1)
07E6 85EAF0    1884            mov     b,(_main_new_speed_high_1_96 + 2)
07E9 E5EB      1885            mov     a,(_main_new_speed_high_1_96 + 3)
07EB 120100    1886            lcall   ___fsgt
07EE AE82      1887            mov     r6,dpl
07F0 E581      1888            mov     a,sp
07F2 24FC      1889            add     a,#0xfc
07F4 F581      1890            mov     sp,a
07F6 D005      1891            pop     ar5
07F8 D004      1892            pop     ar4
07FA D003      1893            pop     ar3
07FC D002      1894            pop     ar2
07FE EE        1895            mov     a,r6
07FF 6001      1896            jz      L017022?
0801           1897   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:307: new_speed_high = 100;
0801 75E800    1898            mov     _main_new_speed_high_1_96,#0x00
0804 75E900    1899            mov     (_main_new_speed_high_1_96 + 1),#0x00
0807 75EAC8    1900            mov     (_main_new_speed_high_1_96 + 2),#0xC8
080A 75EB42    1901            mov     (_main_new_speed_high_1_96 + 3),#0x42
080D           1902   L017022?:
080D           1903   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:312: if(cur_error > 0){                
080D C002      1904            push    ar2
080F C003      1905            push    ar3
0811 C004      1906            push    ar4
0813 C005      1907            push    ar5
0815 E4        1908            clr     a
0816 C0E0      1909            push    acc
0818 C0E0      1910            push    acc
081A C0E0      1911            push    acc
081C C0E0      1912            push    acc
081E 8A82      1913            mov     dpl,r2
0820 8B83      1914            mov     dph,r3
0822 8CF0      1915            mov     b,r4
0824 ED        1916            mov     a,r5
0825 120100    1917            lcall   ___fsgt
0828 AE82      1918            mov     r6,dpl
082A E581      1919            mov     a,sp
082C 24FC      1920            add     a,#0xfc
082E F581      1921            mov     sp,a
0830 D005      1922            pop     ar5
0832 D004      1923            pop     ar4
0834 D003      1924            pop     ar3
0836 D002      1925            pop     ar2
0838 EE        1926            mov     a,r6
0839 6001      1927            jz      L017032?
083B           1928   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:313: pwm_left = new_speed_low;
083B 859882    1929            mov     dpl,_main_new_speed_low_1_96
083E 859983    1930            mov     dph,(_main_new_speed_low_1_96 + 1)
0841 859AF0    1931            mov     b,(_main_new_speed_low_1_96 + 2)
0844 E59B      1932            mov     a,(_main_new_speed_low_1_96 + 3)
0846 C002      1933            push    ar2
0848 C003      1934            push    ar3
084A C004      1935            push    ar4
084C C005      1936            push    ar5
084E 120100    1937            lcall   ___fs2uchar
0851 858270    1938            mov     _pwm_left,dpl
0854           1939   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:314: pwm_right = new_speed_high;               
0854 85E882    1940            mov     dpl,_main_new_speed_high_1_96
0857 85E983    1941            mov     dph,(_main_new_speed_high_1_96 + 1)
085A 85EAF0    1942            mov     b,(_main_new_speed_high_1_96 + 2)
085D E5EB      1943            mov     a,(_main_new_speed_high_1_96 + 3)
085F 120100    1944            lcall   ___fs2uchar
0862 858230    1945            mov     _pwm_right,dpl
0865 D005      1946            pop     ar5
0867 D004      1947            pop     ar4
0869 D003      1948            pop     ar3
086B D002      1949            pop     ar2
086D 020100    1950            ljmp    L017033?
0870           1951   L017032?:
0870           1952   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:316: else if (cur_error < 0){
0870 C002      1953            push    ar2
0872 C003      1954            push    ar3
0874 C004      1955            push    ar4
0876 C005      1956            push    ar5
0878 E4        1957            clr     a
0879 C0E0      1958            push    acc
087B C0E0      1959            push    acc
087D C0E0      1960            push    acc
087F C0E0      1961            push    acc
0881 8A82      1962            mov     dpl,r2
0883 8B83      1963            mov     dph,r3
0885 8CF0      1964            mov     b,r4
0887 ED        1965            mov     a,r5
0888 120100    1966            lcall   ___fslt
088B AE82      1967            mov     r6,dpl
088D E581      1968            mov     a,sp
088F 24FC      1969            add     a,#0xfc
0891 F581      1970            mov     sp,a
0893 D005      1971            pop     ar5
0895 D004      1972            pop     ar4
0897 D003      1973            pop     ar3
0899 D002      1974            pop     ar2
089B EE        1975            mov     a,r6
089C 6001      1976            jz      L017029?
089E           1977   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:317: pwm_left = new_speed_high;
089E 85E882    1978            mov     dpl,_main_new_speed_high_1_96
08A1 85E983    1979            mov     dph,(_main_new_speed_high_1_96 + 1)
08A4 85EAF0    1980            mov     b,(_main_new_speed_high_1_96 + 2)
08A7 E5EB      1981            mov     a,(_main_new_speed_high_1_96 + 3)
08A9 C002      1982            push    ar2
08AB C003      1983            push    ar3
08AD C004      1984            push    ar4
08AF C005      1985            push    ar5
08B1 120100    1986            lcall   ___fs2uchar
08B4 858270    1987            mov     _pwm_left,dpl
08B7           1988   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:318: pwm_right = new_speed_low;
08B7 859882    1989            mov     dpl,_main_new_speed_low_1_96
08BA 859983    1990            mov     dph,(_main_new_speed_low_1_96 + 1)
08BD 859AF0    1991            mov     b,(_main_new_speed_low_1_96 + 2)
08C0 E59B      1992            mov     a,(_main_new_speed_low_1_96 + 3)
08C2 120100    1993            lcall   ___fs2uchar
08C5 858230    1994            mov     _pwm_right,dpl
08C8 D005      1995            pop     ar5
08CA D004      1996            pop     ar4
08CC D003      1997            pop     ar3
08CE D002      1998            pop     ar2
08D0 8001      1999            sjmp    L017033?
08D2           2000   L017029?:
08D2           2001   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:321: if(pre_error > 0){
08D2 C002      2002            push    ar2
08D4 C003      2003            push    ar3
08D6 C004      2004            push    ar4
08D8 C005      2005            push    ar5
08DA E4        2006            clr     a
08DB C0E0      2007            push    acc
08DD C0E0      2008            push    acc
08DF C0E0      2009            push    acc
08E1 C0E0      2010            push    acc
08E3 854882    2011            mov     dpl,_main_pre_error_1_96
08E6 854983    2012            mov     dph,(_main_pre_error_1_96 + 1)
08E9 854AF0    2013            mov     b,(_main_pre_error_1_96 + 2)
08EC E54B      2014            mov     a,(_main_pre_error_1_96 + 3)
08EE 120100    2015            lcall   ___fsgt
08F1 AE82      2016            mov     r6,dpl
08F3 E581      2017            mov     a,sp
08F5 24FC      2018            add     a,#0xfc
08F7 F581      2019            mov     sp,a
08F9 D005      2020            pop     ar5
08FB D004      2021            pop     ar4
08FD D003      2022            pop     ar3
08FF D002      2023            pop     ar2
0901 EE        2024            mov     a,r6
0902 6001      2025            jz      L017026?
0904           2026   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:322: pwm_left = 100;
0904 757064    2027            mov     _pwm_left,#0x64
0907           2028   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:323: pwm_right = 20;
0907 753014    2029            mov     _pwm_right,#0x14
090A 8001      2030            sjmp    L017033?
090C           2031   L017026?:
090C           2032   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:325: else if (pre_error < 0){
090C C002      2033            push    ar2
090E C003      2034            push    ar3
0910 C004      2035            push    ar4
0912 C005      2036            push    ar5
0914 E4        2037            clr     a
0915 C0E0      2038            push    acc
0917 C0E0      2039            push    acc
0919 C0E0      2040            push    acc
091B C0E0      2041            push    acc
091D 854882    2042            mov     dpl,_main_pre_error_1_96
0920 854983    2043            mov     dph,(_main_pre_error_1_96 + 1)
0923 854AF0    2044            mov     b,(_main_pre_error_1_96 + 2)
0926 E54B      2045            mov     a,(_main_pre_error_1_96 + 3)
0928 120100    2046            lcall   ___fslt
092B AE82      2047            mov     r6,dpl
092D E581      2048            mov     a,sp
092F 24FC      2049            add     a,#0xfc
0931 F581      2050            mov     sp,a
0933 D005      2051            pop     ar5
0935 D004      2052            pop     ar4
0937 D003      2053            pop     ar3
0939 D002      2054            pop     ar2
093B EE        2055            mov     a,r6
093C 6001      2056            jz      L017033?
093E           2057   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:326: pwm_right = 100;
093E 753064    2058            mov     _pwm_right,#0x64
0941           2059   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:327: pwm_left = 20;
0941 757014    2060            mov     _pwm_left,#0x14
0944           2061   L017033?:
0944           2062   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:330: counter++;
0944 C002      2063            push    ar2
0946 C003      2064            push    ar3
0948 C004      2065            push    ar4
094A C005      2066            push    ar5
094C E4        2067            clr     a
094D C0E0      2068            push    acc
094F C0E0      2069            push    acc
0951 7480      2070            mov     a,#0x80
0953 C0E0      2071            push    acc
0955 743F      2072            mov     a,#0x3F
0957 C0E0      2073            push    acc
0959 853882    2074            mov     dpl,_main_counter_1_96
095C 853983    2075            mov     dph,(_main_counter_1_96 + 1)
095F 853AF0    2076            mov     b,(_main_counter_1_96 + 2)
0962 E53B      2077            mov     a,(_main_counter_1_96 + 3)
0964 120100    2078            lcall   ___fsadd
0967 858238    2079            mov     _main_counter_1_96,dpl
096A 858339    2080            mov     (_main_counter_1_96 + 1),dph
096D 85F03A    2081            mov     (_main_counter_1_96 + 2),b
0970 F53B      2082            mov     (_main_counter_1_96 + 3),a
0972 E581      2083            mov     a,sp
0974 24FC      2084            add     a,#0xfc
0976 F581      2085            mov     sp,a
0978 D005      2086            pop     ar5
097A D004      2087            pop     ar4
097C D003      2088            pop     ar3
097E D002      2089            pop     ar2
0980           2090   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:331: pre_error = cur_error;
0980 8A48      2091            mov     _main_pre_error_1_96,r2
0982 8B49      2092            mov     (_main_pre_error_1_96 + 1),r3
0984 8C4A      2093            mov     (_main_pre_error_1_96 + 2),r4
0986 8D4B      2094            mov     (_main_pre_error_1_96 + 3),r5
0988           2095   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:332: if(counter==30){
0988 C002      2096            push    ar2
098A C003      2097            push    ar3
098C C004      2098            push    ar4
098E C005      2099            push    ar5
0990 E4        2100            clr     a
0991 C0E0      2101            push    acc
0993 C0E0      2102            push    acc
0995 74F0      2103            mov     a,#0xF0
0997 C0E0      2104            push    acc
0999 7441      2105            mov     a,#0x41
099B C0E0      2106            push    acc
099D 853882    2107            mov     dpl,_main_counter_1_96
09A0 853983    2108            mov     dph,(_main_counter_1_96 + 1)
09A3 853AF0    2109            mov     b,(_main_counter_1_96 + 2)
09A6 E53B      2110            mov     a,(_main_counter_1_96 + 3)
09A8 120100    2111            lcall   ___fseq
09AB AE82      2112            mov     r6,dpl
09AD E581      2113            mov     a,sp
09AF 24FC      2114            add     a,#0xfc
09B1 F581      2115            mov     sp,a
09B3 D005      2116            pop     ar5
09B5 D004      2117            pop     ar4
09B7 D003      2118            pop     ar3
09B9 D002      2119            pop     ar2
09BB EE        2120            mov     a,r6
09BC 6001      2121            jz      L017035?
09BE           2122   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:333: printf("Error:%5.2f Left:%5.2f Right:%5.2f                 \r", cur_error, left, right, pwm_left, pwm_right);
09BE AE30      2123            mov     r6,_pwm_right
09C0 7F00      2124            mov     r7,#0x00
09C2 A870      2125            mov     r0,_pwm_left
09C4 7900      2126            mov     r1,#0x00
09C6 C002      2127            push    ar2
09C8 C003      2128            push    ar3
09CA C004      2129            push    ar4
09CC C005      2130            push    ar5
09CE C006      2131            push    ar6
09D0 C007      2132            push    ar7
09D2 C000      2133            push    ar0
09D4 C001      2134            push    ar1
09D6 C018      2135            push    _main_right_2_97
09D8 C019      2136            push    (_main_right_2_97 + 1)
09DA C01A      2137            push    (_main_right_2_97 + 2)
09DC C01B      2138            push    (_main_right_2_97 + 3)
09DE C0C8      2139            push    _main_left_2_97
09E0 C0C9      2140            push    (_main_left_2_97 + 1)
09E2 C0CA      2141            push    (_main_left_2_97 + 2)
09E4 C0CB      2142            push    (_main_left_2_97 + 3)
09E6 C002      2143            push    ar2
09E8 C003      2144            push    ar3
09EA C004      2145            push    ar4
09EC C005      2146            push    ar5
09EE 7418      2147            mov     a,#__str_4
09F0 C0E0      2148            push    acc
09F2 74B8      2149            mov     a,#(__str_4 >> 8)
09F4 C0E0      2150            push    acc
09F6 7480      2151            mov     a,#0x80
09F8 C0E0      2152            push    acc
09FA 120100    2153            lcall   _printf
09FD E581      2154            mov     a,sp
09FF 24ED      2155            add     a,#0xed
0A01 F581      2156            mov     sp,a
0A03 D005      2157            pop     ar5
0A05 D004      2158            pop     ar4
0A07 D003      2159            pop     ar3
0A09 D002      2160            pop     ar2
0A0B           2161   L017035?:
0A0B           2162   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:339: if(line_sensor>thresh){
0A0B C002      2163            push    ar2
0A0D C003      2164            push    ar3
0A0F C004      2165            push    ar4
0A11 C005      2166            push    ar5
0A13 E4        2167            clr     a
0A14 C0E0      2168            push    acc
0A16 C0E0      2169            push    acc
0A18 C0E0      2170            push    acc
0A1A C0E0      2171            push    acc
0A1C 858882    2172            mov     dpl,_main_line_sensor_2_97
0A1F 858983    2173            mov     dph,(_main_line_sensor_2_97 + 1)
0A22 858AF0    2174            mov     b,(_main_line_sensor_2_97 + 2)
0A25 E58B      2175            mov     a,(_main_line_sensor_2_97 + 3)
0A27 120100    2176            lcall   ___fsgt
0A2A AE82      2177            mov     r6,dpl
0A2C E581      2178            mov     a,sp
0A2E 24FC      2179            add     a,#0xfc
0A30 F581      2180            mov     sp,a
0A32 D005      2181            pop     ar5
0A34 D004      2182            pop     ar4
0A36 D003      2183            pop     ar3
0A38 D002      2184            pop     ar2
0A3A EE        2185            mov     a,r6
0A3B 7001      2186            jnz     L017098?
0A3D 020100    2187            ljmp    L017050?
0A40           2188   L017098?:
0A40           2189   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:341: if(line_counter == 0){
0A40 E5F0      2190            mov     a,_line_counter
0A42 45F1      2191            orl     a,(_line_counter + 1)
0A44 7001      2192            jnz     L017037?
0A46           2193   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:343: line_counter++;
0A46 7401      2194            mov     a,#0x01
0A48 25F0      2195            add     a,_line_counter
0A4A F5F0      2196            mov     _line_counter,a
0A4C E4        2197            clr     a
0A4D 35F1      2198            addc    a,(_line_counter + 1)
0A4F F5F1      2199            mov     (_line_counter + 1),a
0A51           2200   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:344: line_counter_flag = 1;
0A51 D290      2201            setb    _line_counter_flag
0A53 8001      2202            sjmp    L017038?
0A55           2203   L017037?:
0A55           2204   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:348: line_counter++;                                   
0A55 7401      2205            mov     a,#0x01
0A57 25F0      2206            add     a,_line_counter
0A59 F5F0      2207            mov     _line_counter,a
0A5B E4        2208            clr     a
0A5C 35F1      2209            addc    a,(_line_counter + 1)
0A5E F5F1      2210            mov     (_line_counter + 1),a
0A60           2211   L017038?:
0A60           2212   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:351: if(line_timer == 2000){
0A60 74D0      2213            mov     a,#0xD0
0A62 B57058    2214            cjne    a,_line_timer,L017040?
0A65 7407      2215            mov     a,#0x07
0A67 B57158    2216            cjne    a,(_line_timer + 1),L017040?
0A6A           2217   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:352: line_counter_flag = 0;
0A6A C290      2218            clr     _line_counter_flag
0A6C           2219   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:353: line_timer = 0;
0A6C E4        2220            clr     a
0A6D F570      2221            mov     _line_timer,a
0A6F F571      2222            mov     (_line_timer + 1),a
0A71           2223   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:354: exec = 1;                                         
0A71 75B001    2224            mov     _exec,#0x01
0A74 E4        2225            clr     a
0A75 F5B1      2226            mov     (_exec + 1),a
0A77           2227   L017040?:
0A77           2228   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:357: if(exec == 1){
0A77 7401      2229            mov     a,#0x01
0A79 B5B098    2230            cjne    a,_exec,L017102?
0A7C E4        2231            clr     a
0A7D B5B198    2232            cjne    a,(_exec + 1),L017102?
0A80 8001      2233            sjmp    L017103?
0A82           2234   L017102?:
0A82 020100    2235            ljmp    L017046?
0A85           2236   L017103?:
0A85           2237   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:358: switch(line_counter){
0A85 AEF0      2238            mov     r6,_line_counter
0A87 AFF1      2239            mov     r7,(_line_counter + 1)
0A89 BE0258    2240            cjne    r6,#0x02,L017104?
0A8C BF0058    2241            cjne    r7,#0x00,L017104?
0A8F 8001      2242            sjmp    L017041?
0A91           2243   L017104?:
0A91 BE03D8    2244            cjne    r6,#0x03,L017105?
0A94 BF00D8    2245            cjne    r7,#0x00,L017105?
0A97 8001      2246            sjmp    L017042?
0A99           2247   L017105?:
0A99           2248   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:359: case 2:
0A99 BE0458    2249            cjne    r6,#0x04,L017044?
0A9C BF0058    2250            cjne    r7,#0x00,L017044?
0A9F 8001      2251            sjmp    L017043?
0AA1           2252   L017041?:
0AA1           2253   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:360: printf("TURNING LEFT \r;");
0AA1 C002      2254            push    ar2
0AA3 C003      2255            push    ar3
0AA5 C004      2256            push    ar4
0AA7 C005      2257            push    ar5
0AA9 74D8      2258            mov     a,#__str_5
0AAB C0E0      2259            push    acc
0AAD 74BB      2260            mov     a,#(__str_5 >> 8)
0AAF C0E0      2261            push    acc
0AB1 7480      2262            mov     a,#0x80
0AB3 C0E0      2263            push    acc
0AB5 120100    2264            lcall   _printf
0AB8 1581      2265            dec     sp
0ABA 1581      2266            dec     sp
0ABC 1581      2267            dec     sp
0ABE D005      2268            pop     ar5
0AC0 D004      2269            pop     ar4
0AC2 D003      2270            pop     ar3
0AC4 D002      2271            pop     ar2
0AC6           2272   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:361: case 3:
0AC6           2273   L017042?:
0AC6           2274   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:362: printf("TURNING Right \r;");
0AC6 C002      2275            push    ar2
0AC8 C003      2276            push    ar3
0ACA C004      2277            push    ar4
0ACC C005      2278            push    ar5
0ACE 7418      2279            mov     a,#__str_6
0AD0 C0E0      2280            push    acc
0AD2 74BC      2281            mov     a,#(__str_6 >> 8)
0AD4 C0E0      2282            push    acc
0AD6 7480      2283            mov     a,#0x80
0AD8 C0E0      2284            push    acc
0ADA 120100    2285            lcall   _printf
0ADD 1581      2286            dec     sp
0ADF 1581      2287            dec     sp
0AE1 1581      2288            dec     sp
0AE3 D005      2289            pop     ar5
0AE5 D004      2290            pop     ar4
0AE7 D003      2291            pop     ar3
0AE9 D002      2292            pop     ar2
0AEB           2293   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:363: case 4:
0AEB           2294   L017043?:
0AEB           2295   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:364: printf("Starting \r;");
0AEB C002      2296            push    ar2
0AED C003      2297            push    ar3
0AEF C004      2298            push    ar4
0AF1 C005      2299            push    ar5
0AF3 7458      2300            mov     a,#__str_7
0AF5 C0E0      2301            push    acc
0AF7 74BC      2302            mov     a,#(__str_7 >> 8)
0AF9 C0E0      2303            push    acc
0AFB 7480      2304            mov     a,#0x80
0AFD C0E0      2305            push    acc
0AFF 120100    2306            lcall   _printf
0B02 1581      2307            dec     sp
0B04 1581      2308            dec     sp
0B06 1581      2309            dec     sp
0B08 D005      2310            pop     ar5
0B0A D004      2311            pop     ar4
0B0C D003      2312            pop     ar3
0B0E D002      2313            pop     ar2
0B10           2314   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:365: }
0B10           2315   L017044?:
0B10           2316   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:366: exec=0;
0B10           2317   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:367: line_counter = 0;
0B10 E4        2318            clr     a
0B11 F5B0      2319            mov     _exec,a
0B13 F5B1      2320            mov     (_exec + 1),a
0B15 F5F0      2321            mov     _line_counter,a
0B17 F5F1      2322            mov     (_line_counter + 1),a
0B19           2323   L017046?:
0B19           2324   ;        C:\Users\r6z8\Documents\GitHub\eece_284\Code\main code.c:369: printf("line counter: %d", line_counter);
0B19 C002      2325            push    ar2
0B1B C003      2326            push    ar3
0B1D C004      2327            push    ar4
0B1F C005      2328            push    ar5
0B21 C0F0      2329            push    _line_counter
0B23 C0F1      2330            push    (_line_counter + 1)
0B25 7498      2331            mov     a,#__str_8
0B27 C0E0      2332            push    acc
0B29 74BC      2333            mov     a,#(__str_8 >> 8)
0B2B C0E0      2334            push    acc
0B2D 7480      2335            mov     a,#0x80
0B2F C0E0      2336            push    acc
0B31 120100    2337            lcall   _printf
0B34 E581      2338            mov     a,sp
0B36 24FB      2339            add     a,#0xfb
0B38 F581      2340            mov     sp,a
0B3A D005      2341            pop     ar5
0B3C D004      2342            pop     ar4
0B3E D003      2343            pop     ar3
0B40 D002      2344            pop     ar2
0B42 020100    2345            ljmp    L017050?
0B45           2346            rseg R_CSEG
0B45           2347   
0000           2348            rseg R_XINIT
0000           2349   
0000           2350            rseg R_CONST
0000           2351   __str_0:
0000 56303A20  2352            db 'V0: %4.2fV'
     25342E32
     6656
000A 00        2353            db 0x00
000B           2354   __str_1:
000B 56313A20  2355            db 'V1: %4.2fV'
     25342E32
     6656
0015 00        2356            db 0x00
0016           2357   __str_2:
0016 563D2535  2358            db 'V=%5.2f'
     2E3266
001D 00        2359            db 0x00
001E           2360   __str_3:
001E 25303264  2361            db '%02d:%02d'
     3A253032
     64
0027 00        2362            db 0x00
0028           2363   __str_4:
0028 4572726F  2364            db 'Error:%5.2f Left:%5.2f Right:%5.2f                 '
     723A2535
     2E326620
     4C656674
     3A25352E
     32662052
     69676874
     3A25352E
     32662020
     20202020
     20202020
     20202020
     202020
005B 0D        2365            db 0x0D
005C 00        2366            db 0x00
005D           2367   __str_5:
005D 5455524E  2368            db 'TURNING LEFT '
     494E4720
     4C454654
     20
006A 0D        2369            db 0x0D
006B 3B        2370            db ';'
006C 00        2371            db 0x00
006D           2372   __str_6:
006D 5455524E  2373            db 'TURNING Right '
     494E4720
     52696768
     7420
007B 0D        2374            db 0x0D
007C 3B        2375            db ';'
007D 00        2376            db 0x00
007E           2377   __str_7:
007E 53746172  2378            db 'Starting '
     74696E67
     20
0087 0D        2379            db 0x0D
0088 3B        2380            db ';'
0089 00        2381            db 0x00
008A           2382   __str_8:
008A 6C696E65  2383            db 'line counter: %d'
     20636F75
     6E746572
     3A202564
009A 00        2384            db 0x00
009B           2385   
000E           2386            CSEG
000E           2387   
000E           2388   end
